mads 1.9.9
     1 				;
     2 				; THE!RAMDISK for THE!CART for SpartaDOS 3 
     3 				; Previous work RD/RAMDISK.COM for SpartaDOS 3 by FTe
     4 				;   RD Ver 2.3 07-14-86 (c) 1984 by FTe
     5 				;
     6 				; System equates
     7 				;
     8 				; OS EQUATES
     9 				; ----------
    10 				; 
    11 				; IO EQUATES
    12 				; 
    13 = 0002			ICCOM       = $0002
    14 = 0008			ICBLL       = $0008
    15 = 0009			ICBLH       = $0009
    16 				; 
    17 				; OS VARIABLES FOR XL/XE
    18 				; 
    19 				; PAGE 0
    20 				; 
    21 = 000A			DOSVEC      = $000A
    22 = 000C			DOSINI      = $000C
    23 = 0012			RTCLOK      = $0012
    24 = 0032			BUFRLO      = $0032
    25 = 0033			BUFRHI      = $0033
    26 = 0034			BFENLO      = $0034
    27 = 0035			BFENHI      = $0035
    28 = 0042			CRITIC      = $0042
    29 				; 
    30 				; PAGE 2
    31 				; 
    32 = 022F			SDMCTL      = $022F
    33 = 02E7			MEMLO       = $02E7
    34 				; 
    35 				; PAGE 3
    36 				; 
    37 = 0300			DDEVIC      = $0300
    38 = 0301			DUNIT       = $0301
    39 = 0302			DCOMND      = $0302
    40 = 0304			DBUFLO      = $0304
    41 = 0305			DBUFHI      = $0305
    42 = 0308			DBYTLO      = $0308
    43 = 0309			DBYTHI      = $0309
    44 = 030A			DAUX1       = $030A
    45 = 030B			DAUX2       = $030B
    46 = 0340			IOCB0       = $0340
    47 				; 
    48 				; PIA
    49 				; 
    50 = D300			PORTA       = $D300
    51 = D301			PORTB       = $D301
    52 = D302			PACTL       = $D302
    53 = D303			PBCTL       = $D303
    54 				; 
    55 				; ANTIC
    56 				;
    57 = D400			DMACTL      = $D400 
    58 = D40A			WSYNC       = $D40A
    59 = D40E			NMIEN       = $D40E
    60 				; 
    61 				; ROM VECTORS
    62 				; 
    63 = E456			CIOV        = $E456
    64 				;
    65 				; SpartaDOS 
    66 				;
    67 = 000A			SD_BUFOFF      = $0A ; offset in line buffer
    68 = 003F			SD_LBUF        = $3F ; offset to line buffer
    69 = 0003			SD_ZCRNAME     = $03 ; offset for jmp to crunch name
    70 = 0021			SD_COMFNAM     = $21 ; offset to result buffer for crunch name 
    71 = 000A			SD_LSIO        = $0A ; negative offset to SIO vector
    72
    73 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    74 				; 
    75 				; The!Cart programming information
    76 				; (c) 2013 Matthias Reichl
    77 				;
    78 				; The!Cart is equipped with 128MB flash (Spansion S29GL01
    79 				; chip), 512k RAM and a 256-byte SPI EEPROM (Microchip
    80 				; 25AA020A). The memory is addressed using 16384 8k banks
    81 				; (64 8k banks when using RAM instead of flash).
    82 				; 
    83 				; The cartridge configuration registers are located at
    84 				; $D5A0-$D5A8. All registers are read/write unless noted
    85 				; otherwise. Unused bits shall be written as '0' and
    86 				; always read back as '0'.
    87 				; 
    88 				; Powerup configuration is 8k mode ($A000-$BFFF) using
    89 				; flash bank 0, writes to flash are disabled.
    90 				; 
    91 				; Depending on the selected cartridge mode additional
    92 				; registers are enabled at $D5xx.
    93 				; 
    94 				; The primary bank register also serves as a base bank
    95 				; register for the various sub-modes.
    96 				; 
    97 				; The secondary bank register is only used in "flexi mode".
    98 				;
    99
   100 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   101 				; 
   102 				; The!Cart Register (from-to,default)
   103 				;
   104
   105 				; Mode Select
   106 = D5A6			TCMOSL = $d5a6    ; mode ($00-$3d,$01)
   107 				; Cartridge mode is selected with bits 0-5 of $D5A6, values
   108 				; other than the ones listed here are reserved (and result
   109 				; in "cartridge off"):
   110 				; $00: off, cartridge disabled
   111 				; $01: 8k banks at $A000
   112 				; $02: AtariMax 1MBit / 128k
   113 				; $03: Atarimax 8MBit / 1MB
   114 				; $04: OSS M091
   115 				; $08: SDX 64k cart, $D5Ex banking
   116 				; $09: Diamond GOS 64k cart, $D5Dx banking
   117 				; $0A: Express 64k cart, $D57x banking
   118 				; $0C: Atrax 128k cart
   119 				; $0D: Williams 64k cart
   120 				; $20: flexi mode (separate 8k banks at $A000 and $8000)
   121 				; $21: standard 16k cart at $8000-$BFFF
   122 				; $22: MegaMax 16k mode (up to 2MB), AtariMax 8Mbit banking
   123 				; $23: Blizzard 16k
   124 				; $24: Sic!Cart 512k
   125 				; $28: 16k Mega cart
   126 				; $29: 32k Mega cart
   127 				; $2A: 64k Mega cart
   128 				; $2B: 128k Mega cart
   129 				; $2C: 256k Mega cart
   130 				; $2D: 512k Mega cart
   131 				; $2E: 1024k Mega cart
   132 				; $2F: 2048k Mega cart
   133 				; $30: 32k XEGS cart
   134 				; $31: 64k XEGS cart
   135 				; $32: 128k XEGS cart
   136 				; $33: 256k XEGS cart
   137 				; $34: 512k XEGS cart
   138 				; $35: 1024k XEGS cart
   139 				; $38: 32k SWXEGS cart
   140 				; $39: 64k SWXEGS cart
   141 				; $3A: 128k SWXEGS cart
   142 				; $3B: 256k SWXEGS cart
   143 				; $3C: 512k SWXEGS cart
   144 				; $3D: 1024k SWXEGS cart
   145 = 0000			TCMOSL.OFF   = $00    ; off, cartridge disabled
   146 = 0001			TCMOSL.8K    = $01    ; 8k banks at $A000
   147 = 0021			TCMOSL.FLEXI = $21    ; flexi mode,
   148 				                         ; separate 8k banks at $A000 and $8000
   149 = 0021			TCMOSL.16K   = $21    ; standard 16k cart at $8000-$BFFF
   150
   151 				; how to figure out that The!Cart is not active?
   152 				; If the address is not used then the XL returns $ff but
   153 				; the XE (and old 800) return $d5 (high byte of address,
   154 				; the value of the last bus cycle)
   155 = 00FF			TCMOSL.XLLOCK  = $ff    ; config lock or not present
   156 = 00D5			TCMOSL.XELOCK  = $d5    ; config lock or not present
   157
   158 				; Mode Flash/RAM Select
   159 = D5A7			TCMOFR = $d5a7    ;flash/RAM mode (0-15,0)
   160 				; bit 0: primary bank write enable (0=readOnly, 1=write)
   161 				; bit 1: primary bank source (0=flash, 1=RAM)
   162 				; bit 2: secondary bank write enable (0=readOnly, 1=write)
   163 				; bit 3: secondary bank source (0=flash, 1=RAM)
   164 = 0003			TCMOFR.PBRAM = $03    ; primary bank RAM
   165 = 000C			TCMOFR.SBRAM = $0C    ; secondary bank RAM
   166
   167 				; Primary Bank
   168 = D5A0			TCPBRL = $d5a0    ; register low byte (0-255,0)
   169 = D5A1			TCPBRH = $d5a1    ; register high byte (0-63,0)
   170 = D5A2			TCPBEN = $d5a2    ; enable (0=dis-1=en,1)
   171
   172 				; Secondary Bank 
   173 = D5A3			TCSBRL = $d5a3    ; register low byte (0-255,0)
   174 = D5A4			TCSBRH = $d5a4  ; register high byte (0-63,0)
   175 = D5A5			TCSBEN = $d5a5    ; enable (0=dis-1=en,0)
   176
   177 				; SPI interface to EEPROM
   178 = D5A8			TCINEP = $d5a8
   179 				; bit 0: SPI CLK
   180 				; bit 1: SPI CS
   181 				; bit 7: SPI data in (on reads), SPI data out (on writes)
   182
   183 				; configuration lock
   184 = D5AF			TCCOLO = $d5af
   185 				; Writing to this register disables "The!Cart" registers
   186 				; at $d5aX.
   187
   188
   189 				; macros
   190
   191 				; saves register: pushes bank register on stack
   192 				M_cart_push .macro
   193 				            lda TCMOSL
   194 				            pha
   195 				            lda TCMOFR
   196 				            pha
   197 				            lda TCPBRL
   198 				            pha
   199 				            lda TCPBRH
   200 				            pha
   201 				            lda TCPBEN
   202 				            pha
   203 				            .endm
   204
   205 				; restores register from stack: pops from stack
   206 				M_cart_pop  .macro
   207 				            pla                 
   208 				            sta TCPBEN          
   209 				            pla                 
   210 				            sta TCPBRH          
   211 				            pla                 
   212 				            sta TCPBRL          
   213 				            pla                 
   214 				            sta TCMOFR          
   215 				            pla                 
   216 				            sta TCMOSL          
   217 				            .endm
   218 				 
   219 				; saves register and sync: pushes bank register on stack
   220 				M_cart_sync_push .macro
   221 				            lda SDMCTL          ; DMA control
   222 				            pha
   223 				            lda #$00
   224 				            sta SDMCTL
   225 				            sta DMACTL
   226 				            M_cart_push
   227 				            sei                 ; disable interrupts
   228 				            lda #$00
   229 				            sta NMIEN
   230 				            .endm
   231
   232 				; restores register from stack anf sync: pops from stack
   233 				M_cart_sync_pop  .macro
   234 				            M_cart_pop
   235 				            pla                 ; restore DMA control
   236 				            sta SDMCTL
   237 				            sta DMACTL
   238 				            lda #$E0            ; enable interrupts
   239 				            sta NMIEN
   240 				            cli
   241 				            .endm
   242
   243 				; set bank: number of bank in X, uses A
   244 				M_cart_set  .macro
   245 				; set new The!Cart mode
   246 				            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
   247 				            sta TCMOSL          
   248 				            lda #TCMOFR.PBRAM       ; set to RAM
   249 				            sta TCMOFR
   250 				            txa
   251 				            asl   
   252 				            sta TCPBRL              ; get bank number from X
   253 				            lda #$00                     
   254 				            sta TCPBRH              ; set high to $00
   255 				            lda #$01
   256 				            sta TCPBEN              ; enable        
   257 				            .endm
   258
   259 				;
   260 				; Start of code
   261 				;
   262 				            org $3000
   263 				            
   264 				; save the!cart registers
   265 3000			            M_cart_sync_push            
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 FFFF> 3000-357E> AD 2F +             lda SDMCTL          ; DMA control
     2 3003 48			            pha
     3 3004 A9 00		            lda #$00
     4 3006 8D 2F 02		            sta SDMCTL
     5 3009 8D 00 D4		            sta DMACTL
     1 300C AD A6 D5		            lda TCMOSL
     2 300F 48			            pha
     3 3010 AD A7 D5		            lda TCMOFR
     4 3013 48			            pha
     5 3014 AD A0 D5		            lda TCPBRL
     6 3017 48			            pha
     7 3018 AD A1 D5		            lda TCPBRH
     8 301B 48			            pha
     9 301C AD A2 D5		            lda TCPBEN
    10 301F 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
     7 3020 78			            sei                 ; disable interrupts
     8 3021 A9 00		            lda #$00
     9 3023 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   266 				; try to save and write banks            
   267 3026 A2 1F		            ldx #$1F
   268 3028			BNKSAVWRT   M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 3028 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 302A 8D A6 D5		            sta TCMOSL          
     4 302D A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 302F 8D A7 D5		            sta TCMOFR
     6 3032 8A			            txa
     7 3033 0A			            asl   
     8 3034 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3037 A9 00		            lda #$00                     
    10 3039 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 303C A9 01		            lda #$01
    12 303E 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   269 3041 AD 00 90		            lda $9000
   270 3044 9D 7F 36		            sta BNKSAVBUF,X
   271 3047 8E 00 90		            stx $9000
   272 304A AD 00 B0		            lda $B000
   273 304D 9D 9F 36		            sta BNKSAVBUF2,X
   274 3050 8E 00 B0		            stx $B000
   275 3053 CA			            dex
   276 3054 10 D2		            bpl BNKSAVWRT
   277 				; check banks
   278 3056 E8			BNKCHK      inx
   279 3057			            M_cart_set            
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 3057 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3059 8D A6 D5		            sta TCMOSL          
     4 305C A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 305E 8D A7 D5		            sta TCMOFR
     6 3061 8A			            txa
     7 3062 0A			            asl   
     8 3063 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3066 A9 00		            lda #$00                     
    10 3068 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 306B A9 01		            lda #$01
    12 306D 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   280 3070 EC 00 90		            cpx $9000
   281 3073 D0 0A		            bne BNKSTOP
   282 3075 EC 00 B0		            cpx $B000
   283 3078 D0 05		            bne BNKSTOP
   284 307A E0 1F		            cpx #$1F
   285 307C D0 D8		            bne BNKCHK
   286 307E E8			            inx
   287 307F 8E 60 31		BNKSTOP     stx BNKCNT
   288 				; restore banks
   289 3082 A2 00		            ldx #$00
   290 3084			BNKRESTR    M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 3084 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3086 8D A6 D5		            sta TCMOSL          
     4 3089 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 308B 8D A7 D5		            sta TCMOFR
     6 308E 8A			            txa
     7 308F 0A			            asl   
     8 3090 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3093 A9 00		            lda #$00                     
    10 3095 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3098 A9 01		            lda #$01
    12 309A 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   291 309D BD 7F 36		            lda BNKSAVBUF,X
   292 30A0 8D 00 90		            sta $9000
   293 30A3 BD 9F 36		            lda BNKSAVBUF2,X
   294 30A6 8D 00 B0		            sta $B000
   295 30A9 E8			            inx
   296 30AA E0 20		            cpx #$20
   297 30AC D0 D6		            bne BNKRESTR
   298 				            
   299 				; restore the!cart registers
   300 30AE			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 30AE 68			            pla                 
     2 30AF 8D A2 D5		            sta TCPBEN          
     3 30B2 68			            pla                 
     4 30B3 8D A1 D5		            sta TCPBRH          
     5 30B6 68			            pla                 
     6 30B7 8D A0 D5		            sta TCPBRL          
     7 30BA 68			            pla                 
     8 30BB 8D A7 D5		            sta TCMOFR          
     9 30BE 68			            pla                 
    10 30BF 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
     2 30C2 68			            pla                 ; restore DMA control
     3 30C3 8D 2F 02		            sta SDMCTL
     4 30C6 8D 00 D4		            sta DMACTL
     5 30C9 A9 E0		            lda #$E0            ; enable interrupts
     6 30CB 8D 0E D4		            sta NMIEN
     7 30CE 58			            cli
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   301
   302 				; info message
   303 30CF 20 A4 33		            jsr PRINT
   304 30D2 54 48 45 21 52 41 +             .byte 'THE!RAMDISK for THE!CART vers47f',$9B,$FF
   305
   306 				; check bank count
   307 30F4 AE 60 31		            ldx BNKCNT
   308 30F7 E0 20		            cpx #$20
   309 30F9 F0 50		            beq RAMDISKINI
   310
   311 				; no banks            
   312 30FB 20 A4 33		            jsr PRINT
   313 30FE 20 20 45 72 72 6F +             .byte '  Error - 512k RAM THE!CART not found',$9B
   314 3124 20 20 55 73 65 20 +             .byte '  Use SHIFT+RETURN/ESC in start menu',$9B,$FF
   315 314A 60			            rts
   316 				                        
   317 314B			RAMDISKINI
   318 				; check for parameter
   319 314B A0 0A		            ldy #SD_BUFOFF
   320 314D B1 0A		            lda (DOSVEC),Y
   321 314F 18			            clc
   322 3150 69 3F		            adc #SD_LBUF
   323 3152 A8			            tay
   324 3153 B1 0A		            lda (DOSVEC),Y
   325 3155 C9 9B		            cmp #$9B
   326 3157 D0 08		            bne PRSPARM
   327 				; no parameter -> error
   328 3159 4C 9C 31		            jmp PARAMERR
   329
   330 				; jump for jsr to crunch name
   331 315C 4C FF FF		CRNAME      jmp $FFFF
   332
   333 315F FF			CHKFRMT     .byte $FF
   334 3160 00			BNKCNT      .byte $00
   335
   336 				; set crunch name address
   337 3161 A5 0A		PRSPARM     lda DOSVEC
   338 3163 18			            clc
   339 3164 69 03		            adc #SD_ZCRNAME
   340 3166 8D 5D 31		            sta CRNAME+1
   341 3169 A5 0B		            lda DOSVEC+1
   342 316B 69 00		            adc #$00
   343 316D 8D 5E 31		            sta CRNAME+2
   344 				            
   345 				; parameter parsing            
   346 				; get drive number SD_COMFNAM starts alway with Dx:
   347 3170 20 5C 31		            jsr CRNAME
   348 3173 D0 27		            bne PARAMERR
   349 3175 A0 22		            ldy #SD_COMFNAM+1
   350 3177 B1 0A		            lda (DOSVEC),Y
   351 3179 29 0F		            and #$0F
   352 317B 8D 7E 35		            sta DRVNUM
   353 				; check options /N
   354 317E 20 5C 31		            jsr CRNAME
   355 3181 F0 4F		            beq PRSPAREND
   356 3183 A0 24		            ldy #SD_COMFNAM+3
   357 3185 B1 0A		            lda (DOSVEC),Y
   358 3187 C9 2F		            cmp #'/'
   359 3189 D0 11		            bne PARAMERR
   360 318B C8			PRSPARLOOP  iny
   361 318C B1 0A		            lda (DOSVEC),Y
   362 318E C9 9B		            cmp #$9B         ; end of parameter
   363 3190 F0 40		            beq PRSPAREND
   364 3192 C9 4E		PRSPARNXT   cmp #'N'         ; format ?
   365 3194 D0 06		            bne PARAMERR
   366 				; check format at startup to preserve existing RAM disk            
   367 3196 EE 5F 31		            inc CHKFRMT
   368 3199 4C 8B 31		            jmp PRSPARLOOP
   369 319C 20 A4 33		PARAMERR    jsr PRINT
   370 319F 20 20 45 72 72 6F +             .byte '  Error - Wrong parameter',$9B
   371 31B9 20 20 55 73 65 20 +             .byte '  Use RAMCART Dn: [/N]',$9B,$FF
   372 31D1 60			            rts
   373
   374 				; set jsr to original DOSINI
   375 31D2 A5 0C		PRSPAREND   lda DOSINI
   376 31D4 8D DB 33		            sta JSRDOSINI+1
   377 31D7 A5 0D		            lda DOSINI+1
   378 31D9 8D DC 33		            sta JSRDOSINI+2
   379
   380 				; set MEMLO oldaddress, realloc
   381 31DC AD E7 02		            lda MEMLO
   382 31DF 8D C0 37		            sta READSTADR
   383 31E2 8D C6 37		            sta CPYTOADR
   384 31E5 AD E8 02		            lda MEMLO+1
   385 31E8 8D C1 37		            sta READSTADR+1
   386 31EB 8D C7 37		            sta CPYTOADR+1
   387 				;
   388 				; start realloc
   389 				;
   390 31EE 20 F8 36		            jsr REASTART
   391
   392 				; set new DOSINI            
   393 31F1 A9 DA		REAL001     lda #<JSRDOSINI
   394 31F3 85 0C		            sta DOSINI
   395 31F5 A9 33		REAH001     lda #>JSRDOSINI
   396 31F7 85 0D		            sta DOSINI+1
   397 				; get SIO and patch for RAMDISK
   398 31F9 38			            sec
   399 31FA A5 0A		            lda DOSVEC
   400 31FC E9 0A		            sbc #SD_LSIO
   401 31FE 85 32		            sta BUFRLO
   402 3200 A5 0B		            lda DOSVEC+1
   403 3202 E9 00		            sbc #$00
   404 3204 85 33		            sta BUFRHI
   405 3206 A0 00		            ldy #$00
   406 3208 B1 32		            lda (BUFRLO),Y
   407 320A 8D F8 33		REAA001     sta JMPSIO+1      ;realloc $33CA
   408 320D A9 E8		REAL002     lda #<RAMDSIO
   409 320F 91 32		            sta (BUFRLO),Y
   410 3211 C8			            iny
   411 3212 B1 32		            lda (BUFRLO),Y
   412 3214 8D F9 33		REAA002     sta JMPSIO+2      ;realloc $33D4
   413 3217 A9 33		REAH002     lda #>RAMDSIO
   414 3219 91 32		            sta (BUFRLO),Y
   415 				; set MEMLO            
   416 321B 20 DD 33		REAA003     jsr SETMEMLO      ;realloc $33DB
   417 				; format if requested            
   418 321E 2C 5F 31		            bit CHKFRMT
   419 3221 30 01		            bmi FRMTRD
   420 3223 60			            rts
   421
   422 				; format ramdisk
   423 3224 20 A4 33		FRMTRD      jsr PRINT
   424 3227 20 20 52 41 4D 20 +             .byte '  RAM Cart formatted',$9B,$FF
   425
   426 				; save register
   427 323D			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 323D AD 2F 02		            lda SDMCTL          ; DMA control
     2 3240 48			            pha
     3 3241 A9 00		            lda #$00
     4 3243 8D 2F 02		            sta SDMCTL
     5 3246 8D 00 D4		            sta DMACTL
     1 3249 AD A6 D5		            lda TCMOSL
     2 324C 48			            pha
     3 324D AD A7 D5		            lda TCMOFR
     4 3250 48			            pha
     5 3251 AD A0 D5		            lda TCPBRL
     6 3254 48			            pha
     7 3255 AD A1 D5		            lda TCPBRH
     8 3258 48			            pha
     9 3259 AD A2 D5		            lda TCPBEN
    10 325C 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
     7 325D 78			            sei                 ; disable interrupts
     8 325E A9 00		            lda #$00
     9 3260 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   428
   429 				; set sector for VTOC part 1
   430 3263 A2 00		            ldx #$00
   431 3265			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 3265 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3267 8D A6 D5		            sta TCMOSL          
     4 326A A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 326C 8D A7 D5		            sta TCMOFR
     6 326F 8A			            txa
     7 3270 0A			            asl   
     8 3271 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3274 A9 00		            lda #$00                     
    10 3276 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3279 A9 01		            lda #$01
    12 327B 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   432 				; clear loop
   433 327E A9 00		            lda #$00
   434 3280 A8			            tay
   435 3281 99 00 80		FRMTCLP1    sta $8000,Y
   436 3284 99 00 81		            sta $8100,Y
   437 3287 99 00 82		            sta $8200,Y
   438 328A 99 00 83		            sta $8300,Y
   439 328D C8			            iny
   440 328E D0 F1		            bne FRMTCLP1
   441
   442 				; set sector for VTOC
   443 3290 A2 00		            ldx #$00
   444 3292			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 3292 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3294 8D A6 D5		            sta TCMOSL          
     4 3297 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3299 8D A7 D5		            sta TCMOFR
     6 329C 8A			            txa
     7 329D 0A			            asl   
     8 329E 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32A1 A9 00		            lda #$00                     
    10 32A3 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32A6 A9 01		            lda #$01
    12 32A8 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   445 				; header loop            
   446 32AB A0 2A		            ldy #$2A
   447 32AD B9 68 33		FRMTHLP     lda RDHEAD,Y
   448 32B0 99 00 80		            sta $8000,Y
   449 32B3 88			            dey
   450 32B4 10 F7		            bpl FRMTHLP
   451
   452 				; set sector for VTOC
   453 32B6 A2 00		            ldx #$00
   454 32B8			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 32B8 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32BA 8D A6 D5		            sta TCMOSL          
     4 32BD A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32BF 8D A7 D5		            sta TCMOFR
     6 32C2 8A			            txa
     7 32C3 0A			            asl   
     8 32C4 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32C7 A9 00		            lda #$00                     
    10 32C9 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32CC A9 01		            lda #$01
    12 32CE 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   455 				; set free sector VTOC             
   456 32D1 A9 20		            lda #$20            ; 16k bank count
   457 32D3 4A			            lsr
   458 32D4 4A			            lsr
   459 32D5 AA			            tax
   460 32D6 20 5B 33		FRMTVTOCLP  jsr FRMTSETVTOC
   461 32D9 AD 60 33		            lda FRMTVTOCIT+1
   462 32DC 18			            clc
   463 32DD 69 40		            adc #$40
   464 32DF 8D 60 33		            sta FRMTVTOCIT+1
   465 32E2 AD 61 33		            lda FRMTVTOCIT+2
   466 32E5 69 00		            adc #$00
   467 32E7 8D 61 33		            sta FRMTVTOCIT+2
   468 32EA CA			            dex
   469 32EB D0 E9		            bne FRMTVTOCLP
   470
   471 				; set sector for VTOC
   472 32ED A2 00		            ldx #$00
   473 32EF			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 32EF A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32F1 8D A6 D5		            sta TCMOSL          
     4 32F4 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32F6 8D A7 D5		            sta TCMOFR
     6 32F9 8A			            txa
     7 32FA 0A			            asl   
     8 32FB 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32FE A9 00		            lda #$00                     
    10 3300 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3303 A9 01		            lda #$01
    12 3305 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   474 				 ; set map sector
   475 3308 A9 04		            lda #$04 
   476 330A 8D 0F 80		            sta $800F     ; number of bit map sectors used on the disk
   477 330D 18			            clc
   478 330E 69 02		            adc #$02
   479 3310 8D 09 80		            sta $8009     ; first sector map of the MAIN directory
   480 3313 A9 00		            lda #$00 
   481 3315 8D 80 80		            sta $8080
   482 3318 A9 80		            lda #$80      ; low address of MAIN sector map
   483 331A 85 32		            sta BUFRLO
   484 331C A9 82		            lda #$82      ; high address of MAIN sector map
   485 331E 85 33		            sta BUFRHI   
   486 3320 18			            clc
   487 3321 A0 04		            ldy #$04
   488 3323 AD 09 80		            lda $8009
   489 3326 69 01		            adc #$01
   490 3328 91 32		            sta (BUFRLO),Y
   491 				; set MAIN sector map            
   492 332A A2 00		            ldx #$00
   493 332C A0 80		            ldy #$80
   494 332E BD 93 33		L349B       lda RDMAIN,X
   495 3331 91 32		            sta (BUFRLO),Y
   496 3333 E8			            inx
   497 3334 C8			            iny
   498 3335 E0 11		            cpx #$11
   499 3337 D0 F5		            bne L349B
   500
   501 				; restore register
   502 3339			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 3339 68			            pla                 
     2 333A 8D A2 D5		            sta TCPBEN          
     3 333D 68			            pla                 
     4 333E 8D A1 D5		            sta TCPBRH          
     5 3341 68			            pla                 
     6 3342 8D A0 D5		            sta TCPBRL          
     7 3345 68			            pla                 
     8 3346 8D A7 D5		            sta TCMOFR          
     9 3349 68			            pla                 
    10 334A 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
     2 334D 68			            pla                 ; restore DMA control
     3 334E 8D 2F 02		            sta SDMCTL
     4 3351 8D 00 D4		            sta DMACTL
     5 3354 A9 E0		            lda #$E0            ; enable interrupts
     6 3356 8D 0E D4		            sta NMIEN
     7 3359 58			            cli
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   503 				; finished
   504 335A 60			            rts
   505 				            
   506 				; set VTOC            
   507 335B A0 00		FRMTSETVTOC ldy #$00
   508 335D A9 FF		            lda #$FF
   509 335F 99 80 80		FRMTVTOCIT  sta $8080,Y
   510 3362 C8			            iny
   511 3363 C0 40		            cpy #$40
   512 3365 D0 F8		            bne FRMTVTOCIT
   513 3367 60			            rts
   514
   515 3368 00 03 00 07 E0 07 + RDHEAD      .byte $00,$03,$00,$07,$E0,$07,$4C,$80
   516 3370 30 03 00		            .byte $30,$03,$00 ;original $00,$04,$FB,$03
   517 3373 00 10 F8 0F		            .word $1000,$0ff8 ; 512k
   518 3377 01 02 00 20 00 00 +             .byte $01, $02,$00,$20,$00,$00,$00
   519 337E 43 41 52 54 35 31 +             .byte 'CART512K'
   520 3386 00 80 22 00 00 00 +             .byte $00,$80,$22,$00,$00,$00,$00,$00
   521 338E 00 16 00 00 00	            .byte $00,$16,$00,$00,$00
   522
   523 3393 08 00 00 11 00 00	RDMAIN      .byte $08,$00,$00,$11,$00,$00
   524 3399 4D 41 49 4E 20 20 +             .byte 'MAIN       '
   525
   526
   527 				; print subroutine            
   528 33A4 68			PRINT       pla
   529 33A5 8D B5 33		            sta PRINTITER+1
   530 33A8 68			            pla
   531 33A9 8D B6 33		            sta PRINTITER+2
   532 33AC EE B5 33		PRINTLOOP   inc PRINTITER+1
   533 33AF D0 03		            bne PRINTITER
   534 33B1 EE B6 33		            inc PRINTITER+2
   535 33B4 AD FF FF		PRINTITER   lda $FFFF
   536 33B7 C9 FF		            cmp #$FF
   537 33B9 F0 06		            beq PRINTEND
   538 33BB 20 CA 33		            jsr CIOPUTCHR
   539 33BE 4C AC 33		            jmp PRINTLOOP
   540 33C1 AD B6 33		PRINTEND    lda PRINTITER+2
   541 33C4 48			            pha
   542 33C5 AD B5 33		            lda PRINTITER+1
   543 33C8 48			            pha
   544 33C9 60			            rts
   545 				; call cio put char subroutine
   546 33CA A2 00		CIOPUTCHR   ldx #$00
   547 33CC 8E 48 03		            stx IOCB0+ICBLL
   548 33CF 8E 49 03		            stx IOCB0+ICBLH
   549 33D2 A0 0B		            ldy #$0B
   550 33D4 8C 42 03		            sty IOCB0+ICCOM
   551 33D7 4C 56 E4		            jmp CIOV
   552
   553
   554
   555 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   556 				;;; BEGIN OF REALLOC BLOCK
   557 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   558
   559 				; to realloc routines
   560 				; DOSINI set MEMLO at reset
   561 33DA			REABEGIN
   562 33DA 20 00 00		JSRDOSINI   jsr $0000
   563
   564 33DD			SETMEMLO    
   565 33DD A9 7F		REAL003     lda #<REAEND
   566 33DF 8D E7 02		            sta MEMLO
   567 33E2 A9 36		REAH003     lda #>REAEND
   568 33E4 8D E8 02		            sta MEMLO+1
   569 33E7 60			            rts
   570
   571 				; new DOSVEC for RAMDISK device
   572 33E8 AD 00 03		RAMDSIO     lda DDEVIC
   573 33EB C9 31		            cmp #$31
   574 33ED D0 08		            bne JMPSIO
   575 33EF AD 01 03		            lda DUNIT
   576 33F2 CD 7E 35		REAA004     cmp DRVNUM
   577 33F5 F0 03		            beq L358A
   578 33F7 4C 00 00		JMPSIO      jmp $0000
   579 				; wait for sync            
   580 33FA			L358A       
   581
   582 				            
   583 				; set buffer address
   584 33FA AD 04 03		            lda DBUFLO
   585 33FD 85 34		            sta BFENLO
   586 33FF AD 05 03		            lda DBUFHI
   587 3402 85 35		            sta BFENHI
   588 3404 AD 02 03		            lda DCOMND
   589
   590 				; command STATUS REQUEST
   591 3407 C9 53		            cmp #$53 
   592 3409 D0 1B		            bne NEXT1
   593 340B AD 79 35		REAA009     lda L36BF
   594 340E 4A			            lsr
   595 340F 4A			            lsr
   596 3410 49 30		            eor #$30
   597 3412 AC 75 35		REAA010     ldy L36BB
   598 3415 C0 1A		            cpy #$1A
   599 3417 D0 02		            bne L35B4
   600 3419 09 80		            ora #$80
   601 341B A0 00		L35B4       ldy #$00
   602 341D 91 34		            sta (BFENLO),Y
   603 341F C8			            iny
   604 3420 A9 FF		            lda #$FF
   605 3422 91 34		            sta (BFENLO),Y
   606 3424 30 22		            bmi JMPSIOEND
   607 				            
   608 				; command RETURN CONFIGURATION            
   609 3426 C9 4E		NEXT1       cmp #$4E
   610 3428 D0 0C		            bne NEXT2
   611 342A A0 0B		            ldy #$0B            ; 12 bytes
   612 342C			RETCNFLOOP
   613 342C B9 72 35		REAA011     lda CONFBUF,Y
   614 342F 91 34		            sta (BFENLO),Y
   615 3431 88			            dey
   616 3432 10 F8		            bpl RETCNFLOOP
   617 3434 30 12		            bmi JMPSIOEND
   618
   619 				; command SET CONFIGURATION
   620 3436 C9 4F		NEXT2       cmp #$4F
   621 3438 D0 11		            bne NEXT3
   622 343A A0 07		            ldy #$07
   623 343C B1 34		            lda (BFENLO),Y
   624 343E 8D 79 35		REAA012     sta L36BF
   625 3441 A0 03		            ldy #$03
   626 3443 B1 34		            lda (BFENLO),Y
   627 3445 8D 75 35		REAA013     sta L36BB
   628
   629 3448			JMPSIOEND
   630 3448 4C 6B 35		REAA014     jmp RDSIOEND
   631
   632 				; command FORMAT DISK
   633 344B C9 21		NEXT3       cmp #$21
   634 344D D0 0B		            bne NEXT4
   635 344F A0 00		SIOFRMT     ldy #$00
   636 3451 A9 FF		            lda #$FF
   637 3453 91 34		            sta (BFENLO),Y
   638 3455 C8			            iny
   639 3456 91 34		            sta (BFENLO),Y
   640 3458 D0 EE		            bne JMPSIOEND
   641
   642 				; command FORMAT DISK ENHANCED
   643 345A C9 22		NEXT4       cmp #$22
   644 345C D0 0C		            bne NEXT5
   645 345E A9 1A		            lda #$1A
   646 3460 8D 75 35		REAA015     sta L36BB
   647 3463 A9 80		            lda #$80
   648 3465 8D 79 35		REAA016     sta L36BF
   649 3468 D0 E5		            bne SIOFRMT
   650 				            
   651 				; command PUT/GET SECTOR 
   652 346A C9 52		NEXT5       cmp #$52            ; command GET SECTOR
   653 346C F0 0B		            beq PUTGETSEC
   654 346E C9 57		            cmp #$57            ; command PUT SECTOR WITH VERIFY
   655 3470 F0 07		            beq PUTGETSEC
   656 3472 C9 50		            cmp #$50            ; command PUT SECTOR
   657 3474 F0 03		            beq PUTGETSEC
   658 3476 4C 6E 35		REAA020     jmp RDSIOEND+3      ; error NAK, command not supported
   659 				; buffer address and calc byte count
   660 3479 A9 00		PUTGETSEC   lda #$00
   661 347B 85 32		            sta BUFRLO
   662 347D AD 0A 03		            lda DAUX1
   663 3480 38			            sec
   664 3481 E9 01		            sbc #$01
   665 3483 85 33		            sta BUFRHI
   666 3485 AD 0B 03		            lda DAUX2
   667 3488 E9 00		            sbc #$00
   668 348A 06 33		            asl BUFRHI
   669 348C 2A			            rol
   670 348D 2C 08 03		            bit DBYTLO
   671 3490 30 06		            bmi L3631
   672 3492 0E 79 35		REAA017     asl L36BF
   673 3495 06 33		            asl BUFRHI
   674 3497 2A			            rol
   675 3498 AA			L3631       tax                 ; set X with memory bank number
   676 3499 A5 33		            lda BUFRHI
   677 349B 4A			            lsr
   678 349C 4A			            lsr
   679 349D 66 32		            ror BUFRLO
   680 349F 09 80		            ora #$80
   681 34A1 85 33		            sta BUFRHI
   682 				; check for GET
   683 34A3 AD 02 03		            lda DCOMND
   684 34A6 C9 52		            cmp #$52
   685 34A8 F0 0D		            beq L3656           ; is GET
   686 				; PUT: put user data to buffer            
   687 34AA A0 00		            ldy #$00
   688 34AC B1 34		L364B       lda (BFENLO),Y
   689 34AE 99 7F 35		REAA005     sta BUFFERXX1,Y
   690 34B1 C8			            iny
   691 34B2 CC 08 03		            cpy DBYTLO
   692 34B5 D0 F5		            bne L364B
   693 				; check if bank number is in range            
   694 34B7 8A			L3656       txa                 ; check bank number
   695 34B8 C9 20		            cmp #$20
   696 34BA B0 BA		            bcs REAA020         ; intermediate jmp to NAK
   697 				; DMA control
   698 34BC AD 2F 02		            lda SDMCTL
   699 34BF 48			            pha
   700 34C0 A9 00		            lda #$00
   701 34C2 8D 2F 02		            sta SDMCTL
   702 34C5 8D 00 D4		            sta DMACTL
   703 				; all interrupts off
   704 34C8 78			            sei
   705 34C9 A9 00		            lda #$00
   706 34CB 8D 0E D4		            sta NMIEN
   707 				; save register
   708 34CE			            M_cart_push         ; save register
Macro: M_CART_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 34CE AD A6 D5		            lda TCMOSL
     2 34D1 48			            pha
     3 34D2 AD A7 D5		            lda TCMOFR
     4 34D5 48			            pha
     5 34D6 AD A0 D5		            lda TCPBRL
     6 34D9 48			            pha
     7 34DA AD A1 D5		            lda TCPBRH
     8 34DD 48			            pha
     9 34DE AD A2 D5		            lda TCPBEN
    10 34E1 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   709 				; set memory bank
   710 34E2			            M_cart_set          ; set bank, number in X
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     2 34E2 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 34E4 8D A6 D5		            sta TCMOSL          
     4 34E7 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 34E9 8D A7 D5		            sta TCMOFR
     6 34EC 8A			            txa
     7 34ED 0A			            asl   
     8 34EE 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 34F1 A9 00		            lda #$00                     
    10 34F3 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 34F6 A9 01		            lda #$01
    12 34F8 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   711 				; check for PUT
   712 34FB A0 00		            ldy #$00
   713 34FD AD 02 03		            lda DCOMND
   714 3500 C9 52		            cmp #$52
   715 3502 D0 3B		            bne L369B           ; is PUT
   716 				; GET: read data to buffer
   717 3504 B1 32		L367B       lda (BUFRLO),Y
   718 3506 99 7F 35		REAA006     sta BUFFERXX1,Y
   719 3509 C8			            iny
   720 350A CC 08 03		            cpy DBYTLO
   721 350D D0 F5		            bne L367B
   722 				; restore bank for write to user buffer
   723 350F			            M_cart_pop          ; restore register            
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 350F 68			            pla                 
     2 3510 8D A2 D5		            sta TCPBEN          
     3 3513 68			            pla                 
     4 3514 8D A1 D5		            sta TCPBRH          
     5 3517 68			            pla                 
     6 3518 8D A0 D5		            sta TCPBRL          
     7 351B 68			            pla                 
     8 351C 8D A7 D5		            sta TCMOFR          
     9 351F 68			            pla                 
    10 3520 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   724 3523 68			            pla                 ; restore DMA control
   725 3524 8D 2F 02		            sta SDMCTL
   726 3527 8D 00 D4		            sta DMACTL
   727 352A A9 E0		            lda #$E0            ; enable interrupts
   728 352C 8D 0E D4		            sta NMIEN
   729 352F 58			            cli
   730 				; GET: write buffer to user data            
   731 3530 A0 00		            ldy #$00
   732 3532			L368E
   733 3532 B9 7F 35		REAA008     lda BUFFERXX1,Y
   734 3535 91 34		            sta (BFENLO),Y
   735 3537 C8			            iny
   736 3538 CC 08 03		            cpy DBYTLO
   737 353B D0 F5		            bne L368E
   738 353D F0 2C		            beq RDSIOEND            
   739 				; PUT: buffer data to sector
   740 353F			L369B
   741 353F B9 7F 35		REAA007     lda BUFFERXX1,Y
   742 3542 91 32		            sta (BUFRLO),Y
   743 3544 C8			            iny
   744 3545 CC 08 03		            cpy DBYTLO
   745 3548 D0 F5		            bne L369B
   746 				; restore register
   747 354A			            M_cart_pop          ; restore register
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM]
     1 354A 68			            pla                 
     2 354B 8D A2 D5		            sta TCPBEN          
     3 354E 68			            pla                 
     4 354F 8D A1 D5		            sta TCPBRH          
     5 3552 68			            pla                 
     6 3553 8D A0 D5		            sta TCPBRL          
     7 3556 68			            pla                 
     8 3557 8D A7 D5		            sta TCMOFR          
     9 355A 68			            pla                 
    10 355B 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCARTF.ASM
   748 355E 68			            pla                 ; restore DMA control
   749 355F 8D 2F 02		            sta SDMCTL
   750 3562 8D 00 D4		            sta DMACTL
   751 3565 A9 E0		            lda #$E0            ; enable interrupts
   752 3567 8D 0E D4		            sta NMIEN
   753 356A 58			            cli
   754 				; enable interrupts and set rc            
   755 356B A0 01		RDSIOEND    ldy #$01
   756 356D 2C A0 8B		            bit $8BA0           ; $2c, ldy #$8b; bank/sector number error #139 NAK
   757
   758 3570 98			            tya                 ; set RC
   759 3571 60			            rts
   760 				            
   761 				; drive configuration buffer
   762 3572 28 01 12		CONFBUF     .byte $28,$01,$12
   763 3575 00 00 00 00		L36BB       .byte $00,$00,$00,$00
   764 3579 80 FF 00 00 00	L36BF       .byte $80,$FF,$00,$00,$00
   765
   766 357E 01			DRVNUM      .byte $01
   767 				; $100 Bytes
   768 357F			BUFFERXX1
   769 				;            org $37E6
   770 = 367F			REAEND      = BUFFERXX1 + $100
   771 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   772 				;;; END OF REALLOC BLOCK
   773 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   774
   775
   776 				; $20 Bytes
   777 = 367F			BNKSAVBUF   = REAEND
   778
   779 				; $20 bytes
   780 				;            org $3806
   781 = 369F			BNKSAVBUF2  = BNKSAVBUF + $20
   782
   783 				 
   784 				;           org $3826
   785 357F			            org BNKSAVBUF2 + $20
   786 				; realloc whole addresses
   787 36BF-37C9> 0B 32		REATAB      .word REAA001+1 ;$33CA
   788 36C1 15 32		            .word REAA002+1 ;$33D4
   789 36C3 1C 32		            .word REAA003+1 ;$33DB
   790 36C5 F3 33		            .word REAA004+1 ;$3583
   791 36C7 AF 34		            .word REAA005+1 ;$364E
   792 36C9 07 35		            .word REAA006+1 ;$367E
   793 36CB 40 35		            .word REAA007+1 ;$369C
   794 36CD 33 35		            .word REAA008+1 ;$368F
   795 36CF 0C 34		            .word REAA009+1 ;$35A5
   796 36D1 13 34		            .word REAA010+1 ;$35AC
   797 36D3 2D 34		            .word REAA011+1 ;$35C6
   798 36D5 3F 34		            .word REAA012+1 ;$35D8
   799 36D7 46 34		            .word REAA013+1 ;$35DF
   800 36D9 49 34		            .word REAA014+1 ;$35E2
   801 36DB 61 34		            .word REAA015+1 ;$35FA
   802 36DD 66 34		            .word REAA016+1 ;$35FF
   803 36DF 93 34		            .word REAA017+1 ;$362C
   804 36E1 77 34		            .word REAA020+1 ;$3610
   805 36E3 00 00		            .word $0000
   806 				 
   807 				; realloc address low byte           
   808 36E5 F2 31		            .word REAL001+1 ;$33B1
   809 36E7 0E 32		            .word REAL002+1 ;$33CD
   810 36E9 DE 33		            .word REAL003+1 ;$356E
   811 36EB 00 00		            .word $0000
   812 				; realloc address high byte (address to high byte and value of low byte)
   813 36ED F6 31		            .word REAH001+1  ;$33B5
   814 36EF DA			            .byte <JSRDOSINI ;$6A
   815 				                        
   816 36F0 18 32		            .word REAH002+1 ;$33D7
   817 36F2 E8			            .byte <RAMDSIO  ;$78
   818 				            
   819 36F3 E3 33		            .word REAH003+1  ;$3573
   820 36F5 7F			            .byte <BNKSAVBUF ;$E6
   821 				            
   822 36F6 00 00		            .word $0000
   823 				            
   824 36F8 A9 00		REASTART    lda #$00
   825 36FA 8D CA 37		            sta REALOOPCNT
   826 36FD AE CA 37		REALOOP     ldx REALOOPCNT
   827 3700 BD BC 37		            lda REATABADR,X
   828 3703 8D A2 37		            sta L3910+1
   829 3706 BD BD 37		            lda REATABADR+1,X
   830 3709 8D A3 37		            sta L3910+2
   831 370C 0D A2 37		            ora L3910+1
   832 370F D0 01		            bne L3881
   833 3711 60			            rts
   834 				            
   835 3712 38			L3881       sec
   836 3713 BD C0 37		            lda READSTADR,X
   837 3716 FD BE 37		            sbc REASRCADR,X
   838 3719 8D CB 37		            sta READIFLO
   839 371C BD C1 37		            lda READSTADR+1,X
   840 371F FD BF 37		            sbc REASRCADR+1,X
   841 3722 8D CC 37		            sta READIFHI
   842 				            
   843 3725 20 AD 37		L3894       jsr L391C
   844 3728 F0 13		            beq L38AC
   845 372A B1 D7		            lda ($D7),Y
   846 372C 18			            clc
   847 372D 6D CB 37		            adc READIFLO
   848 3730 91 D7		            sta ($D7),Y
   849 3732 C8			            iny
   850 3733 B1 D7		            lda ($D7),Y
   851 3735 6D CC 37		            adc READIFHI
   852 3738 91 D7		            sta ($D7),Y
   853 373A 4C 25 37		            jmp L3894
   854 373D 20 AD 37		L38AC       jsr L391C
   855 3740 F0 0B		            beq L38BC
   856 3742 B1 D7		            lda ($D7),Y
   857 3744 18			            clc
   858 3745 6D CB 37		            adc READIFLO
   859 3748 91 D7		            sta ($D7),Y
   860 374A 4C 3D 37		            jmp L38AC
   861 374D 20 AD 37		L38BC       jsr L391C
   862 3750 F0 11		            beq L38D2
   863 3752 20 A1 37		            jsr L3910
   864 3755 18			            clc
   865 3756 6D CB 37		            adc READIFLO
   866 3759 B1 D7		            lda ($D7),Y
   867 375B 6D CC 37		            adc READIFHI
   868 375E 91 D7		            sta ($D7),Y
   869 3760 4C 4D 37		            jmp L38BC
   870 3763 AE CA 37		L38D2       ldx REALOOPCNT
   871
   872 3766 BD C2 37		            lda CPYFROMADR,X
   873 3769 8D 84 37		            sta L38F2+1
   874 376C BD C3 37		            lda CPYFROMADR+1,X
   875 376F 8D 85 37		            sta L38F2+2
   876
   877 3772 BD C6 37		            lda CPYTOADR,X
   878 3775 8D 87 37		            sta L38F2+4
   879 3778 BD C7 37		            lda CPYTOADR+1,X
   880 377B 8D 88 37		            sta L38F2+5
   881
   882 377E BC C5 37		            ldy CPYLENGTH+1,X
   883 3781 A2 00		            ldx #$00
   884 3783 BD FF FF		L38F2       lda $FFFF,X
   885 3786 9D FF FF		            sta $FFFF,X
   886 3789 E8			            inx
   887 378A D0 F7		            bne L38F2
   888 378C EE 85 37		            inc L38F2+2
   889 378F EE 88 37		            inc L38F2+5
   890 3792 88			            dey
   891 3793 10 EE		            bpl L38F2
   892 3795 AD CA 37		            lda REALOOPCNT
   893 3798 18			            clc
   894 3799 69 0C		            adc #$0C
   895 379B 8D CA 37		            sta REALOOPCNT
   896 379E 4C FD 36		            jmp REALOOP
   897 				            
   898 37A1 AD FF FF		L3910       lda $FFFF
   899 37A4 EE A2 37		            inc L3910+1
   900 37A7 D0 03		            bne L391B
   901 37A9 EE A3 37		            inc L3910+2
   902 37AC 60			L391B       rts
   903
   904 37AD 20 A1 37		L391C       jsr L3910
   905 37B0 85 D7		            sta $D7
   906 37B2 20 A1 37		            jsr L3910
   907 37B5 A0 00		            ldy #$00
   908 37B7 85 D8		            sta $D8
   909 37B9 05 D7		            ora $D7
   910 37BB 60			            rts
   911
   912 				; realloc code pointer
   913 37BC BF 36		REATABADR   .word REATAB
   914 37BE DA 33		REASRCADR   .word REABEGIN
   915 37C0 FF FF		READSTADR   .word $FFFF
   916 				; copy code pointer
   917 37C2 DA 33		CPYFROMADR  .word REABEGIN
   918 37C4 A5 02		CPYLENGTH   .word REAEND-REABEGIN ;$027C
   919 37C6 FF FF		CPYTOADR    .word $FFFF
   920 37C8 00 00		            .word $0000
   921 				            
   922 				; $01 byte
   923 37CA			REALOOPCNT  ;= $392B
   924 = 37CB			READIFLO   = REALOOPCNT+1
   925 = 37CC			READIFHI   = READIFLO+1
   926
   927
   928 				         
