mads 1.9.9
     1 				;
     2 				; THE!RAMDISK for THE!CART for SpartaDOS 3 
     3 				; Previous work RD/RAMDISK.COM for SpartaDOS 3 by FTe
     4 				;   RD Ver 2.3 07-14-86 (c) 1984 by FTe
     5 				;
     6 				; System equates
     7 				;
     8 				; OS EQUATES
     9 				; ----------
    10 				; 
    11 				; IO EQUATES
    12 				; 
    13 = 0002			ICCOM       = $0002
    14 = 0008			ICBLL       = $0008
    15 = 0009			ICBLH       = $0009
    16 				; 
    17 				; OS VARIABLES FOR XL/XE
    18 				; 
    19 				; PAGE 0
    20 				; 
    21 = 000A			DOSVEC      = $000A
    22 = 000C			DOSINI      = $000C
    23 = 0012			RTCLOK      = $0012
    24 = 0032			BUFRLO      = $0032
    25 = 0033			BUFRHI      = $0033
    26 = 0034			BFENLO      = $0034
    27 = 0035			BFENHI      = $0035
    28 = 0042			CRITIC      = $0042
    29 				; 
    30 				; PAGE 2
    31 				; 
    32 = 022F			SDMCTL      = $022F
    33 = 02E7			MEMLO       = $02E7
    34 				; 
    35 				; PAGE 3
    36 				; 
    37 = 0300			DDEVIC      = $0300
    38 = 0301			DUNIT       = $0301
    39 = 0302			DCOMND      = $0302
    40 = 0304			DBUFLO      = $0304
    41 = 0305			DBUFHI      = $0305
    42 = 0308			DBYTLO      = $0308
    43 = 0309			DBYTHI      = $0309
    44 = 030A			DAUX1       = $030A
    45 = 030B			DAUX2       = $030B
    46 = 0340			IOCB0       = $0340
    47 				; 
    48 				; PIA
    49 				; 
    50 = D300			PORTA       = $D300
    51 = D301			PORTB       = $D301
    52 = D302			PACTL       = $D302
    53 = D303			PBCTL       = $D303
    54 				; 
    55 				; ANTIC
    56 				;
    57 = D400			DMACTL      = $D400 
    58 = D40A			WSYNC       = $D40A
    59 = D40E			NMIEN       = $D40E
    60 				; 
    61 				; ROM VECTORS
    62 				; 
    63 = E456			CIOV        = $E456
    64 				;
    65 				; SpartaDOS 
    66 				;
    67 = 000A			SD_BUFOFF      = $0A ; offset in line buffer
    68 = 003F			SD_LBUF        = $3F ; offset to line buffer
    69 = 0003			SD_ZCRNAME     = $03 ; offset for jmp to crunch name
    70 = 0021			SD_COMFNAM     = $21 ; offset to result buffer for crunch name 
    71 = 000A			SD_LSIO        = $0A ; negative offset to SIO vector
    72
    73 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    74 				; 
    75 				; The!Cart programming information
    76 				; (c) 2013 Matthias Reichl
    77 				;
    78 				; The!Cart is equipped with 128MB flash (Spansion S29GL01
    79 				; chip), 512k RAM and a 256-byte SPI EEPROM (Microchip
    80 				; 25AA020A). The memory is addressed using 16384 8k banks
    81 				; (64 8k banks when using RAM instead of flash).
    82 				; 
    83 				; The cartridge configuration registers are located at
    84 				; $D5A0-$D5A8. All registers are read/write unless noted
    85 				; otherwise. Unused bits shall be written as '0' and
    86 				; always read back as '0'.
    87 				; 
    88 				; Powerup configuration is 8k mode ($A000-$BFFF) using
    89 				; flash bank 0, writes to flash are disabled.
    90 				; 
    91 				; Depending on the selected cartridge mode additional
    92 				; registers are enabled at $D5xx.
    93 				; 
    94 				; The primary bank register also serves as a base bank
    95 				; register for the various sub-modes.
    96 				; 
    97 				; The secondary bank register is only used in "flexi mode".
    98 				;
    99
   100 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   101 				; 
   102 				; The!Cart Register (from-to,default)
   103 				;
   104
   105 				; Mode Select
   106 = D5A6			TCMOSL = $d5a6    ; mode ($00-$3d,$01)
   107 				; Cartridge mode is selected with bits 0-5 of $D5A6, values
   108 				; other than the ones listed here are reserved (and result
   109 				; in "cartridge off"):
   110 				; $00: off, cartridge disabled
   111 				; $01: 8k banks at $A000
   112 				; $02: AtariMax 1MBit / 128k
   113 				; $03: Atarimax 8MBit / 1MB
   114 				; $04: OSS M091
   115 				; $08: SDX 64k cart, $D5Ex banking
   116 				; $09: Diamond GOS 64k cart, $D5Dx banking
   117 				; $0A: Express 64k cart, $D57x banking
   118 				; $0C: Atrax 128k cart
   119 				; $0D: Williams 64k cart
   120 				; $20: flexi mode (separate 8k banks at $A000 and $8000)
   121 				; $21: standard 16k cart at $8000-$BFFF
   122 				; $22: MegaMax 16k mode (up to 2MB), AtariMax 8Mbit banking
   123 				; $23: Blizzard 16k
   124 				; $24: Sic!Cart 512k
   125 				; $28: 16k Mega cart
   126 				; $29: 32k Mega cart
   127 				; $2A: 64k Mega cart
   128 				; $2B: 128k Mega cart
   129 				; $2C: 256k Mega cart
   130 				; $2D: 512k Mega cart
   131 				; $2E: 1024k Mega cart
   132 				; $2F: 2048k Mega cart
   133 				; $30: 32k XEGS cart
   134 				; $31: 64k XEGS cart
   135 				; $32: 128k XEGS cart
   136 				; $33: 256k XEGS cart
   137 				; $34: 512k XEGS cart
   138 				; $35: 1024k XEGS cart
   139 				; $38: 32k SWXEGS cart
   140 				; $39: 64k SWXEGS cart
   141 				; $3A: 128k SWXEGS cart
   142 				; $3B: 256k SWXEGS cart
   143 				; $3C: 512k SWXEGS cart
   144 				; $3D: 1024k SWXEGS cart
   145 = 0000			TCMOSL.OFF   = $00    ; off, cartridge disabled
   146 = 0001			TCMOSL.8K    = $01    ; 8k banks at $A000
   147 = 0021			TCMOSL.FLEXI = $21    ; flexi mode,
   148 				                         ; separate 8k banks at $A000 and $8000
   149 = 0021			TCMOSL.16K   = $21    ; standard 16k cart at $8000-$BFFF
   150
   151 				; how to figure out that The!Cart is not active?
   152 				; If the address is not used then the XL returns $ff but
   153 				; the XE (and old 800) return $d5 (high byte of address,
   154 				; the value of the last bus cycle)
   155 = 00FF			TCMOSL.XLLOCK  = $ff    ; config lock or not present
   156 = 00D5			TCMOSL.XELOCK  = $d5    ; config lock or not present
   157
   158 				; Mode Flash/RAM Select
   159 = D5A7			TCMOFR = $d5a7    ;flash/RAM mode (0-15,0)
   160 				; bit 0: primary bank write enable (0=readOnly, 1=write)
   161 				; bit 1: primary bank source (0=flash, 1=RAM)
   162 				; bit 2: secondary bank write enable (0=readOnly, 1=write)
   163 				; bit 3: secondary bank source (0=flash, 1=RAM)
   164 = 0003			TCMOFR.PBRAM = $03    ; primary bank RAM
   165 = 000C			TCMOFR.SBRAM = $0C    ; secondary bank RAM
   166
   167 				; Primary Bank
   168 = D5A0			TCPBRL = $d5a0    ; register low byte (0-255,0)
   169 = D5A1			TCPBRH = $d5a1    ; register high byte (0-63,0)
   170 = D5A2			TCPBEN = $d5a2    ; enable (0=dis-1=en,1)
   171
   172 				; Secondary Bank 
   173 = D5A3			TCSBRL = $d5a3    ; register low byte (0-255,0)
   174 = D5A4			TCSBRH = $d5a4  ; register high byte (0-63,0)
   175 = D5A5			TCSBEN = $d5a5    ; enable (0=dis-1=en,0)
   176
   177 				; SPI interface to EEPROM
   178 = D5A8			TCINEP = $d5a8
   179 				; bit 0: SPI CLK
   180 				; bit 1: SPI CS
   181 				; bit 7: SPI data in (on reads), SPI data out (on writes)
   182
   183 				; configuration lock
   184 = D5AF			TCCOLO = $d5af
   185 				; Writing to this register disables "The!Cart" registers
   186 				; at $d5aX.
   187
   188
   189 				; macros
   190
   191 				; saves register: pushes bank register on stack
   192 				M_cart_push .macro
   193 				            lda TCMOSL
   194 				            pha
   195 				            lda TCMOFR
   196 				            pha
   197 				            lda TCPBRL
   198 				            pha
   199 				            lda TCPBRH
   200 				            pha
   201 				            lda TCPBEN
   202 				            pha
   203 				            .endm
   204
   205 				; restores register from stack: pops from stack
   206 				M_cart_pop  .macro
   207 				            pla                 
   208 				            sta TCPBEN          
   209 				            pla                 
   210 				            sta TCPBRH          
   211 				            pla                 
   212 				            sta TCPBRL          
   213 				            pla                 
   214 				            sta TCMOFR          
   215 				            pla                 
   216 				            sta TCMOSL          
   217 				            .endm
   218 				 
   219 				; saves register and sync: pushes bank register on stack
   220 				M_cart_sync_push .macro
   221 				            lda SDMCTL
   222 				            pha
   223 				            M_cart_push
   224 				            lda #$00
   225 				            sta SDMCTL
   226 				            jsr WAITSYNC        ; wait for vblank
   227 				            sei
   228 				            lda #$00
   229 				            sta NMIEN
   230 				            .endm
   231
   232 				; restores register from stack anf sync: pops from stack
   233 				M_cart_sync_pop  .macro
   234 				            M_cart_pop
   235 				            lda #$E0            ; enable interrupts
   236 				            sta NMIEN
   237 				            cli
   238 				            pla
   239 				            sta SDMCTL
   240 				            .endm
   241
   242 				; set bank: number of bank in X, uses A
   243 				M_cart_set  .macro
   244 				; set new The!Cart mode
   245 				            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
   246 				            sta TCMOSL          
   247 				            lda #TCMOFR.PBRAM       ; set to RAM
   248 				            sta TCMOFR
   249 				            txa
   250 				            asl   
   251 				            sta TCPBRL              ; get bank number from X
   252 				            lda #$00                     
   253 				            sta TCPBRH              ; set high to $00
   254 				            lda #$01
   255 				            sta TCPBEN              ; enable        
   256 				            .endm
   257
   258 				;
   259 				; Start of code
   260 				;
   261 				            org $3000
   262 				            
   263 				; save the!cart registers
   264 3000			            M_cart_sync_push            
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 FFFF> 3000-354C> AD 2F +             lda SDMCTL
     2 3003 48			            pha
     1 3004 AD A6 D5		            lda TCMOSL
     2 3007 48			            pha
     3 3008 AD A7 D5		            lda TCMOFR
     4 300B 48			            pha
     5 300C AD A0 D5		            lda TCPBRL
     6 300F 48			            pha
     7 3010 AD A1 D5		            lda TCPBRH
     8 3013 48			            pha
     9 3014 AD A2 D5		            lda TCPBEN
    10 3017 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     4 3018 A9 00		            lda #$00
     5 301A 8D 2F 02		            sta SDMCTL
     6 301D 20 F1 31		            jsr WAITSYNC        ; wait for vblank
     7 3020 78			            sei
     8 3021 A9 00		            lda #$00
     9 3023 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   265 				; try to save and write banks            
   266 3026 A2 1F		            ldx #$1F
   267 3028			BNKSAVWRT   M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3028 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 302A 8D A6 D5		            sta TCMOSL          
     4 302D A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 302F 8D A7 D5		            sta TCMOFR
     6 3032 8A			            txa
     7 3033 0A			            asl   
     8 3034 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3037 A9 00		            lda #$00                     
    10 3039 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 303C A9 01		            lda #$01
    12 303E 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   268 3041 AD 00 90		            lda $9000
   269 3044 9D 4D 36		            sta BNKSAVBUF,X
   270 3047 8E 00 90		            stx $9000
   271 304A AD 00 B0		            lda $B000
   272 304D 9D 6D 36		            sta BNKSAVBUF2,X
   273 3050 8E 00 B0		            stx $B000
   274 3053 CA			            dex
   275 3054 10 D2		            bpl BNKSAVWRT
   276 				; check banks
   277 3056 E8			BNKCHK      inx
   278 3057			            M_cart_set            
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3057 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3059 8D A6 D5		            sta TCMOSL          
     4 305C A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 305E 8D A7 D5		            sta TCMOFR
     6 3061 8A			            txa
     7 3062 0A			            asl   
     8 3063 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3066 A9 00		            lda #$00                     
    10 3068 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 306B A9 01		            lda #$01
    12 306D 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   279 3070 EC 00 90		            cpx $9000
   280 3073 D0 0A		            bne BNKSTOP
   281 3075 EC 00 B0		            cpx $B000
   282 3078 D0 05		            bne BNKSTOP
   283 307A E0 1F		            cpx #$1F
   284 307C D0 D8		            bne BNKCHK
   285 307E E8			            inx
   286 307F 8E 37 31		BNKSTOP     stx BNKCNT
   287 				; restore banks
   288 3082 A2 00		            ldx #$00
   289 3084			BNKRESTR    M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3084 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3086 8D A6 D5		            sta TCMOSL          
     4 3089 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 308B 8D A7 D5		            sta TCMOFR
     6 308E 8A			            txa
     7 308F 0A			            asl   
     8 3090 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3093 A9 00		            lda #$00                     
    10 3095 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3098 A9 01		            lda #$01
    12 309A 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   290 309D BD 4D 36		            lda BNKSAVBUF,X
   291 30A0 8D 00 90		            sta $9000
   292 30A3 BD 6D 36		            lda BNKSAVBUF2,X
   293 30A6 8D 00 B0		            sta $B000
   294 30A9 E8			            inx
   295 30AA E0 20		            cpx #$20
   296 30AC D0 D6		            bne BNKRESTR
   297 				            
   298 				; restore the!cart registers
   299 30AE			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 30AE 68			            pla                 
     2 30AF 8D A2 D5		            sta TCPBEN          
     3 30B2 68			            pla                 
     4 30B3 8D A1 D5		            sta TCPBRH          
     5 30B6 68			            pla                 
     6 30B7 8D A0 D5		            sta TCPBRL          
     7 30BA 68			            pla                 
     8 30BB 8D A7 D5		            sta TCMOFR          
     9 30BE 68			            pla                 
    10 30BF 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 30C2 A9 E0		            lda #$E0            ; enable interrupts
     3 30C4 8D 0E D4		            sta NMIEN
     4 30C7 58			            cli
     5 30C8 68			            pla
     6 30C9 8D 2F 02		            sta SDMCTL
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   300
   301 				; info message
   302 30CC 20 75 33		            jsr PRINT
   303 30CF 54 48 45 21 52 41 +             .byte 'THE!RAMDISK for THE!CART vers45',$9B,$FF
   304
   305 				; check bank count
   306 30F0 AE 37 31		            ldx BNKCNT
   307 30F3 E0 20		            cpx #$20
   308 30F5 F0 2B		            beq RAMDISKINI
   309
   310 				; no banks            
   311 30F7 20 75 33		            jsr PRINT
   312 30FA 20 20 45 72 72 6F +             .byte '  Error - 512k RAM THE!CART not found',$9B,$FF
   313 3121 60			            rts
   314 				                        
   315 3122			RAMDISKINI
   316 				; check for parameter
   317 3122 A0 0A		            ldy #SD_BUFOFF
   318 3124 B1 0A		            lda (DOSVEC),Y
   319 3126 18			            clc
   320 3127 69 3F		            adc #SD_LBUF
   321 3129 A8			            tay
   322 312A B1 0A		            lda (DOSVEC),Y
   323 312C C9 9B		            cmp #$9B
   324 312E D0 08		            bne PRSPARM
   325 				; no parameter -> error
   326 3130 4C 73 31		            jmp PARAMERR
   327
   328 				; jump for jsr to crunch name
   329 3133 4C FF FF		CRNAME      jmp $FFFF
   330
   331 3136 FF			CHKFRMT     .byte $FF
   332 3137 00			BNKCNT      .byte $00
   333
   334 				; set crunch name address
   335 3138 A5 0A		PRSPARM     lda DOSVEC
   336 313A 18			            clc
   337 313B 69 03		            adc #SD_ZCRNAME
   338 313D 8D 34 31		            sta CRNAME+1
   339 3140 A5 0B		            lda DOSVEC+1
   340 3142 69 00		            adc #$00
   341 3144 8D 35 31		            sta CRNAME+2
   342 				            
   343 				; parameter parsing            
   344 				; get drive number SD_COMFNAM starts alway with Dx:
   345 3147 20 33 31		            jsr CRNAME
   346 314A D0 27		            bne PARAMERR
   347 314C A0 22		            ldy #SD_COMFNAM+1
   348 314E B1 0A		            lda (DOSVEC),Y
   349 3150 29 0F		            and #$0F
   350 3152 8D 4C 35		            sta DRVNUM
   351 				; check options /N
   352 3155 20 33 31		            jsr CRNAME
   353 3158 F0 45		            beq PRSPAREND
   354 315A A0 24		            ldy #SD_COMFNAM+3
   355 315C B1 0A		            lda (DOSVEC),Y
   356 315E C9 2F		            cmp #'/'
   357 3160 D0 11		            bne PARAMERR
   358 3162 C8			PRSPARLOOP  iny
   359 3163 B1 0A		            lda (DOSVEC),Y
   360 3165 C9 9B		            cmp #$9B         ; end of parameter
   361 3167 F0 36		            beq PRSPAREND
   362 3169 C9 4E		PRSPARNXT   cmp #'N'         ; format ?
   363 316B D0 06		            bne PARAMERR
   364 				; check format at startup to preserve existing RAM disk            
   365 316D EE 36 31		            inc CHKFRMT
   366 3170 4C 62 31		            jmp PRSPARLOOP
   367 3173 20 75 33		PARAMERR    jsr PRINT
   368 3176 20 20 45 72 72 6F +             .byte '  Error - Wrong parameter use Dx: [/N]',$9B,$FF
   369 319E 60			            rts
   370
   371 				; set jsr to original DOSINI
   372 319F A5 0C		PRSPAREND   lda DOSINI
   373 31A1 8D AC 33		            sta JSRDOSINI+1
   374 31A4 A5 0D		            lda DOSINI+1
   375 31A6 8D AD 33		            sta JSRDOSINI+2
   376
   377 				; set MEMLO oldaddress, realloc
   378 31A9 AD E7 02		            lda MEMLO
   379 31AC 8D 90 37		            sta READSTADR
   380 31AF 8D 96 37		            sta CPYTOADR
   381 31B2 AD E8 02		            lda MEMLO+1
   382 31B5 8D 91 37		            sta READSTADR+1
   383 31B8 8D 97 37		            sta CPYTOADR+1
   384 				;
   385 				; start realloc
   386 				;
   387 31BB 20 C8 36		            jsr REASTART
   388
   389 				; set new DOSINI            
   390 31BE A9 AB		REAL001     lda #<JSRDOSINI
   391 31C0 85 0C		            sta DOSINI
   392 31C2 A9 33		REAH001     lda #>JSRDOSINI
   393 31C4 85 0D		            sta DOSINI+1
   394 				; get SIO and patch for RAMDISK
   395 31C6 38			            sec
   396 31C7 A5 0A		            lda DOSVEC
   397 31C9 E9 0A		            sbc #SD_LSIO
   398 31CB 85 32		            sta BUFRLO
   399 31CD A5 0B		            lda DOSVEC+1
   400 31CF E9 00		            sbc #$00
   401 31D1 85 33		            sta BUFRHI
   402 31D3 A0 00		            ldy #$00
   403 31D5 B1 32		            lda (BUFRLO),Y
   404 31D7 8D C9 33		REAA001     sta JMPSIO+1      ;realloc $33CA
   405 31DA A9 B9		REAL002     lda #<RAMDSIO
   406 31DC 91 32		            sta (BUFRLO),Y
   407 31DE C8			            iny
   408 31DF B1 32		            lda (BUFRLO),Y
   409 31E1 8D CA 33		REAA002     sta JMPSIO+2      ;realloc $33D4
   410 31E4 A9 33		REAH002     lda #>RAMDSIO
   411 31E6 91 32		            sta (BUFRLO),Y
   412 				; set MEMLO            
   413 31E8 20 AE 33		REAA003     jsr SETMEMLO      ;realloc $33DB
   414 				; format if requested            
   415 31EB 2C 36 31		            bit CHKFRMT
   416 31EE 30 08		            bmi FRMTRD
   417 31F0 60			            rts
   418
   419 				; wait for sync            
   420 31F1 A5 14		WAITSYNC    lda RTCLOK+2
   421 31F3 C5 14		WAITLOOP    cmp RTCLOK+2
   422 31F5 F0 FC		            beq WAITLOOP
   423 31F7 60			            rts
   424 				            
   425 				; format ramdisk
   426 31F8 20 75 33		FRMTRD      jsr PRINT
   427 31FB 20 20 52 41 4D 20 +             .byte '  RAM Cart formatted',$9B,$FF
   428
   429 				; save register
   430 3211			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3211 AD 2F 02		            lda SDMCTL
     2 3214 48			            pha
     1 3215 AD A6 D5		            lda TCMOSL
     2 3218 48			            pha
     3 3219 AD A7 D5		            lda TCMOFR
     4 321C 48			            pha
     5 321D AD A0 D5		            lda TCPBRL
     6 3220 48			            pha
     7 3221 AD A1 D5		            lda TCPBRH
     8 3224 48			            pha
     9 3225 AD A2 D5		            lda TCPBEN
    10 3228 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     4 3229 A9 00		            lda #$00
     5 322B 8D 2F 02		            sta SDMCTL
     6 322E 20 F1 31		            jsr WAITSYNC        ; wait for vblank
     7 3231 78			            sei
     8 3232 A9 00		            lda #$00
     9 3234 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   431
   432 				; set sector for VTOC part 1
   433 3237 A2 00		            ldx #$00
   434 3239			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3239 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 323B 8D A6 D5		            sta TCMOSL          
     4 323E A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3240 8D A7 D5		            sta TCMOFR
     6 3243 8A			            txa
     7 3244 0A			            asl   
     8 3245 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3248 A9 00		            lda #$00                     
    10 324A 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 324D A9 01		            lda #$01
    12 324F 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   435 				; clear loop
   436 3252 A9 00		            lda #$00
   437 3254 A8			            tay
   438 3255 99 00 80		FRMTCLP1    sta $8000,Y
   439 3258 99 00 81		            sta $8100,Y
   440 325B 99 00 82		            sta $8200,Y
   441 325E 99 00 83		            sta $8300,Y
   442 3261 C8			            iny
   443 3262 D0 F1		            bne FRMTCLP1
   444
   445 				; set sector for VTOC
   446 3264 A2 00		            ldx #$00
   447 3266			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3266 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3268 8D A6 D5		            sta TCMOSL          
     4 326B A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 326D 8D A7 D5		            sta TCMOFR
     6 3270 8A			            txa
     7 3271 0A			            asl   
     8 3272 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3275 A9 00		            lda #$00                     
    10 3277 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 327A A9 01		            lda #$01
    12 327C 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   448 				; header loop            
   449 327F A0 2A		            ldy #$2A
   450 3281 B9 39 33		FRMTHLP     lda RDHEAD,Y
   451 3284 99 00 80		            sta $8000,Y
   452 3287 88			            dey
   453 3288 10 F7		            bpl FRMTHLP
   454
   455 				; set sector for VTOC
   456 328A A2 00		            ldx #$00
   457 328C			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 328C A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 328E 8D A6 D5		            sta TCMOSL          
     4 3291 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3293 8D A7 D5		            sta TCMOFR
     6 3296 8A			            txa
     7 3297 0A			            asl   
     8 3298 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 329B A9 00		            lda #$00                     
    10 329D 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32A0 A9 01		            lda #$01
    12 32A2 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   458 				; set free sector VTOC             
   459 32A5 A9 20		            lda #$20            ; 16k bank count
   460 32A7 4A			            lsr
   461 32A8 4A			            lsr
   462 32A9 AA			            tax
   463 32AA 20 2C 33		FRMTVTOCLP  jsr FRMTSETVTOC
   464 32AD AD 31 33		            lda FRMTVTOCIT+1
   465 32B0 18			            clc
   466 32B1 69 40		            adc #$40
   467 32B3 8D 31 33		            sta FRMTVTOCIT+1
   468 32B6 AD 32 33		            lda FRMTVTOCIT+2
   469 32B9 69 00		            adc #$00
   470 32BB 8D 32 33		            sta FRMTVTOCIT+2
   471 32BE CA			            dex
   472 32BF D0 E9		            bne FRMTVTOCLP
   473
   474 				; set sector for VTOC
   475 32C1 A2 00		            ldx #$00
   476 32C3			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 32C3 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32C5 8D A6 D5		            sta TCMOSL          
     4 32C8 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32CA 8D A7 D5		            sta TCMOFR
     6 32CD 8A			            txa
     7 32CE 0A			            asl   
     8 32CF 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32D2 A9 00		            lda #$00                     
    10 32D4 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32D7 A9 01		            lda #$01
    12 32D9 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   477 				 ; set map sector
   478 32DC A9 04		            lda #$04 
   479 32DE 8D 0F 80		            sta $800F     ; number of bit map sectors used on the disk
   480 32E1 18			            clc
   481 32E2 69 02		            adc #$02
   482 32E4 8D 09 80		            sta $8009     ; first sector map of the MAIN directory
   483 32E7 A9 00		            lda #$00 
   484 32E9 8D 80 80		            sta $8080
   485 32EC A9 80		            lda #$80      ; low address of MAIN sector map
   486 32EE 85 32		            sta BUFRLO
   487 32F0 A9 82		            lda #$82      ; high address of MAIN sector map
   488 32F2 85 33		            sta BUFRHI   
   489 32F4 18			            clc
   490 32F5 A0 04		            ldy #$04
   491 32F7 AD 09 80		            lda $8009
   492 32FA 69 01		            adc #$01
   493 32FC 91 32		            sta (BUFRLO),Y
   494 				; set MAIN sector map            
   495 32FE A2 00		            ldx #$00
   496 3300 A0 80		            ldy #$80
   497 3302 BD 64 33		L349B       lda RDMAIN,X
   498 3305 91 32		            sta (BUFRLO),Y
   499 3307 E8			            inx
   500 3308 C8			            iny
   501 3309 E0 11		            cpx #$11
   502 330B D0 F5		            bne L349B
   503
   504 				; restore register
   505 330D			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 330D 68			            pla                 
     2 330E 8D A2 D5		            sta TCPBEN          
     3 3311 68			            pla                 
     4 3312 8D A1 D5		            sta TCPBRH          
     5 3315 68			            pla                 
     6 3316 8D A0 D5		            sta TCPBRL          
     7 3319 68			            pla                 
     8 331A 8D A7 D5		            sta TCMOFR          
     9 331D 68			            pla                 
    10 331E 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 3321 A9 E0		            lda #$E0            ; enable interrupts
     3 3323 8D 0E D4		            sta NMIEN
     4 3326 58			            cli
     5 3327 68			            pla
     6 3328 8D 2F 02		            sta SDMCTL
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   506 				; finished
   507 332B 60			            rts
   508 				            
   509 				; set VTOC            
   510 332C A0 00		FRMTSETVTOC ldy #$00
   511 332E A9 FF		            lda #$FF
   512 3330 99 80 80		FRMTVTOCIT  sta $8080,Y
   513 3333 C8			            iny
   514 3334 C0 40		            cpy #$40
   515 3336 D0 F8		            bne FRMTVTOCIT
   516 3338 60			            rts
   517
   518 3339 00 03 00 07 E0 07 + RDHEAD      .byte $00,$03,$00,$07,$E0,$07,$4C,$80
   519 3341 30 03 00		            .byte $30,$03,$00 ;original $00,$04,$FB,$03
   520 3344 00 10 F8 0F		            .word $1000,$0ff8 ; 512k
   521 3348 01 02 00 20 00 00 +             .byte $01, $02,$00,$20,$00,$00,$00
   522 334F 43 41 52 54 35 31 +             .byte 'CART512K'
   523 3357 00 80 22 00 00 00 +             .byte $00,$80,$22,$00,$00,$00,$00,$00
   524 335F 00 16 00 00 00	            .byte $00,$16,$00,$00,$00
   525
   526 3364 08 00 00 11 00 00	RDMAIN      .byte $08,$00,$00,$11,$00,$00
   527 336A 4D 41 49 4E 20 20 +             .byte 'MAIN       '
   528
   529
   530 				; print subroutine            
   531 3375 68			PRINT       pla
   532 3376 8D 86 33		            sta PRINTITER+1
   533 3379 68			            pla
   534 337A 8D 87 33		            sta PRINTITER+2
   535 337D EE 86 33		PRINTLOOP   inc PRINTITER+1
   536 3380 D0 03		            bne PRINTITER
   537 3382 EE 87 33		            inc PRINTITER+2
   538 3385 AD FF FF		PRINTITER   lda $FFFF
   539 3388 C9 FF		            cmp #$FF
   540 338A F0 06		            beq PRINTEND
   541 338C 20 9B 33		            jsr CIOPUTCHR
   542 338F 4C 7D 33		            jmp PRINTLOOP
   543 3392 AD 87 33		PRINTEND    lda PRINTITER+2
   544 3395 48			            pha
   545 3396 AD 86 33		            lda PRINTITER+1
   546 3399 48			            pha
   547 339A 60			            rts
   548 				; call cio put char subroutine
   549 339B A2 00		CIOPUTCHR   ldx #$00
   550 339D 8E 48 03		            stx IOCB0+ICBLL
   551 33A0 8E 49 03		            stx IOCB0+ICBLH
   552 33A3 A0 0B		            ldy #$0B
   553 33A5 8C 42 03		            sty IOCB0+ICCOM
   554 33A8 4C 56 E4		            jmp CIOV
   555
   556
   557
   558 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   559 				;;; BEGIN OF REALLOC BLOCK
   560 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   561
   562 				; to realloc routines
   563 				; DOSINI set MEMLO at reset
   564 33AB			REABEGIN
   565 33AB 20 00 00		JSRDOSINI   jsr $0000
   566
   567 33AE			SETMEMLO    
   568 33AE A9 4D		REAL003     lda #<BNKSAVBUF
   569 33B0 8D E7 02		            sta MEMLO
   570 33B3 A9 36		REAH003     lda #>BNKSAVBUF
   571 33B5 8D E8 02		            sta MEMLO+1
   572 33B8 60			            rts
   573
   574 				; new DOSVEC for RAMDISK device
   575 33B9 AD 00 03		RAMDSIO     lda DDEVIC
   576 33BC C9 31		            cmp #$31
   577 33BE D0 08		            bne JMPSIO
   578 33C0 AD 01 03		            lda DUNIT
   579 33C3 CD 4C 35		REAA004     cmp DRVNUM
   580 33C6 F0 03		            beq L358A
   581 33C8 4C 00 00		JMPSIO      jmp $0000
   582 				; wait for sync            
   583 33CB			L358A       
   584
   585 				            
   586 				; set buffer address
   587 33CB AD 04 03		            lda DBUFLO
   588 33CE 85 34		            sta BFENLO
   589 33D0 AD 05 03		            lda DBUFHI
   590 33D3 85 35		            sta BFENHI
   591 33D5 AD 02 03		            lda DCOMND
   592
   593 				; command STATUS REQUEST
   594 33D8 C9 53		            cmp #$53 
   595 33DA D0 1B		            bne NEXT1
   596 33DC AD 47 35		REAA009     lda L36BF
   597 33DF 4A			            lsr
   598 33E0 4A			            lsr
   599 33E1 49 30		            eor #$30
   600 33E3 AC 43 35		REAA010     ldy L36BB
   601 33E6 C0 1A		            cpy #$1A
   602 33E8 D0 02		            bne L35B4
   603 33EA 09 80		            ora #$80
   604 33EC A0 00		L35B4       ldy #$00
   605 33EE 91 34		            sta (BFENLO),Y
   606 33F0 C8			            iny
   607 33F1 A9 FF		            lda #$FF
   608 33F3 91 34		            sta (BFENLO),Y
   609 33F5 30 22		            bmi JMPSIOEND
   610 				            
   611 				; command RETURN CONFIGURATION            
   612 33F7 C9 4E		NEXT1       cmp #$4E
   613 33F9 D0 0C		            bne NEXT2
   614 33FB A0 0B		            ldy #$0B            ; 12 bytes
   615 33FD			RETCNFLOOP
   616 33FD B9 40 35		REAA011     lda CONFBUF,Y
   617 3400 91 34		            sta (BFENLO),Y
   618 3402 88			            dey
   619 3403 10 F8		            bpl RETCNFLOOP
   620 3405 30 12		            bmi JMPSIOEND
   621
   622 				; command SET CONFIGURATION
   623 3407 C9 4F		NEXT2       cmp #$4F
   624 3409 D0 11		            bne NEXT3
   625 340B A0 07		            ldy #$07
   626 340D B1 34		            lda (BFENLO),Y
   627 340F 8D 47 35		REAA012     sta L36BF
   628 3412 A0 03		            ldy #$03
   629 3414 B1 34		            lda (BFENLO),Y
   630 3416 8D 43 35		REAA013     sta L36BB
   631
   632 3419			JMPSIOEND
   633 3419 4C 39 35		REAA014     jmp RDSIOEND
   634
   635 				; command FORMAT DISK
   636 341C C9 21		NEXT3       cmp #$21
   637 341E D0 0B		            bne NEXT4
   638 3420 A0 00		SIOFRMT     ldy #$00
   639 3422 A9 FF		            lda #$FF
   640 3424 91 34		            sta (BFENLO),Y
   641 3426 C8			            iny
   642 3427 91 34		            sta (BFENLO),Y
   643 3429 D0 EE		            bne JMPSIOEND
   644
   645 				; command FORMAT DISK ENHANCED
   646 342B C9 22		NEXT4       cmp #$22
   647 342D D0 0C		            bne NEXT5
   648 342F A9 1A		            lda #$1A
   649 3431 8D 43 35		REAA015     sta L36BB
   650 3434 A9 80		            lda #$80
   651 3436 8D 47 35		REAA016     sta L36BF
   652 3439 D0 E5		            bne SIOFRMT
   653 				            
   654 				; command PUT/GET SECTOR 
   655 343B C9 52		NEXT5       cmp #$52            ; command GET SECTOR
   656 343D F0 0B		            beq PUTGETSEC
   657 343F C9 57		            cmp #$57            ; command PUT SECTOR WITH VERIFY
   658 3441 F0 07		            beq PUTGETSEC
   659 3443 C9 50		            cmp #$50            ; command PUT SECTOR
   660 3445 F0 03		            beq PUTGETSEC
   661 3447 4C 3C 35		REAA020     jmp RDSIOEND+3      ; error NAK, command not supported
   662 				; buffer address and calc byte count
   663 344A A9 00		PUTGETSEC   lda #$00
   664 344C 85 32		            sta BUFRLO
   665 344E AD 0A 03		            lda DAUX1
   666 3451 38			            sec
   667 3452 E9 01		            sbc #$01
   668 3454 85 33		            sta BUFRHI
   669 3456 AD 0B 03		            lda DAUX2
   670 3459 E9 00		            sbc #$00
   671 345B 06 33		            asl BUFRHI
   672 345D 2A			            rol
   673 345E 2C 08 03		            bit DBYTLO
   674 3461 30 06		            bmi L3631
   675 3463 0E 47 35		REAA017     asl L36BF
   676 3466 06 33		            asl BUFRHI
   677 3468 2A			            rol
   678 3469 AA			L3631       tax                 ; set X with memory bank number
   679 346A A5 33		            lda BUFRHI
   680 346C 4A			            lsr
   681 346D 4A			            lsr
   682 346E 66 32		            ror BUFRLO
   683 3470 09 80		            ora #$80
   684 3472 85 33		            sta BUFRHI
   685 				; check for GET
   686 3474 AD 02 03		            lda DCOMND
   687 3477 C9 52		            cmp #$52
   688 3479 F0 0D		            beq L3656           ; is GET
   689 				; PUT: put user data to buffer            
   690 347B A0 00		            ldy #$00
   691 347D B1 34		L364B       lda (BFENLO),Y
   692 347F 99 4D 35		REAA005     sta BUFFERXX1,Y
   693 3482 C8			            iny
   694 3483 CC 08 03		            cpy DBYTLO
   695 3486 D0 F5		            bne L364B
   696 				; check if bank number is in range            
   697 3488 8A			L3656       txa                 ; check bank number
   698 3489 C9 20		REAA018     cmp #$20
   699 				;            bcs RDSIOEND+3      ; error NAK
   700 348B B0 BA		            bcs REAA020         ; intermediate jmp to NAK
   701
   702 				; DMA control
   703 348D AD 2F 02		            lda SDMCTL
   704 3490 48			            pha
   705 3491 A9 00		            lda #$00
   706 3493 8D 2F 02		            sta SDMCTL
   707 3496 A5 14		            lda RTCLOK+2
   708 3498 C5 14		WAITLOOP2   cmp RTCLOK+2
   709 349A F0 FC		            beq WAITLOOP2
   710 349C 78			            sei
   711 349D A9 00		            lda #$00
   712 349F 8D 0E D4		            sta NMIEN
   713 				; save register
   714 34A2			            M_cart_push         ; save register
Macro: M_CART_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 34A2 AD A6 D5		            lda TCMOSL
     2 34A5 48			            pha
     3 34A6 AD A7 D5		            lda TCMOFR
     4 34A9 48			            pha
     5 34AA AD A0 D5		            lda TCPBRL
     6 34AD 48			            pha
     7 34AE AD A1 D5		            lda TCPBRH
     8 34B1 48			            pha
     9 34B2 AD A2 D5		            lda TCPBEN
    10 34B5 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   715 				; set memory bank
   716 34B6			            M_cart_set          ; set bank, number in X
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 34B6 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 34B8 8D A6 D5		            sta TCMOSL          
     4 34BB A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 34BD 8D A7 D5		            sta TCMOFR
     6 34C0 8A			            txa
     7 34C1 0A			            asl   
     8 34C2 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 34C5 A9 00		            lda #$00                     
    10 34C7 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 34CA A9 01		            lda #$01
    12 34CC 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   717 				; check for PUT
   718 34CF A0 00		            ldy #$00
   719 34D1 AD 02 03		            lda DCOMND
   720 34D4 C9 52		            cmp #$52
   721 34D6 D0 38		            bne L369B           ; is PUT
   722 				; GET: read data to buffer
   723 34D8 B1 32		L367B       lda (BUFRLO),Y
   724 34DA 99 4D 35		REAA006     sta BUFFERXX1,Y
   725 34DD C8			            iny
   726 34DE CC 08 03		            cpy DBYTLO
   727 34E1 D0 F5		            bne L367B
   728 				; restore bank for write to user buffer
   729 34E3			            M_cart_pop          ; restore register            
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 34E3 68			            pla                 
     2 34E4 8D A2 D5		            sta TCPBEN          
     3 34E7 68			            pla                 
     4 34E8 8D A1 D5		            sta TCPBRH          
     5 34EB 68			            pla                 
     6 34EC 8D A0 D5		            sta TCPBRL          
     7 34EF 68			            pla                 
     8 34F0 8D A7 D5		            sta TCMOFR          
     9 34F3 68			            pla                 
    10 34F4 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   730 34F7 68			            pla
   731 34F8 8D 2F 02		            sta SDMCTL
   732 34FB A9 E0		            lda #$E0            ; enable interrupts
   733 34FD 8D 0E D4		            sta NMIEN
   734 3500 58			            cli
   735 				; GET: write buffer to user data            
   736 3501 A0 00		            ldy #$00
   737 3503			L368E
   738 3503 B9 4D 35		REAA008     lda BUFFERXX1,Y
   739 3506 91 34		            sta (BFENLO),Y
   740 3508 C8			            iny
   741 3509 CC 08 03		            cpy DBYTLO
   742 350C D0 F5		            bne L368E
   743 350E F0 29		            beq RDSIOEND            
   744 				; PUT: buffer data to sector
   745 3510			L369B
   746 3510 B9 4D 35		REAA007     lda BUFFERXX1,Y
   747 3513 91 32		            sta (BUFRLO),Y
   748 3515 C8			            iny
   749 3516 CC 08 03		            cpy DBYTLO
   750 3519 D0 F5		            bne L369B
   751 				; restore register
   752 351B			            M_cart_pop          ; restore register
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 351B 68			            pla                 
     2 351C 8D A2 D5		            sta TCPBEN          
     3 351F 68			            pla                 
     4 3520 8D A1 D5		            sta TCPBRH          
     5 3523 68			            pla                 
     6 3524 8D A0 D5		            sta TCPBRL          
     7 3527 68			            pla                 
     8 3528 8D A7 D5		            sta TCMOFR          
     9 352B 68			            pla                 
    10 352C 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   753 352F 68			            pla
   754 3530 8D 2F 02		            sta SDMCTL
   755 3533 A9 E0		            lda #$E0            ; enable interrupts
   756 3535 8D 0E D4		            sta NMIEN
   757 3538 58			            cli
   758 				; enable interrupts and set rc            
   759 3539 A0 01		RDSIOEND    ldy #$01
   760 353B 2C A0 8B		            bit $8BA0           ; $2c, ldy #$8b; bank/sector number error #139 NAK
   761
   762 353E 98			            tya                 ; set RC
   763 353F 60			            rts
   764 				            
   765 				; drive configuration buffer
   766 3540 28 01 12		CONFBUF     .byte $28,$01,$12
   767 3543 00 00 00 00		L36BB       .byte $00,$00,$00,$00
   768 3547 80 FF 00 00 00	L36BF       .byte $80,$FF,$00,$00,$00
   769
   770 354C 01			DRVNUM      .byte $01
   771 				; $100 Bytes
   772 354D			BUFFERXX1
   773 				;            org $37E6
   774 = 364D			REAEND      = BUFFERXX1 + $100
   775 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   776 				;;; END OF REALLOC BLOCK
   777 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   778
   779
   780 				; $20 Bytes
   781 = 364D			BNKSAVBUF   = REAEND
   782
   783 				; $20 bytes
   784 				;            org $3806
   785 = 366D			BNKSAVBUF2  = BNKSAVBUF + $20
   786
   787 				 
   788 				;           org $3826
   789 354D			            org BNKSAVBUF2 + $20
   790 				; realloc whole addresses
   791 368D-3799> D8 31		REATAB      .word REAA001+1 ;$33CA
   792 368F E2 31		            .word REAA002+1 ;$33D4
   793 3691 E9 31		            .word REAA003+1 ;$33DB
   794 3693 C4 33		            .word REAA004+1 ;$3583
   795 3695 80 34		            .word REAA005+1 ;$364E
   796 3697 DB 34		            .word REAA006+1 ;$367E
   797 3699 11 35		            .word REAA007+1 ;$369C
   798 369B 04 35		            .word REAA008+1 ;$368F
   799 369D DD 33		            .word REAA009+1 ;$35A5
   800 369F E4 33		            .word REAA010+1 ;$35AC
   801 36A1 FE 33		            .word REAA011+1 ;$35C6
   802 36A3 10 34		            .word REAA012+1 ;$35D8
   803 36A5 17 34		            .word REAA013+1 ;$35DF
   804 36A7 1A 34		            .word REAA014+1 ;$35E2
   805 36A9 32 34		            .word REAA015+1 ;$35FA
   806 36AB 37 34		            .word REAA016+1 ;$35FF
   807 36AD 64 34		            .word REAA017+1 ;$362C
   808 36AF 8A 34		            .word REAA018+1 ;$365C
   809 36B1 48 34		            .word REAA020+1 ;$3610
   810 36B3 00 00		            .word $0000
   811 				 
   812 				; realloc address low byte           
   813 36B5 BF 31		            .word REAL001+1 ;$33B1
   814 36B7 DB 31		            .word REAL002+1 ;$33CD
   815 36B9 AF 33		            .word REAL003+1 ;$356E
   816 36BB 00 00		            .word $0000
   817 				; realloc address high byte (address to high byte and value of low byte)
   818 36BD C3 31		            .word REAH001+1  ;$33B5
   819 36BF AB			            .byte <JSRDOSINI ;$6A
   820 				                        
   821 36C0 E5 31		            .word REAH002+1 ;$33D7
   822 36C2 B9			            .byte <RAMDSIO  ;$78
   823 				            
   824 36C3 B4 33		            .word REAH003+1  ;$3573
   825 36C5 4D			            .byte <BNKSAVBUF ;$E6
   826 				            
   827 36C6 00 00		            .word $0000
   828 				            
   829 36C8 A9 00		REASTART    lda #$00
   830 36CA 8D 9A 37		            sta REALOOPCNT
   831 36CD AE 9A 37		REALOOP     ldx REALOOPCNT
   832 36D0 BD 8C 37		            lda REATABADR,X
   833 36D3 8D 72 37		            sta L3910+1
   834 36D6 BD 8D 37		            lda REATABADR+1,X
   835 36D9 8D 73 37		            sta L3910+2
   836 36DC 0D 72 37		            ora L3910+1
   837 36DF D0 01		            bne L3881
   838 36E1 60			            rts
   839 				            
   840 36E2 38			L3881       sec
   841 36E3 BD 90 37		            lda READSTADR,X
   842 36E6 FD 8E 37		            sbc REASRCADR,X
   843 36E9 8D 9B 37		            sta READIFLO
   844 36EC BD 91 37		            lda READSTADR+1,X
   845 36EF FD 8F 37		            sbc REASRCADR+1,X
   846 36F2 8D 9C 37		            sta READIFHI
   847 				            
   848 36F5 20 7D 37		L3894       jsr L391C
   849 36F8 F0 13		            beq L38AC
   850 36FA B1 D7		            lda ($D7),Y
   851 36FC 18			            clc
   852 36FD 6D 9B 37		            adc READIFLO
   853 3700 91 D7		            sta ($D7),Y
   854 3702 C8			            iny
   855 3703 B1 D7		            lda ($D7),Y
   856 3705 6D 9C 37		            adc READIFHI
   857 3708 91 D7		            sta ($D7),Y
   858 370A 4C F5 36		            jmp L3894
   859 370D 20 7D 37		L38AC       jsr L391C
   860 3710 F0 0B		            beq L38BC
   861 3712 B1 D7		            lda ($D7),Y
   862 3714 18			            clc
   863 3715 6D 9B 37		            adc READIFLO
   864 3718 91 D7		            sta ($D7),Y
   865 371A 4C 0D 37		            jmp L38AC
   866 371D 20 7D 37		L38BC       jsr L391C
   867 3720 F0 11		            beq L38D2
   868 3722 20 71 37		            jsr L3910
   869 3725 18			            clc
   870 3726 6D 9B 37		            adc READIFLO
   871 3729 B1 D7		            lda ($D7),Y
   872 372B 6D 9C 37		            adc READIFHI
   873 372E 91 D7		            sta ($D7),Y
   874 3730 4C 1D 37		            jmp L38BC
   875 3733 AE 9A 37		L38D2       ldx REALOOPCNT
   876
   877 3736 BD 92 37		            lda CPYFROMADR,X
   878 3739 8D 54 37		            sta L38F2+1
   879 373C BD 93 37		            lda CPYFROMADR+1,X
   880 373F 8D 55 37		            sta L38F2+2
   881
   882 3742 BD 96 37		            lda CPYTOADR,X
   883 3745 8D 57 37		            sta L38F2+4
   884 3748 BD 97 37		            lda CPYTOADR+1,X
   885 374B 8D 58 37		            sta L38F2+5
   886
   887 374E BC 95 37		            ldy CPYLENGTH+1,X
   888 3751 A2 00		            ldx #$00
   889 3753 BD FF FF		L38F2       lda $FFFF,X
   890 3756 9D FF FF		            sta $FFFF,X
   891 3759 E8			            inx
   892 375A D0 F7		            bne L38F2
   893 375C EE 55 37		            inc L38F2+2
   894 375F EE 58 37		            inc L38F2+5
   895 3762 88			            dey
   896 3763 10 EE		            bpl L38F2
   897 3765 AD 9A 37		            lda REALOOPCNT
   898 3768 18			            clc
   899 3769 69 0C		            adc #$0C
   900 376B 8D 9A 37		            sta REALOOPCNT
   901 376E 4C CD 36		            jmp REALOOP
   902 				            
   903 3771 AD FF FF		L3910       lda $FFFF
   904 3774 EE 72 37		            inc L3910+1
   905 3777 D0 03		            bne L391B
   906 3779 EE 73 37		            inc L3910+2
   907 377C 60			L391B       rts
   908
   909 377D 20 71 37		L391C       jsr L3910
   910 3780 85 D7		            sta $D7
   911 3782 20 71 37		            jsr L3910
   912 3785 A0 00		            ldy #$00
   913 3787 85 D8		            sta $D8
   914 3789 05 D7		            ora $D7
   915 378B 60			            rts
   916
   917 				; realloc code pointer
   918 378C 8D 36		REATABADR   .word REATAB
   919 378E AB 33		REASRCADR   .word REABEGIN
   920 3790 FF FF		READSTADR   .word $FFFF
   921 				; copy code pointer
   922 3792 AB 33		CPYFROMADR  .word REABEGIN
   923 3794 A2 02		CPYLENGTH   .word REAEND-REABEGIN ;$027C
   924 3796 FF FF		CPYTOADR    .word $FFFF
   925 3798 00 00		            .word $0000
   926 				            
   927 				; $01 byte
   928 379A			REALOOPCNT  ;= $392B
   929 = 379B			READIFLO   = REALOOPCNT+1
   930 = 379C			READIFHI   = READIFLO+1
   931
   932
   933 				         
