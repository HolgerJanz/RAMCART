mads 1.9.9
     1 				;
     2 				; THE!RAMDISK for THE!CART for SpartaDOS 3 
     3 				; Previous work RD/RAMDISK.COM for SpartaDOS 3 by FTe
     4 				;   RD Ver 2.3 07-14-86 (c) 1984 by FTe
     5 				;
     6 				; System equates
     7 				;
     8 				; OS EQUATES
     9 				; ----------
    10 				; 
    11 				; IO EQUATES
    12 				; 
    13 = 0002			ICCOM       = $0002
    14 = 0008			ICBLL       = $0008
    15 = 0009			ICBLH       = $0009
    16 				; 
    17 				; OS VARIABLES FOR XL/XE
    18 				; 
    19 				; PAGE 0
    20 				; 
    21 = 000A			DOSVEC      = $000A
    22 = 000C			DOSINI      = $000C
    23 = 0012			RTCLOK      = $0012
    24 = 0032			BUFRLO      = $0032
    25 = 0033			BUFRHI      = $0033
    26 = 0034			BFENLO      = $0034
    27 = 0035			BFENHI      = $0035
    28 				; 
    29 				; PAGE 2
    30 				; 
    31 = 022F			SDMCTL      = $022F
    32 = 02E7			MEMLO       = $02E7
    33 				; 
    34 				; PAGE 3
    35 				; 
    36 = 0300			DDEVIC      = $0300
    37 = 0301			DUNIT       = $0301
    38 = 0302			DCOMND      = $0302
    39 = 0304			DBUFLO      = $0304
    40 = 0305			DBUFHI      = $0305
    41 = 0308			DBYTLO      = $0308
    42 = 0309			DBYTHI      = $0309
    43 = 030A			DAUX1       = $030A
    44 = 030B			DAUX2       = $030B
    45 = 0340			IOCB0       = $0340
    46 				; 
    47 				; PIA
    48 				; 
    49 = D300			PORTA       = $D300
    50 = D301			PORTB       = $D301
    51 = D302			PACTL       = $D302
    52 = D303			PBCTL       = $D303
    53 				; 
    54 				; ANTIC
    55 				; 
    56 = D40E			NMIEN       = $D40E
    57 				; 
    58 				; ROM VECTORS
    59 				; 
    60 = E456			CIOV        = $E456
    61 				;
    62 				; SpartaDOS 
    63 				;
    64 = 000A			SD_BUFOFF      = $0A ; offset in line buffer
    65 = 003F			SD_LBUF        = $3F ; offset to line buffer
    66 = 0003			SD_ZCRNAME     = $03 ; offset for jmp to crunch name
    67 = 0021			SD_COMFNAM     = $21 ; offset to result buffer for crunch name 
    68 = 000A			SD_LSIO        = $0A ; negative offset to SIO vector
    69
    70 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    71 				; 
    72 				; The!Cart programming information
    73 				; (c) 2013 Matthias Reichl
    74 				;
    75 				; The!Cart is equipped with 128MB flash (Spansion S29GL01
    76 				; chip), 512k RAM and a 256-byte SPI EEPROM (Microchip
    77 				; 25AA020A). The memory is addressed using 16384 8k banks
    78 				; (64 8k banks when using RAM instead of flash).
    79 				; 
    80 				; The cartridge configuration registers are located at
    81 				; $D5A0-$D5A8. All registers are read/write unless noted
    82 				; otherwise. Unused bits shall be written as '0' and
    83 				; always read back as '0'.
    84 				; 
    85 				; Powerup configuration is 8k mode ($A000-$BFFF) using
    86 				; flash bank 0, writes to flash are disabled.
    87 				; 
    88 				; Depending on the selected cartridge mode additional
    89 				; registers are enabled at $D5xx.
    90 				; 
    91 				; The primary bank register also serves as a base bank
    92 				; register for the various sub-modes.
    93 				; 
    94 				; The secondary bank register is only used in "flexi mode".
    95 				;
    96
    97 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    98 				; 
    99 				; The!Cart Register (from-to,default)
   100 				;
   101
   102 				; Mode Select
   103 = D5A6			TCMOSL = $d5a6    ; mode ($00-$3d,$01)
   104 				; Cartridge mode is selected with bits 0-5 of $D5A6, values
   105 				; other than the ones listed here are reserved (and result
   106 				; in "cartridge off"):
   107 				; $00: off, cartridge disabled
   108 				; $01: 8k banks at $A000
   109 				; $02: AtariMax 1MBit / 128k
   110 				; $03: Atarimax 8MBit / 1MB
   111 				; $04: OSS M091
   112 				; $08: SDX 64k cart, $D5Ex banking
   113 				; $09: Diamond GOS 64k cart, $D5Dx banking
   114 				; $0A: Express 64k cart, $D57x banking
   115 				; $0C: Atrax 128k cart
   116 				; $0D: Williams 64k cart
   117 				; $20: flexi mode (separate 8k banks at $A000 and $8000)
   118 				; $21: standard 16k cart at $8000-$BFFF
   119 				; $22: MegaMax 16k mode (up to 2MB), AtariMax 8Mbit banking
   120 				; $23: Blizzard 16k
   121 				; $24: Sic!Cart 512k
   122 				; $28: 16k Mega cart
   123 				; $29: 32k Mega cart
   124 				; $2A: 64k Mega cart
   125 				; $2B: 128k Mega cart
   126 				; $2C: 256k Mega cart
   127 				; $2D: 512k Mega cart
   128 				; $2E: 1024k Mega cart
   129 				; $2F: 2048k Mega cart
   130 				; $30: 32k XEGS cart
   131 				; $31: 64k XEGS cart
   132 				; $32: 128k XEGS cart
   133 				; $33: 256k XEGS cart
   134 				; $34: 512k XEGS cart
   135 				; $35: 1024k XEGS cart
   136 				; $38: 32k SWXEGS cart
   137 				; $39: 64k SWXEGS cart
   138 				; $3A: 128k SWXEGS cart
   139 				; $3B: 256k SWXEGS cart
   140 				; $3C: 512k SWXEGS cart
   141 				; $3D: 1024k SWXEGS cart
   142 = 0000			TCMOSL.OFF   = $00    ; off, cartridge disabled
   143 = 0001			TCMOSL.8K    = $01    ; 8k banks at $A000
   144 = 0021			TCMOSL.FLEXI = $21    ; flexi mode,
   145 				                         ; separate 8k banks at $A000 and $8000
   146 = 0021			TCMOSL.16K   = $21    ; standard 16k cart at $8000-$BFFF
   147
   148 				; how to figure out that The!Cart is not active?
   149 				; If the address is not used then the XL returns $ff but
   150 				; the XE (and old 800) return $d5 (high byte of address,
   151 				; the value of the last bus cycle)
   152 = 00FF			TCMOSL.XLLOCK  = $ff    ; config lock or not present
   153 = 00D5			TCMOSL.XELOCK  = $d5    ; config lock or not present
   154
   155 				; Mode Flash/RAM Select
   156 = D5A7			TCMOFR = $d5a7    ;flash/RAM mode (0-15,0)
   157 				; bit 0: primary bank write enable (0=readOnly, 1=write)
   158 				; bit 1: primary bank source (0=flash, 1=RAM)
   159 				; bit 2: secondary bank write enable (0=readOnly, 1=write)
   160 				; bit 3: secondary bank source (0=flash, 1=RAM)
   161 = 0003			TCMOFR.PBRAM = $03    ; primary bank RAM
   162 = 000C			TCMOFR.SBRAM = $0C    ; secondary bank RAM
   163
   164 				; Primary Bank
   165 = D5A0			TCPBRL = $d5a0    ; register low byte (0-255,0)
   166 = D5A1			TCPBRH = $d5a1    ; register high byte (0-63,0)
   167 = D5A2			TCPBEN = $d5a2    ; enable (0=dis-1=en,1)
   168
   169 				; Secondary Bank 
   170 = D5A3			TCSBRL = $d5a3    ; register low byte (0-255,0)
   171 = D5A4			TCSBRH = $d5a4  ; register high byte (0-63,0)
   172 = D5A5			TCSBEN = $d5a5    ; enable (0=dis-1=en,0)
   173
   174 				; SPI interface to EEPROM
   175 = D5A8			TCINEP = $d5a8
   176 				; bit 0: SPI CLK
   177 				; bit 1: SPI CS
   178 				; bit 7: SPI data in (on reads), SPI data out (on writes)
   179
   180 				; configuration lock
   181 = D5AF			TCCOLO = $d5af
   182 				; Writing to this register disables "The!Cart" registers
   183 				; at $d5aX.
   184
   185
   186 				; macros
   187
   188 				; saves register: pushes bank register on stack
   189 				M_cart_push .macro
   190 				            lda TCMOSL
   191 				            pha
   192 				            lda TCMOFR
   193 				            pha
   194 				            lda TCPBRL
   195 				            pha
   196 				            lda TCPBRH
   197 				            pha
   198 				            lda TCPBEN
   199 				            pha
   200 				            .endm
   201
   202 				; restores register from stack: pops from stack
   203 				M_cart_pop  .macro
   204 				            pla                 
   205 				            sta TCPBEN          
   206 				            pla                 
   207 				            sta TCPBRH          
   208 				            pla                 
   209 				            sta TCPBRL          
   210 				            pla                 
   211 				            sta TCMOFR          
   212 				            pla                 
   213 				            sta TCMOSL          
   214 				            .endm
   215 				 
   216 				; saves register and sync: pushes bank register on stack
   217 				M_cart_sync_push .macro
   218 				            M_cart_push
   219 				            jsr WAITSYNC        ; wait for vblank
   220 				 ;           sei                 ; disable interrupts
   221 				 ;           lda #$00
   222 				 ;           sta NMIEN
   223 				            .endm
   224
   225 				; restores register from stack anf sync: pops from stack
   226 				M_cart_sync_pop  .macro
   227 				            M_cart_pop
   228 				;            lda #$E0            ; enable interrupts
   229 				;            sta NMIEN
   230 				;            cli
   231 				            .endm
   232
   233 				; set bank: number of bank in X, uses A
   234 				M_cart_set  .macro
   235 				; set new The!Cart mode
   236 				            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
   237 				            sta TCMOSL          
   238 				            lda #TCMOFR.PBRAM       ; set to RAM
   239 				            sta TCMOFR
   240 				            txa
   241 				            asl   
   242 				            sta TCPBRL              ; get bank number from X
   243 				            lda #$00                     
   244 				            sta TCPBRH              ; set high to $00
   245 				            lda #$01
   246 				            sta TCPBEN              ; enable        
   247 				            .endm
   248
   249 				;
   250 				; Start of code
   251 				;
   252 				            org $3000
   253
   254 				; save the!cart registers
   255 3000			            M_cart_sync_push            
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 FFFF> 3000-35A9> AD A6 +             lda TCMOSL
     2 3003 48			            pha
     3 3004 AD A7 D5		            lda TCMOFR
     4 3007 48			            pha
     5 3008 AD A0 D5		            lda TCPBRL
     6 300B 48			            pha
     7 300C AD A1 D5		            lda TCPBRH
     8 300F 48			            pha
     9 3010 AD A2 D5		            lda TCPBEN
    10 3013 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 3014 20 DE 31		            jsr WAITSYNC        ; wait for vblank
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   256 				; try to save and write banks            
   257 3017 A2 1F		            ldx #$1F
   258 3019			BNKSAVWRT   M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3019 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 301B 8D A6 D5		            sta TCMOSL          
     4 301E A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3020 8D A7 D5		            sta TCMOFR
     6 3023 8A			            txa
     7 3024 0A			            asl   
     8 3025 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3028 A9 00		            lda #$00                     
    10 302A 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 302D A9 01		            lda #$01
    12 302F 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   259 3032 AD 00 90		            lda $9000
   260 3035 9D AA 36		            sta BNKSAVBUF,X
   261 3038 8A			            txa
   262 3039 8D 00 90		            sta $9000
   263 303C AD 00 B0		            lda $B000
   264 303F 9D CA 36		            sta BNKSAVBUF2,X
   265 3042 8A			            txa
   266 3043 0A			            asl
   267 3044 8D 00 B0		            sta $B000
   268 3047 CA			            dex
   269 3048 10 CF		            bpl BNKSAVWRT
   270 				            
   271 				; check banks
   272 304A E8			BNKCHK      inx
   273 304B			            M_cart_set            
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 304B A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 304D 8D A6 D5		            sta TCMOSL          
     4 3050 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3052 8D A7 D5		            sta TCMOFR
     6 3055 8A			            txa
     7 3056 0A			            asl   
     8 3057 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 305A A9 00		            lda #$00                     
    10 305C 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 305F A9 01		            lda #$01
    12 3061 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   274 3064 8A			            txa
   275 3065 CD 00 90		            cmp $9000
   276 3068 D0 0C		            bne BNKSTOP
   277 306A 8A			            txa
   278 306B 0A			            asl
   279 306C CD 00 B0		            cmp $B000
   280 306F D0 05		            bne BNKSTOP
   281 3071 E0 1F		            cpx #$1F
   282 3073 D0 D5		            bne BNKCHK
   283 3075 E8			            inx
   284 3076 8E 24 31		BNKSTOP     stx BNKCNT
   285
   286 				; restore banks
   287 3079 A2 00		            ldx #$00
   288 307B			BNKRESTR    M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 307B A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 307D 8D A6 D5		            sta TCMOSL          
     4 3080 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3082 8D A7 D5		            sta TCMOFR
     6 3085 8A			            txa
     7 3086 0A			            asl   
     8 3087 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 308A A9 00		            lda #$00                     
    10 308C 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 308F A9 01		            lda #$01
    12 3091 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   289 3094 BD AA 36		            lda BNKSAVBUF,X
   290 3097 8D 00 90		            sta $9000
   291 309A BD CA 36		            lda BNKSAVBUF2,X
   292 309D 8D 00 B0		            sta $B000
   293 30A0 E8			            inx
   294 30A1 E0 20		            cpx #$20
   295 30A3 D0 D6		            bne BNKRESTR
   296
   297 				; restore The!Cart registers
   298 30A5			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 30A5 68			            pla                 
     2 30A6 8D A2 D5		            sta TCPBEN          
     3 30A9 68			            pla                 
     4 30AA 8D A1 D5		            sta TCPBRH          
     5 30AD 68			            pla                 
     6 30AE 8D A0 D5		            sta TCPBRL          
     7 30B1 68			            pla                 
     8 30B2 8D A7 D5		            sta TCMOFR          
     9 30B5 68			            pla                 
    10 30B6 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   299
   300 				; info message
   301 30B9 20 CA 33		            jsr PRINT
   302 30BC 54 48 45 21 52 41 +             .byte 'THE!RAMDISK for THE!CART vers42',$9B,$FF
   303
   304 				; check bank count
   305 30DD AE 24 31		            ldx BNKCNT
   306 30E0 E0 20		            cpx #$20
   307 30E2 F0 2B		            beq RAMDISKINI
   308
   309 				; no banks            
   310 30E4 20 CA 33		            jsr PRINT
   311 30E7 20 20 45 72 72 6F +             .byte '  Error - 512k RAM THE!CART not found',$9B,$FF
   312 310E 60			            rts
   313 				                        
   314 310F			RAMDISKINI
   315 				; check for parameter
   316 310F A0 0A		            ldy #SD_BUFOFF
   317 3111 B1 0A		            lda (DOSVEC),Y
   318 3113 18			            clc
   319 3114 69 3F		            adc #SD_LBUF
   320 3116 A8			            tay
   321 3117 B1 0A		            lda (DOSVEC),Y
   322 3119 C9 9B		            cmp #$9B
   323 311B D0 08		            bne PRSPARM
   324 				; no parameter -> error
   325 311D 4C 60 31		            jmp PARAMERR
   326
   327 				; jump for jsr to crunch name
   328 3120 4C FF FF		CRNAME      jmp $FFFF
   329
   330 3123 FF			CHKFRMT     .byte $FF
   331 3124 00			BNKCNT      .byte $00
   332
   333 				; set crunch name address
   334 3125 A5 0A		PRSPARM     lda DOSVEC
   335 3127 18			            clc
   336 3128 69 03		            adc #SD_ZCRNAME
   337 312A 8D 21 31		            sta CRNAME+1
   338 312D A5 0B		            lda DOSVEC+1
   339 312F 69 00		            adc #$00
   340 3131 8D 22 31		            sta CRNAME+2
   341 				            
   342 				; parameter parsing            
   343 				; get drive number SD_COMFNAM starts alway with Dx:
   344 3134 20 20 31		            jsr CRNAME
   345 3137 D0 27		            bne PARAMERR
   346 3139 A0 22		            ldy #SD_COMFNAM+1
   347 313B B1 0A		            lda (DOSVEC),Y
   348 313D 29 0F		            and #$0F
   349 313F 8D 89 35		            sta DRVNUM
   350 				; check options /N
   351 3142 20 20 31		            jsr CRNAME
   352 3145 F0 45		            beq PRSPAREND
   353 3147 A0 24		            ldy #SD_COMFNAM+3
   354 3149 B1 0A		            lda (DOSVEC),Y
   355 314B C9 2F		            cmp #'/'
   356 314D D0 11		            bne PARAMERR
   357 314F C8			PRSPARLOOP  iny
   358 3150 B1 0A		            lda (DOSVEC),Y
   359 3152 C9 9B		            cmp #$9B         ; end of parameter
   360 3154 F0 36		            beq PRSPAREND
   361 3156 C9 4E		PRSPARNXT   cmp #'N'         ; format ?
   362 3158 D0 06		            bne PARAMERR
   363 				; check format at startup to preserve existing RAM disk            
   364 315A EE 23 31		            inc CHKFRMT
   365 315D 4C 4F 31		            jmp PRSPARLOOP
   366 3160 20 CA 33		PARAMERR    jsr PRINT
   367 3163 20 20 45 72 72 6F +             .byte '  Error - Parameter Error use Dx: [/N]',$9B,$FF
   368 318B 60			            rts
   369
   370 				; set jsr to original DOSINI
   371 318C A5 0C		PRSPAREND   lda DOSINI
   372 318E 8D 01 34		            sta JSRDOSINI+1
   373 3191 A5 0D		            lda DOSINI+1
   374 3193 8D 02 34		            sta JSRDOSINI+2
   375
   376 				; set MEMLO oldaddress, realloc
   377 3196 AD E7 02		            lda MEMLO
   378 3199 8D ED 37		            sta READSTADR
   379 319C 8D F3 37		            sta CPYTOADR
   380 319F AD E8 02		            lda MEMLO+1
   381 31A2 8D EE 37		            sta READSTADR+1
   382 31A5 8D F4 37		            sta CPYTOADR+1
   383 				;
   384 				; start realloc
   385 				;
   386 31A8 20 25 37		            jsr REASTART
   387
   388 				; set new DOSINI            
   389 31AB A9 00		REAL001     lda #<JSRDOSINI
   390 31AD 85 0C		            sta DOSINI
   391 31AF A9 34		REAH001     lda #>JSRDOSINI
   392 31B1 85 0D		            sta DOSINI+1
   393 				; get SIO and patch for RAMDISK
   394 31B3 38			            sec
   395 31B4 A5 0A		            lda DOSVEC
   396 31B6 E9 0A		            sbc #SD_LSIO
   397 31B8 85 32		            sta BUFRLO
   398 31BA A5 0B		            lda DOSVEC+1
   399 31BC E9 00		            sbc #$00
   400 31BE 85 33		            sta BUFRHI
   401 31C0 A0 00		            ldy #$00
   402 31C2 B1 32		            lda (BUFRLO),Y
   403 31C4 8D 1E 34		REAA001     sta JMPSIO+1      ;realloc $33CA
   404 31C7 A9 0E		REAL002     lda #<RAMDSIO
   405 31C9 91 32		            sta (BUFRLO),Y
   406 31CB C8			            iny
   407 31CC B1 32		            lda (BUFRLO),Y
   408 31CE 8D 1F 34		REAA002     sta JMPSIO+2      ;realloc $33D4
   409 31D1 A9 34		REAH002     lda #>RAMDSIO
   410 31D3 91 32		            sta (BUFRLO),Y
   411 				; set MEMLO            
   412 31D5 20 03 34		REAA003     jsr SETMEMLO      ;realloc $33DB
   413 				; format if requested            
   414 31D8 2C 23 31		            bit CHKFRMT
   415 31DB 30 08		            bmi FRMTRD
   416 31DD 60			            rts
   417
   418 				; wait for sync            
   419 31DE A5 14		WAITSYNC    lda RTCLOK+2
   420 31E0 C5 14		WAITLOOP    cmp RTCLOK+2
   421 31E2 F0 FC		            beq WAITLOOP
   422 31E4 60			            rts
   423 				            
   424 				; format ramdisk
   425 31E5 20 CA 33		FRMTRD      jsr PRINT
   426 31E8 20 20 52 41 4D 20 +             .byte '  RAM Cart formatted',$9B,$FF
   427 				; save register
   428 31FE			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 31FE AD A6 D5		            lda TCMOSL
     2 3201 48			            pha
     3 3202 AD A7 D5		            lda TCMOFR
     4 3205 48			            pha
     5 3206 AD A0 D5		            lda TCPBRL
     6 3209 48			            pha
     7 320A AD A1 D5		            lda TCPBRH
     8 320D 48			            pha
     9 320E AD A2 D5		            lda TCPBEN
    10 3211 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 3212 20 DE 31		            jsr WAITSYNC        ; wait for vblank
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   429 				; set sector for VTOC
   430 3215 A2 00		            ldx #$00
   431 3217			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3217 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3219 8D A6 D5		            sta TCMOSL          
     4 321C A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 321E 8D A7 D5		            sta TCMOFR
     6 3221 8A			            txa
     7 3222 0A			            asl   
     8 3223 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3226 A9 00		            lda #$00                     
    10 3228 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 322B A9 01		            lda #$01
    12 322D 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   432 				; clear loop
   433 3230 A9 00		            lda #$00
   434 3232 A8			            tay
   435 3233 99 00 80		FRMTCLP     sta $8000,Y
   436 3236 99 00 81		            sta $8100,Y
   437 3239 99 00 82		            sta $8200,Y
   438 323C 99 00 83		            sta $8300,Y
   439 323F C8			            iny
   440 3240 D0 F1		            bne FRMTCLP
   441 				; restore register
   442 3242			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3242 68			            pla                 
     2 3243 8D A2 D5		            sta TCPBEN          
     3 3246 68			            pla                 
     4 3247 8D A1 D5		            sta TCPBRH          
     5 324A 68			            pla                 
     6 324B 8D A0 D5		            sta TCPBRL          
     7 324E 68			            pla                 
     8 324F 8D A7 D5		            sta TCMOFR          
     9 3252 68			            pla                 
    10 3253 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   443
   444 				; save register
   445 3256			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3256 AD A6 D5		            lda TCMOSL
     2 3259 48			            pha
     3 325A AD A7 D5		            lda TCMOFR
     4 325D 48			            pha
     5 325E AD A0 D5		            lda TCPBRL
     6 3261 48			            pha
     7 3262 AD A1 D5		            lda TCPBRH
     8 3265 48			            pha
     9 3266 AD A2 D5		            lda TCPBEN
    10 3269 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 326A 20 DE 31		            jsr WAITSYNC        ; wait for vblank
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   446 				; set sector for VTOC
   447 326D A2 00		            ldx #$00
   448 326F			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 326F A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3271 8D A6 D5		            sta TCMOSL          
     4 3274 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3276 8D A7 D5		            sta TCMOFR
     6 3279 8A			            txa
     7 327A 0A			            asl   
     8 327B 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 327E A9 00		            lda #$00                     
    10 3280 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3283 A9 01		            lda #$01
    12 3285 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   449 				; header loop            
   450 3288 A0 2A		            ldy #$2A
   451 328A B9 8E 33		FRMTHLP     lda RDHEAD,Y
   452 328D 99 00 80		            sta $8000,Y
   453 3290 88			            dey
   454 3291 10 F7		            bpl FRMTHLP
   455 				; restore register
   456 3293			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3293 68			            pla                 
     2 3294 8D A2 D5		            sta TCPBEN          
     3 3297 68			            pla                 
     4 3298 8D A1 D5		            sta TCPBRH          
     5 329B 68			            pla                 
     6 329C 8D A0 D5		            sta TCPBRL          
     7 329F 68			            pla                 
     8 32A0 8D A7 D5		            sta TCMOFR          
     9 32A3 68			            pla                 
    10 32A4 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   457
   458 				; save register
   459 32A7			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 32A7 AD A6 D5		            lda TCMOSL
     2 32AA 48			            pha
     3 32AB AD A7 D5		            lda TCMOFR
     4 32AE 48			            pha
     5 32AF AD A0 D5		            lda TCPBRL
     6 32B2 48			            pha
     7 32B3 AD A1 D5		            lda TCPBRH
     8 32B6 48			            pha
     9 32B7 AD A2 D5		            lda TCPBEN
    10 32BA 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 32BB 20 DE 31		            jsr WAITSYNC        ; wait for vblank
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   460 				; set sector for VTOC
   461 32BE A2 00		            ldx #$00
   462 32C0			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 32C0 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32C2 8D A6 D5		            sta TCMOSL          
     4 32C5 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32C7 8D A7 D5		            sta TCMOFR
     6 32CA 8A			            txa
     7 32CB 0A			            asl   
     8 32CC 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32CF A9 00		            lda #$00                     
    10 32D1 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32D4 A9 01		            lda #$01
    12 32D6 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   463 				; set free sector VTOC             
   464 32D9 A9 20		            lda #$20            ; 16k bank count
   465 32DB 4A			            lsr
   466 32DC 4A			            lsr
   467 32DD AA			            tax
   468 32DE 20 81 33		FRMTVTOCLP  jsr FRMTSETVTOC
   469 32E1 AD 86 33		            lda FRMTVTOCIT+1
   470 32E4 18			            clc
   471 32E5 69 40		            adc #$40
   472 32E7 8D 86 33		            sta FRMTVTOCIT+1
   473 32EA AD 87 33		            lda FRMTVTOCIT+2
   474 32ED 69 00		            adc #$00
   475 32EF 8D 87 33		            sta FRMTVTOCIT+2
   476 32F2 CA			            dex
   477 32F3 D0 E9		            bne FRMTVTOCLP
   478 				; restore register
   479 32F5			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 32F5 68			            pla                 
     2 32F6 8D A2 D5		            sta TCPBEN          
     3 32F9 68			            pla                 
     4 32FA 8D A1 D5		            sta TCPBRH          
     5 32FD 68			            pla                 
     6 32FE 8D A0 D5		            sta TCPBRL          
     7 3301 68			            pla                 
     8 3302 8D A7 D5		            sta TCMOFR          
     9 3305 68			            pla                 
    10 3306 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   480
   481 				; save register
   482 3309			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3309 AD A6 D5		            lda TCMOSL
     2 330C 48			            pha
     3 330D AD A7 D5		            lda TCMOFR
     4 3310 48			            pha
     5 3311 AD A0 D5		            lda TCPBRL
     6 3314 48			            pha
     7 3315 AD A1 D5		            lda TCPBRH
     8 3318 48			            pha
     9 3319 AD A2 D5		            lda TCPBEN
    10 331C 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 331D 20 DE 31		            jsr WAITSYNC        ; wait for vblank
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   483 				; set sector for VTOC
   484 3320 A2 00		            ldx #$00
   485 3322			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3322 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3324 8D A6 D5		            sta TCMOSL          
     4 3327 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3329 8D A7 D5		            sta TCMOFR
     6 332C 8A			            txa
     7 332D 0A			            asl   
     8 332E 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3331 A9 00		            lda #$00                     
    10 3333 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3336 A9 01		            lda #$01
    12 3338 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   486 				 ; set map sector
   487 333B A9 04		            lda #$04 
   488 333D 8D 0F 80		            sta $800F     ; number of bit map sectors used on the disk
   489 3340 18			            clc
   490 3341 69 02		            adc #$02
   491 3343 8D 09 80		            sta $8009     ; first sector map of the MAIN directory
   492 3346 A9 00		            lda #$00 
   493 3348 8D 80 80		            sta $8080
   494 334B A9 80		            lda #$80      ; low address of MAIN sector map
   495 334D 85 32		            sta BUFRLO
   496 334F A9 82		            lda #$82      ; high address of MAIN sector map
   497 3351 85 33		            sta BUFRHI   
   498 3353 18			            clc
   499 3354 A0 04		            ldy #$04
   500 3356 AD 09 80		            lda $8009
   501 3359 69 01		            adc #$01
   502 335B 91 32		            sta (BUFRLO),Y
   503 				; set MAIN sector map            
   504 335D A2 00		            ldx #$00
   505 335F A0 80		            ldy #$80
   506 3361 BD B9 33		L349B       lda RDMAIN,X
   507 3364 91 32		            sta (BUFRLO),Y
   508 3366 E8			            inx
   509 3367 C8			            iny
   510 3368 E0 11		            cpx #$11
   511 336A D0 F5		            bne L349B
   512 				; restore register
   513 336C			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 336C 68			            pla                 
     2 336D 8D A2 D5		            sta TCPBEN          
     3 3370 68			            pla                 
     4 3371 8D A1 D5		            sta TCPBRH          
     5 3374 68			            pla                 
     6 3375 8D A0 D5		            sta TCPBRL          
     7 3378 68			            pla                 
     8 3379 8D A7 D5		            sta TCMOFR          
     9 337C 68			            pla                 
    10 337D 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   514 				; finished
   515 3380 60			            rts
   516 				            
   517 				; set VTOC            
   518 3381 A0 00		FRMTSETVTOC ldy #$00
   519 3383 A9 FF		            lda #$FF
   520 3385 99 80 80		FRMTVTOCIT  sta $8080,Y
   521 3388 C8			            iny
   522 3389 C0 40		            cpy #$40
   523 338B D0 F8		            bne FRMTVTOCIT
   524 338D 60			            rts
   525
   526 338E 00 03 00 07 E0 07 + RDHEAD      .byte $00,$03,$00,$07,$E0,$07,$4C,$80
   527 3396 30 03 00		            .byte $30,$03,$00 ;original $00,$04,$FB,$03
   528 3399 00 10 F8 0F		            .word $1000,$0ff8 ; 512k
   529 339D 01 02 00 20 00 00 +             .byte $01, $02,$00,$20,$00,$00,$00
   530 33A4 43 41 52 54 35 31 +             .byte 'CART512K'
   531 33AC 00 80 22 00 00 00 +             .byte $00,$80,$22,$00,$00,$00,$00,$00
   532 33B4 00 16 00 00 00	            .byte $00,$16,$00,$00,$00
   533
   534 33B9 08 00 00 11 00 00	RDMAIN      .byte $08,$00,$00,$11,$00,$00
   535 33BF 4D 41 49 4E 20 20 +             .byte 'MAIN       '
   536
   537
   538 				; print subroutine            
   539 33CA 68			PRINT       pla
   540 33CB 8D DB 33		            sta PRINTITER+1
   541 33CE 68			            pla
   542 33CF 8D DC 33		            sta PRINTITER+2
   543 33D2 EE DB 33		PRINTLOOP   inc PRINTITER+1
   544 33D5 D0 03		            bne PRINTITER
   545 33D7 EE DC 33		            inc PRINTITER+2
   546 33DA AD FF FF		PRINTITER   lda $FFFF
   547 33DD C9 FF		            cmp #$FF
   548 33DF F0 06		            beq PRINTEND
   549 33E1 20 F0 33		            jsr CIOPUTCHR
   550 33E4 4C D2 33		            jmp PRINTLOOP
   551 33E7 AD DC 33		PRINTEND    lda PRINTITER+2
   552 33EA 48			            pha
   553 33EB AD DB 33		            lda PRINTITER+1
   554 33EE 48			            pha
   555 33EF 60			            rts
   556 				; call cio put char subroutine
   557 33F0 A2 00		CIOPUTCHR   ldx #$00
   558 33F2 8E 48 03		            stx IOCB0+ICBLL
   559 33F5 8E 49 03		            stx IOCB0+ICBLH
   560 33F8 A0 0B		            ldy #$0B
   561 33FA 8C 42 03		            sty IOCB0+ICCOM
   562 33FD 4C 56 E4		            jmp CIOV
   563
   564
   565
   566 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   567 				;;; BEGIN OF REALLOC BLOCK
   568 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   569
   570 				; to realloc routines
   571 				; DOSINI set MEMLO at reset
   572 3400			REABEGIN
   573 3400 20 00 00		JSRDOSINI   jsr $0000
   574
   575 3403			SETMEMLO    
   576 3403 A9 AA		REAL003     lda #<BNKSAVBUF
   577 3405 8D E7 02		            sta MEMLO
   578 3408 A9 36		REAH003     lda #>BNKSAVBUF
   579 340A 8D E8 02		            sta MEMLO+1
   580 340D 60			            rts
   581
   582 				; new DOSVEC for RAMDISK device
   583 340E AD 00 03		RAMDSIO     lda DDEVIC
   584 3411 C9 31		            cmp #$31
   585 3413 D0 08		            bne JMPSIO
   586 3415 AD 01 03		            lda DUNIT
   587 3418 CD 89 35		REAA004     cmp DRVNUM
   588 341B F0 03		            beq L358A
   589 341D 4C 00 00		JMPSIO      jmp $0000
   590
   591 3420 AE 01 D3		L358A       ldx PORTB           ; save PORTB
   592 3423			            M_cart_push         ; save register
Macro: M_CART_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3423 AD A6 D5		            lda TCMOSL
     2 3426 48			            pha
     3 3427 AD A7 D5		            lda TCMOFR
     4 342A 48			            pha
     5 342B AD A0 D5		            lda TCPBRL
     6 342E 48			            pha
     7 342F AD A1 D5		            lda TCPBRH
     8 3432 48			            pha
     9 3433 AD A2 D5		            lda TCPBEN
    10 3436 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   593 				; wait for sync            
   594 3437 A5 14		            lda RTCLOK+2
   595 3439 C5 14		WAITLOOP2   cmp RTCLOK+2
   596 343B F0 FC		            beq WAITLOOP2
   597 343D 78			            sei
   598 343E A9 00		            lda #$00
   599 3440 8D 0E D4		            sta NMIEN
   600 				            
   601 				; set buffer address
   602 3443 AD 04 03		            lda DBUFLO
   603 3446 85 34		            sta BFENLO
   604 3448 AD 05 03		            lda DBUFHI
   605 344B 85 35		            sta BFENHI
   606 344D AD 02 03		            lda DCOMND
   607
   608 				; command STATUS REQUEST
   609 3450 C9 53		            cmp #$53 
   610 3452 D0 1B		            bne NEXT1
   611 3454 AD 84 35		REAA009     lda L36BF
   612 3457 4A			            lsr
   613 3458 4A			            lsr
   614 3459 49 30		            eor #$30
   615 345B AC 80 35		REAA010     ldy L36BB
   616 345E C0 1A		            cpy #$1A
   617 3460 D0 02		            bne L35B4
   618 3462 09 80		            ora #$80
   619 3464 A0 00		L35B4       ldy #$00
   620 3466 91 34		            sta (BFENLO),Y
   621 3468 C8			            iny
   622 3469 A9 FF		            lda #$FF
   623 346B 91 34		            sta (BFENLO),Y
   624 346D 30 22		            bmi JMPSIOEND
   625 				            
   626 				; command RETURN CONFIGURATION            
   627 346F C9 4E		NEXT1       cmp #$4E
   628 3471 D0 0C		            bne NEXT2
   629 3473 A0 0B		            ldy #$0B            ; 12 bytes
   630 3475			RETCNFLOOP
   631 3475 B9 7D 35		REAA011     lda CONFBUF,Y
   632 3478 91 34		            sta (BFENLO),Y
   633 347A 88			            dey
   634 347B 10 F8		            bpl RETCNFLOOP
   635 347D 30 12		            bmi JMPSIOEND
   636
   637 				; command SET CONFIGURATION
   638 347F C9 4F		NEXT2       cmp #$4F
   639 3481 D0 11		            bne NEXT3
   640 3483 A0 07		            ldy #$07
   641 3485 B1 34		            lda (BFENLO),Y
   642 3487 8D 84 35		REAA012     sta L36BF
   643 348A A0 03		            ldy #$03
   644 348C B1 34		            lda (BFENLO),Y
   645 348E 8D 80 35		REAA013     sta L36BB
   646
   647 3491			JMPSIOEND
   648 3491 4C 59 35		REAA014     jmp RDSIOEND
   649
   650 				; command FORMAT DISK
   651 3494 C9 21		NEXT3       cmp #$21
   652 3496 D0 0B		            bne NEXT4
   653 3498 A0 00		SIOFRMT     ldy #$00
   654 349A A9 FF		            lda #$FF
   655 349C 91 34		            sta (BFENLO),Y
   656 349E C8			            iny
   657 349F 91 34		            sta (BFENLO),Y
   658 34A1 D0 EE		            bne JMPSIOEND
   659
   660 				; command FORMAT DISK ENHANCED
   661 34A3 C9 22		NEXT4       cmp #$22
   662 34A5 D0 0C		            bne NEXT5
   663 34A7 A9 1A		            lda #$1A
   664 34A9 8D 80 35		REAA015     sta L36BB
   665 34AC A9 80		            lda #$80
   666 34AE 8D 84 35		REAA016     sta L36BF
   667 34B1 D0 E5		            bne SIOFRMT
   668 				            
   669 				; command PUT/GET SECTOR 
   670 34B3 C9 52		NEXT5       cmp #$52            ; command GET SECTOR
   671 34B5 F0 0B		            beq PUTGETSEC
   672 34B7 C9 57		            cmp #$57            ; command PUT SECTOR WITH VERIFY
   673 34B9 F0 07		            beq PUTGETSEC
   674 34BB C9 50		            cmp #$50            ; command PUT SECTOR
   675 34BD F0 03		            beq PUTGETSEC
   676 34BF 4C 5C 35		REAA020     jmp RDSIOEND+3      ; error NAK, command not supported
   677
   678 34C2 A9 00		PUTGETSEC   lda #$00
   679 34C4 85 32		            sta BUFRLO
   680 34C6 AD 0A 03		            lda DAUX1
   681 34C9 38			            sec
   682 34CA E9 01		            sbc #$01
   683 34CC 85 33		            sta BUFRHI
   684 34CE AD 0B 03		            lda DAUX2
   685 34D1 E9 00		            sbc #$00
   686 34D3 06 33		            asl BUFRHI
   687 34D5 2A			            rol
   688 34D6 2C 08 03		            bit DBYTLO
   689 34D9 30 06		            bmi L3631
   690 34DB 0E 84 35		REAA017     asl L36BF
   691 34DE 06 33		            asl BUFRHI
   692 34E0 2A			            rol
   693 34E1 48			L3631       pha
   694 34E2 A5 33		            lda BUFRHI
   695 34E4 4A			            lsr
   696 34E5 4A			            lsr
   697 34E6 66 32		            ror BUFRLO
   698 34E8 09 80		            ora #$80
   699 34EA 85 33		            sta BUFRHI
   700 				            
   701 34EC 8A			            txa                 ; OS off ???
   702 34ED 29 FE		            and #$FE
   703 34EF 8D 01 D3		            sta PORTB
   704 				            
   705 34F2 AD 02 03		            lda DCOMND
   706 34F5 C9 52		            cmp #$52
   707 34F7 F0 0D		            beq L3656           ; is PUT
   708 				            
   709 34F9 A0 00		            ldy #$00
   710 34FB B1 34		L364B       lda (BFENLO),Y
   711 34FD 99 AA 35		REAA005     sta BUFFERXX1,Y
   712 3500 C8			            iny
   713 3501 CC 08 03		            cpy DBYTLO
   714 3504 D0 F5		            bne L364B
   715 				            
   716 3506 68			L3656       pla                 ; check bank number
   717 3507 C9 20		REAA018     cmp #$20
   718 3509 B0 51		            bcs RDSIOEND+3      ; error NAK
   719 350B A8			            tay                 ; bank number in Y
   720
   721 350C A9 21		            lda #TCMOSL.16K     ; set new The!Cart mode
   722 350E 8D A6 D5		            sta TCMOSL          ; set 2x8k mode at $8000-$BFFF
   723 3511 A9 03		            lda #TCMOFR.PBRAM   ; set to RAM
   724 3513 8D A7 D5		            sta TCMOFR
   725 3516 98			            tya
   726 3517 0A			            asl   
   727 3518 8D A0 D5		            sta TCPBRL          ; get bank number from y
   728 351B A9 00		            lda #$00                     
   729 351D 8D A1 D5		            sta TCPBRH          ; set high to $00
   730 3520 A9 01		            lda #$01
   731 3522 8D A2 D5		            sta TCPBEN          ; enable        
   732 				            
   733 3525 A0 00		            ldy #$00
   734 3527 AD 02 03		            lda DCOMND
   735 352A C9 52		            cmp #$52
   736 352C D0 20		            bne L369B           ; is PUT
   737
   738 352E B1 32		L367B       lda (BUFRLO),Y
   739 3530 99 AA 35		REAA006     sta BUFFERXX1,Y
   740 3533 C8			            iny
   741 3534 CC 08 03		            cpy DBYTLO
   742 3537 D0 F5		            bne L367B
   743 				            
   744 3539 8A			            txa                 ; OS off ???
   745 353A 29 FE		            and #$FE
   746 353C 8D 01 D3		            sta PORTB
   747
   748 353F A0 00		            ldy #$00
   749 3541			L368E
   750 3541 B9 AA 35		REAA008     lda BUFFERXX1,Y
   751 3544 91 34		            sta (BFENLO),Y
   752 3546 C8			            iny
   753 3547 CC 08 03		            cpy DBYTLO
   754 354A D0 F5		            bne L368E
   755 354C F0 0B		            beq RDSIOEND
   756 354E			L369B
   757 354E B9 AA 35		REAA007     lda BUFFERXX1,Y
   758 3551 91 32		            sta (BUFRLO),Y
   759 3553 C8			            iny
   760 3554 CC 08 03		            cpy DBYTLO
   761 3557 D0 F5		            bne L369B
   762 				            
   763 3559 A0 01		RDSIOEND    ldy #$01
   764 355B 2C A0 8B		            bit $8BA0           ; $2c, ldy #$8b; bank/sector number error #139 NAK
   765
   766 355E			            M_cart_pop          ; restore register
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 355E 68			            pla                 
     2 355F 8D A2 D5		            sta TCPBEN          
     3 3562 68			            pla                 
     4 3563 8D A1 D5		            sta TCPBRH          
     5 3566 68			            pla                 
     6 3567 8D A0 D5		            sta TCPBRL          
     7 356A 68			            pla                 
     8 356B 8D A7 D5		            sta TCMOFR          
     9 356E 68			            pla                 
    10 356F 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   767 3572 8E 01 D3		            stx PORTB           ; restrore PORTB
   768 3575 A9 E0		            lda #$E0            ; enable interrupts
   769 3577 8D 0E D4		            sta NMIEN
   770 357A 58			            cli
   771
   772 357B 98			            tya                 ; set RC
   773 357C 60			            rts
   774 				            
   775 				; drive configuration buffer
   776 357D 28 01 12		CONFBUF     .byte $28,$01,$12
   777 3580 00 00 00 00		L36BB       .byte $00,$00,$00,$00
   778 3584 80 FF 00 00 00	L36BF       .byte $80,$FF,$00,$00,$00
   779
   780 3589 01			DRVNUM      .byte $01
   781 358A 60 64 68 6C 20 24 + BNKSWTMSK   .byte $60,$64,$68,$6C,$20,$24,$28,$2C
   782 3592 40 44 48 4C 00 04 +             .byte $40,$44,$48,$4C,$00,$04,$08,$0C
   783 359A 62 66 6A 6E 22 26 +             .byte $62,$66,$6A,$6E,$22,$26,$2A,$2E
   784 35A2 42 46 4A 4E 02 06 +             .byte $42,$46,$4A,$4E,$02,$06,$0A,$0E
   785 				; $100 Bytes
   786 35AA			BUFFERXX1
   787 				;            org $37E6
   788 = 36AA			REAEND      = BUFFERXX1 + $100
   789 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   790 				;;; END OF REALLOC BLOCK
   791 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   792
   793
   794 				; $20 Bytes
   795 = 36AA			BNKSAVBUF   = REAEND
   796
   797 				; $20 bytes
   798 				;            org $3806
   799 = 36CA			BNKSAVBUF2  = BNKSAVBUF + $20
   800
   801 				 
   802 				;           org $3826
   803 35AA			            org BNKSAVBUF2 + $20
   804 				; realloc whole addresses
   805 36EA-37F6> C5 31		REATAB      .word REAA001+1 ;$33CA
   806 36EC CF 31		            .word REAA002+1 ;$33D4
   807 36EE D6 31		            .word REAA003+1 ;$33DB
   808 36F0 19 34		            .word REAA004+1 ;$3583
   809 36F2 FE 34		            .word REAA005+1 ;$364E
   810 36F4 31 35		            .word REAA006+1 ;$367E
   811 36F6 4F 35		            .word REAA007+1 ;$369C
   812 36F8 42 35		            .word REAA008+1 ;$368F
   813 36FA 55 34		            .word REAA009+1 ;$35A5
   814 36FC 5C 34		            .word REAA010+1 ;$35AC
   815 36FE 76 34		            .word REAA011+1 ;$35C6
   816 3700 88 34		            .word REAA012+1 ;$35D8
   817 3702 8F 34		            .word REAA013+1 ;$35DF
   818 3704 92 34		            .word REAA014+1 ;$35E2
   819 3706 AA 34		            .word REAA015+1 ;$35FA
   820 3708 AF 34		            .word REAA016+1 ;$35FF
   821 370A DC 34		            .word REAA017+1 ;$362C
   822 370C 08 35		            .word REAA018+1 ;$365C
   823 370E C0 34		            .word REAA020+1 ;$3610
   824 3710 00 00		            .word $0000
   825 				 
   826 				; realloc address low byte           
   827 3712 AC 31		            .word REAL001+1 ;$33B1
   828 3714 C8 31		            .word REAL002+1 ;$33CD
   829 3716 04 34		            .word REAL003+1 ;$356E
   830 3718 00 00		            .word $0000
   831 				; realloc address high byte (address to high byte and value of low byte)
   832 371A B0 31		            .word REAH001+1  ;$33B5
   833 371C 00			            .byte <JSRDOSINI ;$6A
   834 				                        
   835 371D D2 31		            .word REAH002+1 ;$33D7
   836 371F 0E			            .byte <RAMDSIO  ;$78
   837 				            
   838 3720 09 34		            .word REAH003+1  ;$3573
   839 3722 AA			            .byte <BNKSAVBUF ;$E6
   840 				            
   841 3723 00 00		            .word $0000
   842 				            
   843 3725 A9 00		REASTART    lda #$00
   844 3727 8D F7 37		            sta REALOOPCNT
   845 372A AE F7 37		REALOOP     ldx REALOOPCNT
   846 372D BD E9 37		            lda REATABADR,X
   847 3730 8D CF 37		            sta L3910+1
   848 3733 BD EA 37		            lda REATABADR+1,X
   849 3736 8D D0 37		            sta L3910+2
   850 3739 0D CF 37		            ora L3910+1
   851 373C D0 01		            bne L3881
   852 373E 60			            rts
   853 				            
   854 373F 38			L3881       sec
   855 3740 BD ED 37		            lda READSTADR,X
   856 3743 FD EB 37		            sbc REASRCADR,X
   857 3746 8D F8 37		            sta READIFLO
   858 3749 BD EE 37		            lda READSTADR+1,X
   859 374C FD EC 37		            sbc REASRCADR+1,X
   860 374F 8D F9 37		            sta READIFHI
   861 				            
   862 3752 20 DA 37		L3894       jsr L391C
   863 3755 F0 13		            beq L38AC
   864 3757 B1 D7		            lda ($D7),Y
   865 3759 18			            clc
   866 375A 6D F8 37		            adc READIFLO
   867 375D 91 D7		            sta ($D7),Y
   868 375F C8			            iny
   869 3760 B1 D7		            lda ($D7),Y
   870 3762 6D F9 37		            adc READIFHI
   871 3765 91 D7		            sta ($D7),Y
   872 3767 4C 52 37		            jmp L3894
   873 376A 20 DA 37		L38AC       jsr L391C
   874 376D F0 0B		            beq L38BC
   875 376F B1 D7		            lda ($D7),Y
   876 3771 18			            clc
   877 3772 6D F8 37		            adc READIFLO
   878 3775 91 D7		            sta ($D7),Y
   879 3777 4C 6A 37		            jmp L38AC
   880 377A 20 DA 37		L38BC       jsr L391C
   881 377D F0 11		            beq L38D2
   882 377F 20 CE 37		            jsr L3910
   883 3782 18			            clc
   884 3783 6D F8 37		            adc READIFLO
   885 3786 B1 D7		            lda ($D7),Y
   886 3788 6D F9 37		            adc READIFHI
   887 378B 91 D7		            sta ($D7),Y
   888 378D 4C 7A 37		            jmp L38BC
   889 3790 AE F7 37		L38D2       ldx REALOOPCNT
   890
   891 3793 BD EF 37		            lda CPYFROMADR,X
   892 3796 8D B1 37		            sta L38F2+1
   893 3799 BD F0 37		            lda CPYFROMADR+1,X
   894 379C 8D B2 37		            sta L38F2+2
   895
   896 379F BD F3 37		            lda CPYTOADR,X
   897 37A2 8D B4 37		            sta L38F2+4
   898 37A5 BD F4 37		            lda CPYTOADR+1,X
   899 37A8 8D B5 37		            sta L38F2+5
   900
   901 37AB BC F2 37		            ldy CPYLENGTH+1,X
   902 37AE A2 00		            ldx #$00
   903 37B0 BD FF FF		L38F2       lda $FFFF,X
   904 37B3 9D FF FF		            sta $FFFF,X
   905 37B6 E8			            inx
   906 37B7 D0 F7		            bne L38F2
   907 37B9 EE B2 37		            inc L38F2+2
   908 37BC EE B5 37		            inc L38F2+5
   909 37BF 88			            dey
   910 37C0 10 EE		            bpl L38F2
   911 37C2 AD F7 37		            lda REALOOPCNT
   912 37C5 18			            clc
   913 37C6 69 0C		            adc #$0C
   914 37C8 8D F7 37		            sta REALOOPCNT
   915 37CB 4C 2A 37		            jmp REALOOP
   916 				            
   917 37CE AD FF FF		L3910       lda $FFFF
   918 37D1 EE CF 37		            inc L3910+1
   919 37D4 D0 03		            bne L391B
   920 37D6 EE D0 37		            inc L3910+2
   921 37D9 60			L391B       rts
   922
   923 37DA 20 CE 37		L391C       jsr L3910
   924 37DD 85 D7		            sta $D7
   925 37DF 20 CE 37		            jsr L3910
   926 37E2 A0 00		            ldy #$00
   927 37E4 85 D8		            sta $D8
   928 37E6 05 D7		            ora $D7
   929 37E8 60			            rts
   930
   931 				; realloc code pointer
   932 37E9 EA 36		REATABADR   .word REATAB
   933 37EB 00 34		REASRCADR   .word REABEGIN
   934 37ED FF FF		READSTADR   .word $FFFF
   935 				; copy code pointer
   936 37EF 00 34		CPYFROMADR  .word REABEGIN
   937 37F1 AA 02		CPYLENGTH   .word REAEND-REABEGIN ;$027C
   938 37F3 FF FF		CPYTOADR    .word $FFFF
   939 37F5 00 00		            .word $0000
   940 				            
   941 				; $01 byte
   942 37F7			REALOOPCNT  ;= $392B
   943 = 37F8			READIFLO   = REALOOPCNT+1
   944 = 37F9			READIFHI   = READIFLO+1
   945
   946
   947 				         
