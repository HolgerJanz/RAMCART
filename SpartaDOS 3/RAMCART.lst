mads 1.9.9
     1 				;
     2 				; THE!RAMDISK for THE!CART for SpartaDOS 3 
     3 				; Previous work RD/RAMDISK.COM for SpartaDOS 3 by FTe
     4 				;   RD Ver 2.3 07-14-86 (c) 1984 by FTe
     5 				;
     6 				; System equates
     7 				;
     8 				; OS EQUATES
     9 				; ----------
    10 				; 
    11 				; IO EQUATES
    12 				; 
    13 = 0002			ICCOM       = $0002
    14 = 0008			ICBLL       = $0008
    15 = 0009			ICBLH       = $0009
    16 				; 
    17 				; OS VARIABLES FOR XL/XE
    18 				; 
    19 				; PAGE 0
    20 				; 
    21 = 000A			DOSVEC      = $000A
    22 = 000C			DOSINI      = $000C
    23 = 0012			RTCLOK      = $0012
    24 = 0032			BUFRLO      = $0032
    25 = 0033			BUFRHI      = $0033
    26 = 0034			BFENLO      = $0034
    27 = 0035			BFENHI      = $0035
    28 = 0042			CRITIC      = $0042
    29 				; 
    30 				; PAGE 2
    31 				; 
    32 = 022F			SDMCTL      = $022F
    33 = 02E7			MEMLO       = $02E7
    34 				; 
    35 				; PAGE 3
    36 				; 
    37 = 0300			DDEVIC      = $0300
    38 = 0301			DUNIT       = $0301
    39 = 0302			DCOMND      = $0302
    40 = 0304			DBUFLO      = $0304
    41 = 0305			DBUFHI      = $0305
    42 = 0308			DBYTLO      = $0308
    43 = 0309			DBYTHI      = $0309
    44 = 030A			DAUX1       = $030A
    45 = 030B			DAUX2       = $030B
    46 = 0340			IOCB0       = $0340
    47 				; 
    48 				; PIA
    49 				; 
    50 = D300			PORTA       = $D300
    51 = D301			PORTB       = $D301
    52 = D302			PACTL       = $D302
    53 = D303			PBCTL       = $D303
    54 				; 
    55 				; ANTIC
    56 				;
    57 = D400			DMACTL      = $D400 
    58 = D40A			WSYNC       = $D40A
    59 = D40E			NMIEN       = $D40E
    60 				; 
    61 				; ROM VECTORS
    62 				; 
    63 = E456			CIOV        = $E456
    64 				;
    65 				; SpartaDOS 
    66 				;
    67 = 000A			SD_BUFOFF      = $0A ; offset in line buffer
    68 = 003F			SD_LBUF        = $3F ; offset to line buffer
    69 = 0003			SD_ZCRNAME     = $03 ; offset for jmp to crunch name
    70 = 0021			SD_COMFNAM     = $21 ; offset to result buffer for crunch name 
    71 = 000A			SD_LSIO        = $0A ; negative offset to SIO vector
    72
    73 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    74 				; 
    75 				; The!Cart programming information
    76 				; (c) 2013 Matthias Reichl
    77 				;
    78 				; The!Cart is equipped with 128MB flash (Spansion S29GL01
    79 				; chip), 512k RAM and a 256-byte SPI EEPROM (Microchip
    80 				; 25AA020A). The memory is addressed using 16384 8k banks
    81 				; (64 8k banks when using RAM instead of flash).
    82 				; 
    83 				; The cartridge configuration registers are located at
    84 				; $D5A0-$D5A8. All registers are read/write unless noted
    85 				; otherwise. Unused bits shall be written as '0' and
    86 				; always read back as '0'.
    87 				; 
    88 				; Powerup configuration is 8k mode ($A000-$BFFF) using
    89 				; flash bank 0, writes to flash are disabled.
    90 				; 
    91 				; Depending on the selected cartridge mode additional
    92 				; registers are enabled at $D5xx.
    93 				; 
    94 				; The primary bank register also serves as a base bank
    95 				; register for the various sub-modes.
    96 				; 
    97 				; The secondary bank register is only used in "flexi mode".
    98 				;
    99
   100 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   101 				; 
   102 				; The!Cart Register (from-to,default)
   103 				;
   104
   105 				; Mode Select
   106 = D5A6			TCMOSL = $d5a6    ; mode ($00-$3d,$01)
   107 				; Cartridge mode is selected with bits 0-5 of $D5A6, values
   108 				; other than the ones listed here are reserved (and result
   109 				; in "cartridge off"):
   110 				; $00: off, cartridge disabled
   111 				; $01: 8k banks at $A000
   112 				; $02: AtariMax 1MBit / 128k
   113 				; $03: Atarimax 8MBit / 1MB
   114 				; $04: OSS M091
   115 				; $08: SDX 64k cart, $D5Ex banking
   116 				; $09: Diamond GOS 64k cart, $D5Dx banking
   117 				; $0A: Express 64k cart, $D57x banking
   118 				; $0C: Atrax 128k cart
   119 				; $0D: Williams 64k cart
   120 				; $20: flexi mode (separate 8k banks at $A000 and $8000)
   121 				; $21: standard 16k cart at $8000-$BFFF
   122 				; $22: MegaMax 16k mode (up to 2MB), AtariMax 8Mbit banking
   123 				; $23: Blizzard 16k
   124 				; $24: Sic!Cart 512k
   125 				; $28: 16k Mega cart
   126 				; $29: 32k Mega cart
   127 				; $2A: 64k Mega cart
   128 				; $2B: 128k Mega cart
   129 				; $2C: 256k Mega cart
   130 				; $2D: 512k Mega cart
   131 				; $2E: 1024k Mega cart
   132 				; $2F: 2048k Mega cart
   133 				; $30: 32k XEGS cart
   134 				; $31: 64k XEGS cart
   135 				; $32: 128k XEGS cart
   136 				; $33: 256k XEGS cart
   137 				; $34: 512k XEGS cart
   138 				; $35: 1024k XEGS cart
   139 				; $38: 32k SWXEGS cart
   140 				; $39: 64k SWXEGS cart
   141 				; $3A: 128k SWXEGS cart
   142 				; $3B: 256k SWXEGS cart
   143 				; $3C: 512k SWXEGS cart
   144 				; $3D: 1024k SWXEGS cart
   145 = 0000			TCMOSL.OFF   = $00    ; off, cartridge disabled
   146 = 0001			TCMOSL.8K    = $01    ; 8k banks at $A000
   147 = 0021			TCMOSL.FLEXI = $21    ; flexi mode,
   148 				                         ; separate 8k banks at $A000 and $8000
   149 = 0021			TCMOSL.16K   = $21    ; standard 16k cart at $8000-$BFFF
   150
   151 				; how to figure out that The!Cart is not active?
   152 				; If the address is not used then the XL returns $ff but
   153 				; the XE (and old 800) return $d5 (high byte of address,
   154 				; the value of the last bus cycle)
   155 = 00FF			TCMOSL.XLLOCK  = $ff    ; config lock or not present
   156 = 00D5			TCMOSL.XELOCK  = $d5    ; config lock or not present
   157
   158 				; Mode Flash/RAM Select
   159 = D5A7			TCMOFR = $d5a7    ;flash/RAM mode (0-15,0)
   160 				; bit 0: primary bank write enable (0=readOnly, 1=write)
   161 				; bit 1: primary bank source (0=flash, 1=RAM)
   162 				; bit 2: secondary bank write enable (0=readOnly, 1=write)
   163 				; bit 3: secondary bank source (0=flash, 1=RAM)
   164 = 0003			TCMOFR.PBRAM = $03    ; primary bank RAM
   165 = 000C			TCMOFR.SBRAM = $0C    ; secondary bank RAM
   166
   167 				; Primary Bank
   168 = D5A0			TCPBRL = $d5a0    ; register low byte (0-255,0)
   169 = D5A1			TCPBRH = $d5a1    ; register high byte (0-63,0)
   170 = D5A2			TCPBEN = $d5a2    ; enable (0=dis-1=en,1)
   171
   172 				; Secondary Bank 
   173 = D5A3			TCSBRL = $d5a3    ; register low byte (0-255,0)
   174 = D5A4			TCSBRH = $d5a4  ; register high byte (0-63,0)
   175 = D5A5			TCSBEN = $d5a5    ; enable (0=dis-1=en,0)
   176
   177 				; SPI interface to EEPROM
   178 = D5A8			TCINEP = $d5a8
   179 				; bit 0: SPI CLK
   180 				; bit 1: SPI CS
   181 				; bit 7: SPI data in (on reads), SPI data out (on writes)
   182
   183 				; configuration lock
   184 = D5AF			TCCOLO = $d5af
   185 				; Writing to this register disables "The!Cart" registers
   186 				; at $d5aX.
   187
   188
   189 				; macros
   190
   191 				; saves register: pushes bank register on stack
   192 				M_cart_push .macro
   193 				            lda TCMOSL
   194 				            pha
   195 				            lda TCMOFR
   196 				            pha
   197 				            lda TCPBRL
   198 				            pha
   199 				            lda TCPBRH
   200 				            pha
   201 				            lda TCPBEN
   202 				            pha
   203 				            .endm
   204
   205 				; restores register from stack: pops from stack
   206 				M_cart_pop  .macro
   207 				            pla                 
   208 				            sta TCPBEN          
   209 				            pla                 
   210 				            sta TCPBRH          
   211 				            pla                 
   212 				            sta TCPBRL          
   213 				            pla                 
   214 				            sta TCMOFR          
   215 				            pla                 
   216 				            sta TCMOSL          
   217 				            .endm
   218 				 
   219 				; saves register and sync: pushes bank register on stack
   220 				M_cart_sync_push .macro
   221 				            lda SDMCTL
   222 				            pha
   223 				            M_cart_push
   224 				            lda #$00
   225 				            sta SDMCTL
   226 				            jsr WAITSYNC        ; wait for vblank
   227 				            sei
   228 				            lda #$00
   229 				            sta NMIEN
   230 				            .endm
   231
   232 				; restores register from stack anf sync: pops from stack
   233 				M_cart_sync_pop  .macro
   234 				            M_cart_pop
   235 				            lda #$E0            ; enable interrupts
   236 				            sta NMIEN
   237 				            cli
   238 				            pla
   239 				            sta SDMCTL
   240 				            .endm
   241
   242 				; set bank: number of bank in X, uses A
   243 				M_cart_set  .macro
   244 				; set new The!Cart mode
   245 				            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
   246 				            sta TCMOSL          
   247 				            lda #TCMOFR.PBRAM       ; set to RAM
   248 				            sta TCMOFR
   249 				            txa
   250 				            asl   
   251 				            sta TCPBRL              ; get bank number from X
   252 				            lda #$00                     
   253 				            sta TCPBRH              ; set high to $00
   254 				            lda #$01
   255 				            sta TCPBEN              ; enable        
   256 				            .endm
   257
   258 				;
   259 				; Start of code
   260 				;
   261 				            org $3000
   262 				            
   263 				; save the!cart registers
   264 3000			            M_cart_sync_push            
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 FFFF> 3000-3582> AD 2F +             lda SDMCTL
     2 3003 48			            pha
     1 3004 AD A6 D5		            lda TCMOSL
     2 3007 48			            pha
     3 3008 AD A7 D5		            lda TCMOFR
     4 300B 48			            pha
     5 300C AD A0 D5		            lda TCPBRL
     6 300F 48			            pha
     7 3010 AD A1 D5		            lda TCPBRH
     8 3013 48			            pha
     9 3014 AD A2 D5		            lda TCPBEN
    10 3017 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     4 3018 A9 00		            lda #$00
     5 301A 8D 2F 02		            sta SDMCTL
     6 301D 20 20 32		            jsr WAITSYNC        ; wait for vblank
     7 3020 78			            sei
     8 3021 A9 00		            lda #$00
     9 3023 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   265 				; try to save and write banks            
   266 3026 A2 1F		            ldx #$1F
   267 3028			BNKSAVWRT   M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3028 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 302A 8D A6 D5		            sta TCMOSL          
     4 302D A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 302F 8D A7 D5		            sta TCMOFR
     6 3032 8A			            txa
     7 3033 0A			            asl   
     8 3034 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3037 A9 00		            lda #$00                     
    10 3039 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 303C A9 01		            lda #$01
    12 303E 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   268 3041 AD 00 90		            lda $9000
   269 3044 9D 03 36		            sta BNKSAVBUF,X
   270 3047 8E 00 90		            stx $9000
   271 304A AD 00 B0		            lda $B000
   272 304D 9D 23 36		            sta BNKSAVBUF2,X
   273 3050 8E 00 B0		            stx $B000
   274 3053 CA			            dex
   275 3054 10 D2		            bpl BNKSAVWRT
   276 				; check banks
   277 3056 E8			BNKCHK      inx
   278 3057			            M_cart_set            
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3057 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3059 8D A6 D5		            sta TCMOSL          
     4 305C A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 305E 8D A7 D5		            sta TCMOFR
     6 3061 8A			            txa
     7 3062 0A			            asl   
     8 3063 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3066 A9 00		            lda #$00                     
    10 3068 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 306B A9 01		            lda #$01
    12 306D 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   279 3070 EC 00 90		            cpx $9000
   280 3073 D0 0A		            bne BNKSTOP
   281 3075 EC 00 B0		            cpx $B000
   282 3078 D0 05		            bne BNKSTOP
   283 307A E0 1F		            cpx #$1F
   284 307C D0 D8		            bne BNKCHK
   285 307E E8			            inx
   286 307F 8E 5C 31		BNKSTOP     stx BNKCNT
   287 				; restore banks
   288 3082 A2 00		            ldx #$00
   289 3084			BNKRESTR    M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 3084 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 3086 8D A6 D5		            sta TCMOSL          
     4 3089 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 308B 8D A7 D5		            sta TCMOFR
     6 308E 8A			            txa
     7 308F 0A			            asl   
     8 3090 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3093 A9 00		            lda #$00                     
    10 3095 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3098 A9 01		            lda #$01
    12 309A 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   290 309D BD 03 36		            lda BNKSAVBUF,X
   291 30A0 8D 00 90		            sta $9000
   292 30A3 BD 23 36		            lda BNKSAVBUF2,X
   293 30A6 8D 00 B0		            sta $B000
   294 30A9 E8			            inx
   295 30AA E0 20		            cpx #$20
   296 30AC D0 D6		            bne BNKRESTR
   297 				            
   298 				; restore the!cart registers
   299 30AE			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 30AE 68			            pla                 
     2 30AF 8D A2 D5		            sta TCPBEN          
     3 30B2 68			            pla                 
     4 30B3 8D A1 D5		            sta TCPBRH          
     5 30B6 68			            pla                 
     6 30B7 8D A0 D5		            sta TCPBRL          
     7 30BA 68			            pla                 
     8 30BB 8D A7 D5		            sta TCMOFR          
     9 30BE 68			            pla                 
    10 30BF 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 30C2 A9 E0		            lda #$E0            ; enable interrupts
     3 30C4 8D 0E D4		            sta NMIEN
     4 30C7 58			            cli
     5 30C8 68			            pla
     6 30C9 8D 2F 02		            sta SDMCTL
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   300
   301 				; info message
   302 30CC 20 A9 33		            jsr PRINT
   303 30CF 54 48 45 21 52 41 +             .byte 'THE!RAMDISK for THE!CART vers47',$9B,$FF
   304
   305 				; check bank count
   306 30F0 AE 5C 31		            ldx BNKCNT
   307 30F3 E0 20		            cpx #$20
   308 30F5 F0 50		            beq RAMDISKINI
   309
   310 				; no banks            
   311 30F7 20 A9 33		            jsr PRINT
   312 30FA 20 20 45 72 72 6F +             .byte '  Error - 512k RAM THE!CART not found',$9B
   313 3120 20 20 55 73 65 20 +             .byte '  Use SHIFT+RETURN/ESC in start menu',$9B,$FF
   314 3146 60			            rts
   315 				                        
   316 3147			RAMDISKINI
   317 				; check for parameter
   318 3147 A0 0A		            ldy #SD_BUFOFF
   319 3149 B1 0A		            lda (DOSVEC),Y
   320 314B 18			            clc
   321 314C 69 3F		            adc #SD_LBUF
   322 314E A8			            tay
   323 314F B1 0A		            lda (DOSVEC),Y
   324 3151 C9 9B		            cmp #$9B
   325 3153 D0 08		            bne PRSPARM
   326 				; no parameter -> error
   327 3155 4C 98 31		            jmp PARAMERR
   328
   329 				; jump for jsr to crunch name
   330 3158 4C FF FF		CRNAME      jmp $FFFF
   331
   332 315B FF			CHKFRMT     .byte $FF
   333 315C 00			BNKCNT      .byte $00
   334
   335 				; set crunch name address
   336 315D A5 0A		PRSPARM     lda DOSVEC
   337 315F 18			            clc
   338 3160 69 03		            adc #SD_ZCRNAME
   339 3162 8D 59 31		            sta CRNAME+1
   340 3165 A5 0B		            lda DOSVEC+1
   341 3167 69 00		            adc #$00
   342 3169 8D 5A 31		            sta CRNAME+2
   343 				            
   344 				; parameter parsing            
   345 				; get drive number SD_COMFNAM starts alway with Dx:
   346 316C 20 58 31		            jsr CRNAME
   347 316F D0 27		            bne PARAMERR
   348 3171 A0 22		            ldy #SD_COMFNAM+1
   349 3173 B1 0A		            lda (DOSVEC),Y
   350 3175 29 0F		            and #$0F
   351 3177 8D 82 35		            sta DRVNUM
   352 				; check options /N
   353 317A 20 58 31		            jsr CRNAME
   354 317D F0 4F		            beq PRSPAREND
   355 317F A0 24		            ldy #SD_COMFNAM+3
   356 3181 B1 0A		            lda (DOSVEC),Y
   357 3183 C9 2F		            cmp #'/'
   358 3185 D0 11		            bne PARAMERR
   359 3187 C8			PRSPARLOOP  iny
   360 3188 B1 0A		            lda (DOSVEC),Y
   361 318A C9 9B		            cmp #$9B         ; end of parameter
   362 318C F0 40		            beq PRSPAREND
   363 318E C9 4E		PRSPARNXT   cmp #'N'         ; format ?
   364 3190 D0 06		            bne PARAMERR
   365 				; check format at startup to preserve existing RAM disk            
   366 3192 EE 5B 31		            inc CHKFRMT
   367 3195 4C 87 31		            jmp PRSPARLOOP
   368 3198 20 A9 33		PARAMERR    jsr PRINT
   369 319B 20 20 45 72 72 6F +             .byte '  Error - Wrong parameter',$9B
   370 31B5 20 20 55 73 65 20 +             .byte '  Use RAMCART Dn: [/N]',$9B,$FF
   371 31CD 60			            rts
   372
   373 				; set jsr to original DOSINI
   374 31CE A5 0C		PRSPAREND   lda DOSINI
   375 31D0 8D E0 33		            sta JSRDOSINI+1
   376 31D3 A5 0D		            lda DOSINI+1
   377 31D5 8D E1 33		            sta JSRDOSINI+2
   378
   379 				; set MEMLO oldaddress, realloc
   380 31D8 AD E7 02		            lda MEMLO
   381 31DB 8D 4C 37		            sta READSTADR
   382 31DE 8D 52 37		            sta CPYTOADR
   383 31E1 AD E8 02		            lda MEMLO+1
   384 31E4 8D 4D 37		            sta READSTADR+1
   385 31E7 8D 53 37		            sta CPYTOADR+1
   386 				;
   387 				; start realloc
   388 				;
   389 31EA 20 84 36		            jsr REASTART
   390
   391 				; set new DOSINI            
   392 31ED A9 DF		REAL001     lda #<JSRDOSINI
   393 31EF 85 0C		            sta DOSINI
   394 31F1 A9 33		REAH001     lda #>JSRDOSINI
   395 31F3 85 0D		            sta DOSINI+1
   396 				; get SIO and patch for RAMDISK
   397 31F5 38			            sec
   398 31F6 A5 0A		            lda DOSVEC
   399 31F8 E9 0A		            sbc #SD_LSIO
   400 31FA 85 32		            sta BUFRLO
   401 31FC A5 0B		            lda DOSVEC+1
   402 31FE E9 00		            sbc #$00
   403 3200 85 33		            sta BUFRHI
   404 3202 A0 00		            ldy #$00
   405 3204 B1 32		            lda (BUFRLO),Y
   406 3206 8D FD 33		REAA001     sta JMPSIO+1      ;realloc $33CA
   407 3209 A9 ED		REAL002     lda #<RAMDSIO
   408 320B 91 32		            sta (BUFRLO),Y
   409 320D C8			            iny
   410 320E B1 32		            lda (BUFRLO),Y
   411 3210 8D FE 33		REAA002     sta JMPSIO+2      ;realloc $33D4
   412 3213 A9 33		REAH002     lda #>RAMDSIO
   413 3215 91 32		            sta (BUFRLO),Y
   414 				; set MEMLO            
   415 3217 20 E2 33		REAA003     jsr SETMEMLO      ;realloc $33DB
   416 				; format if requested            
   417 321A 2C 5B 31		            bit CHKFRMT
   418 321D 30 08		            bmi FRMTRD
   419 321F 60			            rts
   420
   421 				; wait for sync            
   422 3220 A5 14		WAITSYNC    lda RTCLOK+2
   423 3222 C5 14		WAITLOOP    cmp RTCLOK+2
   424 3224 F0 FC		            beq WAITLOOP
   425 3226 60			            rts
   426 				            
   427 				; format ramdisk
   428 3227 20 A9 33		FRMTRD      jsr PRINT
   429 322A 20 20 52 41 4D 20 +             .byte '  RAM Cart 512K formatted',$9B,$FF
   430
   431 				; save register
   432 3245			            M_cart_sync_push
Macro: M_CART_SYNC_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3245 AD 2F 02		            lda SDMCTL
     2 3248 48			            pha
     1 3249 AD A6 D5		            lda TCMOSL
     2 324C 48			            pha
     3 324D AD A7 D5		            lda TCMOFR
     4 3250 48			            pha
     5 3251 AD A0 D5		            lda TCPBRL
     6 3254 48			            pha
     7 3255 AD A1 D5		            lda TCPBRH
     8 3258 48			            pha
     9 3259 AD A2 D5		            lda TCPBEN
    10 325C 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     4 325D A9 00		            lda #$00
     5 325F 8D 2F 02		            sta SDMCTL
     6 3262 20 20 32		            jsr WAITSYNC        ; wait for vblank
     7 3265 78			            sei
     8 3266 A9 00		            lda #$00
     9 3268 8D 0E D4		            sta NMIEN
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   433
   434 				; set sector for VTOC part 1
   435 326B A2 00		            ldx #$00
   436 326D			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 326D A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 326F 8D A6 D5		            sta TCMOSL          
     4 3272 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 3274 8D A7 D5		            sta TCMOFR
     6 3277 8A			            txa
     7 3278 0A			            asl   
     8 3279 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 327C A9 00		            lda #$00                     
    10 327E 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3281 A9 01		            lda #$01
    12 3283 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   437 				; clear loop
   438 3286 A9 00		            lda #$00
   439 3288 A8			            tay
   440 3289 99 00 80		FRMTCLP1    sta $8000,Y
   441 328C 99 00 81		            sta $8100,Y
   442 328F 99 00 82		            sta $8200,Y
   443 3292 99 00 83		            sta $8300,Y
   444 3295 C8			            iny
   445 3296 D0 F1		            bne FRMTCLP1
   446
   447 				; set sector for VTOC
   448 3298 A2 00		            ldx #$00
   449 329A			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 329A A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 329C 8D A6 D5		            sta TCMOSL          
     4 329F A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32A1 8D A7 D5		            sta TCMOFR
     6 32A4 8A			            txa
     7 32A5 0A			            asl   
     8 32A6 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32A9 A9 00		            lda #$00                     
    10 32AB 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32AE A9 01		            lda #$01
    12 32B0 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   450 				; header loop            
   451 32B3 A0 2A		            ldy #$2A
   452 32B5 B9 6D 33		FRMTHLP     lda RDHEAD,Y
   453 32B8 99 00 80		            sta $8000,Y
   454 32BB 88			            dey
   455 32BC 10 F7		            bpl FRMTHLP
   456
   457 				; set sector for VTOC
   458 32BE A2 00		            ldx #$00
   459 32C0			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 32C0 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32C2 8D A6 D5		            sta TCMOSL          
     4 32C5 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32C7 8D A7 D5		            sta TCMOFR
     6 32CA 8A			            txa
     7 32CB 0A			            asl   
     8 32CC 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 32CF A9 00		            lda #$00                     
    10 32D1 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 32D4 A9 01		            lda #$01
    12 32D6 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   460 				; set free sector VTOC             
   461 32D9 A9 20		            lda #$20            ; 16k bank count
   462 32DB 4A			            lsr
   463 32DC 4A			            lsr
   464 32DD AA			            tax
   465 32DE 20 60 33		FRMTVTOCLP  jsr FRMTSETVTOC
   466 32E1 AD 65 33		            lda FRMTVTOCIT+1
   467 32E4 18			            clc
   468 32E5 69 40		            adc #$40
   469 32E7 8D 65 33		            sta FRMTVTOCIT+1
   470 32EA AD 66 33		            lda FRMTVTOCIT+2
   471 32ED 69 00		            adc #$00
   472 32EF 8D 66 33		            sta FRMTVTOCIT+2
   473 32F2 CA			            dex
   474 32F3 D0 E9		            bne FRMTVTOCLP
   475
   476 				; set sector for VTOC
   477 32F5 A2 00		            ldx #$00
   478 32F7			            M_cart_set
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 32F7 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 32F9 8D A6 D5		            sta TCMOSL          
     4 32FC A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 32FE 8D A7 D5		            sta TCMOFR
     6 3301 8A			            txa
     7 3302 0A			            asl   
     8 3303 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3306 A9 00		            lda #$00                     
    10 3308 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 330B A9 01		            lda #$01
    12 330D 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   479 				 ; set map sector
   480 3310 A9 04		            lda #$04 
   481 3312 8D 0F 80		            sta $800F     ; number of bit map sectors used on the disk
   482 3315 18			            clc
   483 3316 69 02		            adc #$02
   484 3318 8D 09 80		            sta $8009     ; first sector map of the MAIN directory
   485 331B A9 00		            lda #$00 
   486 331D 8D 80 80		            sta $8080
   487 3320 A9 80		            lda #$80      ; low address of MAIN sector map
   488 3322 85 32		            sta BUFRLO
   489 3324 A9 82		            lda #$82      ; high address of MAIN sector map
   490 3326 85 33		            sta BUFRHI   
   491 3328 18			            clc
   492 3329 A0 04		            ldy #$04
   493 332B AD 09 80		            lda $8009
   494 332E 69 01		            adc #$01
   495 3330 91 32		            sta (BUFRLO),Y
   496 				; set MAIN sector map            
   497 3332 A2 00		            ldx #$00
   498 3334 A0 80		            ldy #$80
   499 3336 BD 98 33		L349B       lda RDMAIN,X
   500 3339 91 32		            sta (BUFRLO),Y
   501 333B E8			            inx
   502 333C C8			            iny
   503 333D E0 11		            cpx #$11
   504 333F D0 F5		            bne L349B
   505
   506 				; restore register
   507 3341			            M_cart_sync_pop
Macro: M_CART_SYNC_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3341 68			            pla                 
     2 3342 8D A2 D5		            sta TCPBEN          
     3 3345 68			            pla                 
     4 3346 8D A1 D5		            sta TCPBRH          
     5 3349 68			            pla                 
     6 334A 8D A0 D5		            sta TCPBRL          
     7 334D 68			            pla                 
     8 334E 8D A7 D5		            sta TCMOFR          
     9 3351 68			            pla                 
    10 3352 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
     2 3355 A9 E0		            lda #$E0            ; enable interrupts
     3 3357 8D 0E D4		            sta NMIEN
     4 335A 58			            cli
     5 335B 68			            pla
     6 335C 8D 2F 02		            sta SDMCTL
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   508 				; finished
   509 335F 60			            rts
   510 				            
   511 				; set VTOC            
   512 3360 A0 00		FRMTSETVTOC ldy #$00
   513 3362 A9 FF		            lda #$FF
   514 3364 99 80 80		FRMTVTOCIT  sta $8080,Y
   515 3367 C8			            iny
   516 3368 C0 40		            cpy #$40
   517 336A D0 F8		            bne FRMTVTOCIT
   518 336C 60			            rts
   519
   520 336D 00 03 00 07 E0 07 + RDHEAD      .byte $00,$03,$00,$07,$E0,$07,$4C,$80
   521 3375 30 03 00		            .byte $30,$03,$00 ;original $00,$04,$FB,$03
   522 3378 00 10 F8 0F		            .word $1000,$0ff8 ; 512k
   523 337C 01 02 00 20 00 00 +             .byte $01, $02,$00,$20,$00,$00,$00
   524 3383 43 41 52 54 35 31 +             .byte 'CART512K'
   525 338B 00 80 22 00 00 00 +             .byte $00,$80,$22,$00,$00,$00,$00,$00
   526 3393 00 16 00 00 00	            .byte $00,$16,$00,$00,$00
   527
   528 3398 08 00 00 11 00 00	RDMAIN      .byte $08,$00,$00,$11,$00,$00
   529 339E 4D 41 49 4E 20 20 +             .byte 'MAIN       '
   530
   531
   532 				; print subroutine            
   533 33A9 68			PRINT       pla
   534 33AA 8D BA 33		            sta PRINTITER+1
   535 33AD 68			            pla
   536 33AE 8D BB 33		            sta PRINTITER+2
   537 33B1 EE BA 33		PRINTLOOP   inc PRINTITER+1
   538 33B4 D0 03		            bne PRINTITER
   539 33B6 EE BB 33		            inc PRINTITER+2
   540 33B9 AD FF FF		PRINTITER   lda $FFFF
   541 33BC C9 FF		            cmp #$FF
   542 33BE F0 06		            beq PRINTEND
   543 33C0 20 CF 33		            jsr CIOPUTCHR
   544 33C3 4C B1 33		            jmp PRINTLOOP
   545 33C6 AD BB 33		PRINTEND    lda PRINTITER+2
   546 33C9 48			            pha
   547 33CA AD BA 33		            lda PRINTITER+1
   548 33CD 48			            pha
   549 33CE 60			            rts
   550 				; call cio put char subroutine
   551 33CF A2 00		CIOPUTCHR   ldx #$00
   552 33D1 8E 48 03		            stx IOCB0+ICBLL
   553 33D4 8E 49 03		            stx IOCB0+ICBLH
   554 33D7 A0 0B		            ldy #$0B
   555 33D9 8C 42 03		            sty IOCB0+ICCOM
   556 33DC 4C 56 E4		            jmp CIOV
   557
   558
   559
   560 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   561 				;;; BEGIN OF REALLOC BLOCK
   562 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   563
   564 				; to realloc routines
   565 				; DOSINI set MEMLO at reset
   566 33DF			REABEGIN
   567
   568 33DF 20 00 00		JSRDOSINI   jsr $0000
   569 33E2			SETMEMLO    
   570 33E2 A9 03		REAL003     lda #<REAEND
   571 33E4 8D E7 02		            sta MEMLO
   572 33E7 A9 36		REAH003     lda #>REAEND
   573 33E9 8D E8 02		            sta MEMLO+1
   574 33EC 60			            rts
   575
   576 				; new DOSVEC for RAMDISK device
   577 33ED AD 00 03		RAMDSIO     lda DDEVIC
   578 33F0 C9 31		            cmp #$31
   579 33F2 D0 08		            bne JMPSIO
   580 33F4 AD 01 03		            lda DUNIT
   581 33F7 CD 82 35		REAA004     cmp DRVNUM
   582 33FA F0 03		            beq NEWSIOGO
   583 33FC 4C 00 00		JMPSIO      jmp $0000
   584
   585 				; set buffer address
   586 33FF AD 04 03		NEWSIOGO    lda DBUFLO
   587 3402 85 34		            sta BFENLO
   588 3404 AD 05 03		            lda DBUFHI
   589 3407 85 35		            sta BFENHI
   590 				; load commad byte            
   591 3409 AD 02 03		            lda DCOMND
   592 				; command STATUS REQUEST
   593 340C C9 53		            cmp #$53 
   594 340E D0 1B		            bne NEXT1
   595 3410 AD 7D 35		REAA009     lda CONFSECSIZ
   596 3413 4A			            lsr
   597 3414 4A			            lsr
   598 3415 49 30		            eor #$30
   599 3417 AC 79 35		REAA010     ldy L36BB
   600 341A C0 1A		            cpy #$1A
   601 341C D0 02		            bne L35B4
   602 341E 09 80		            ora #$80
   603 3420 A0 00		L35B4       ldy #$00
   604 3422 91 34		            sta (BFENLO),Y
   605 3424 C8			            iny
   606 3425 A9 FF		            lda #$FF
   607 3427 91 34		            sta (BFENLO),Y
   608 3429 30 24		            bmi JMPSIOEND
   609 				            
   610 				; command RETURN CONFIGURATION            
   611 342B C9 4E		NEXT1       cmp #$4E
   612 342D D0 0C		            bne NEXT2
   613 342F A0 0B		            ldy #$0B            ; 12 bytes
   614 3431			RETCNFLOOP
   615 3431 B9 76 35		REAA011     lda CONFBUF,Y
   616 3434 91 34		            sta (BFENLO),Y
   617 3436 88			            dey
   618 3437 10 F8		            bpl RETCNFLOOP
   619 3439 30 14		            bmi JMPSIOEND
   620
   621 				; command SET CONFIGURATION
   622 343B C9 4F		NEXT2       cmp #$4F
   623 343D D0 13		            bne NEXT3
   624 343F A0 07		            ldy #$07
   625 3441 B1 34		            lda (BFENLO),Y
   626 3443 F0 38		            beq REAA020         ; error if sec size <> $80 ( $00 -> $100)            
   627 3445 8D 7D 35		REAA012     sta CONFSECSIZ
   628 3448 A0 03		            ldy #$03
   629 344A B1 34		            lda (BFENLO),Y
   630 344C 8D 79 35		REAA013     sta L36BB
   631
   632 344F			JMPSIOEND
   633 344F 4C 6F 35		REAA014     jmp RDSIOEND
   634
   635 				; command FORMAT DISK
   636 3452 C9 21		NEXT3       cmp #$21
   637 3454 D0 0B		            bne NEXT4
   638 3456 A0 00		SIOFRMT     ldy #$00
   639 3458 A9 FF		            lda #$FF
   640 345A 91 34		            sta (BFENLO),Y
   641 345C C8			            iny
   642 345D 91 34		            sta (BFENLO),Y
   643 345F D0 EE		            bne JMPSIOEND
   644
   645 				; command FORMAT DISK ENHANCED
   646 3461 C9 22		NEXT4       cmp #$22
   647 3463 D0 0C		            bne NEXT5
   648 3465 A9 1A		            lda #$1A
   649 3467 8D 79 35		REAA015     sta L36BB
   650 346A A9 80		            lda #$80
   651 346C 8D 7D 35		REAA016     sta CONFSECSIZ
   652 346F D0 E5		            bne SIOFRMT
   653 				            
   654 				; command PUT/GET SECTOR 
   655 3471 C9 52		NEXT5       cmp #$52            ; command GET SECTOR
   656 3473 F0 0B		            beq PUTGETSEC
   657 3475 C9 57		            cmp #$57            ; command PUT SECTOR WITH VERIFY
   658 3477 F0 07		            beq PUTGETSEC
   659 3479 C9 50		            cmp #$50            ; command PUT SECTOR
   660 347B F0 03		            beq PUTGETSEC
   661 347D 4C 72 35		REAA020     jmp RDSIOEND+3      ; error NAK, command not supported
   662 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   663 				; buffer address and calc byte count
   664 3480 A9 00		PUTGETSEC   lda #$00
   665 3482 85 32		            sta BUFRLO
   666 3484 AD 0A 03		            lda DAUX1
   667 3487 38			            sec
   668 3488 E9 01		            sbc #$01
   669 348A 85 33		            sta BUFRHI
   670 348C AD 0B 03		            lda DAUX2
   671 348F E9 00		            sbc #$00
   672 3491 06 33		            asl BUFRHI
   673 3493 2A			            rol
   674 3494 2C 08 03		            bit DBYTLO
   675 3497 30 06		            bmi L3631
   676 3499 0E 7D 35		REAA017     asl CONFSECSIZ
   677 349C 06 33		            asl BUFRHI
   678 349E 2A			            rol
   679 349F AA			L3631       tax                 ; set X with memory bank number
   680 34A0 A5 33		            lda BUFRHI
   681 34A2 4A			            lsr
   682 34A3 4A			            lsr
   683 34A4 66 32		            ror BUFRLO
   684 34A6 09 80		            ora #$80
   685 34A8 85 33		            sta BUFRHI
   686 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   687 				; set buffer address in copy loops
   688 34AA A5 32		            lda BUFRLO
   689 34AC 8D 16 35		REAA021     sta GETADRLP+1
   690 34AF 8D 4C 35		REAA022     sta PUTADRLP+1
   691 34B2 A5 33		            lda BUFRHI
   692 34B4 8D 17 35		REAA023     sta GETADRLP+2
   693 34B7 8D 4D 35		REAA024     sta PUTADRLP+2            
   694 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   695 				; check for GET
   696 34BA AD 02 03		            lda DCOMND
   697 34BD C9 52		            cmp #$52
   698 34BF F0 0A		            beq L3656           ; is GET
   699 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   700 				; PUT: put user data to buffer            
   701 34C1 A0 7F		            ldy #$7F
   702 34C3 B1 34		L364B       lda (BFENLO),Y
   703 34C5 99 83 35		REAA005     sta BUFFERXX1,Y
   704 34C8 88			            dey
   705 34C9 10 F8		            bpl L364B
   706 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   707 				; check if bank number is in range            
   708 34CB E0 20		L3656       cpx #$20            ; check bank number
   709 34CD B0 AE		            bcs REAA020         ; intermediate jmp to NAK
   710 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   711 34CF			            M_cart_push         ; save register
Macro: M_CART_PUSH [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 34CF AD A6 D5		            lda TCMOSL
     2 34D2 48			            pha
     3 34D3 AD A7 D5		            lda TCMOFR
     4 34D6 48			            pha
     5 34D7 AD A0 D5		            lda TCPBRL
     6 34DA 48			            pha
     7 34DB AD A1 D5		            lda TCPBRH
     8 34DE 48			            pha
     9 34DF AD A2 D5		            lda TCPBEN
    10 34E2 48			            pha
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   712 34E3 A9 01		            lda #$01
   713 34E5 85 42		            sta CRITIC
   714 34E7 A5 14		            lda RTCLOK+2
   715 34E9 C5 14		WAITLOOP2   cmp RTCLOK+2
   716 34EB F0 FC		            beq WAITLOOP2
   717 34ED 78			            sei                 ; 40 cycles
   718 34EE A9 00		            lda #$00
   719 34F0 8D 0E D4		            sta NMIEN
   720 34F3			            M_cart_set          ; set bank, number in X
Macro: M_CART_SET [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     2 34F3 A9 21		            lda #TCMOSL.16K         ; set 2x8k mode at $8000-$BFFF
     3 34F5 8D A6 D5		            sta TCMOSL          
     4 34F8 A9 03		            lda #TCMOFR.PBRAM       ; set to RAM
     5 34FA 8D A7 D5		            sta TCMOFR
     6 34FD 8A			            txa
     7 34FE 0A			            asl   
     8 34FF 8D A0 D5		            sta TCPBRL              ; get bank number from X
     9 3502 A9 00		            lda #$00                     
    10 3504 8D A1 D5		            sta TCPBRH              ; set high to $00
    11 3507 A9 01		            lda #$01
    12 3509 8D A2 D5		            sta TCPBEN              ; enable        
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   721 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   722 				; check for PUT
   723 350C A0 7F		            ldy #$7F            ; 9 cycles
   724 350E AD 02 03		            lda DCOMND
   725 3511 C9 52		            cmp #$52
   726 3513 D0 33		            bne L369B           ; is PUT
   727 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   728 				; GET: read data to buffer
   729 3515			L367B
   730 				;            lda (BUFRLO),Y      ; 6 cycles
   731 3515 B9 FF FF		GETADRLP    lda $FFFF,Y
   732 3518 99 83 35		REAA006     sta BUFFERXX1,Y     ; 5 cycles +
   733 351B 88			            dey                 ; 2 cycles +
   734 351C 10 F7		            bpl L367B           ; 4 cycles + * 128 = 2176
   735 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   736 				; restore bank for write to user buffer
   737 351E			            M_cart_pop          ; restore register            
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 351E 68			            pla                 
     2 351F 8D A2 D5		            sta TCPBEN          
     3 3522 68			            pla                 
     4 3523 8D A1 D5		            sta TCPBRH          
     5 3526 68			            pla                 
     6 3527 8D A0 D5		            sta TCPBRL          
     7 352A 68			            pla                 
     8 352B 8D A7 D5		            sta TCMOFR          
     9 352E 68			            pla                 
    10 352F 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   738 3532 A9 E0		            lda #$E0            ; enable interrupts
   739 3534 8D 0E D4		            sta NMIEN
   740 3537 58			            cli
   741 3538 A9 00		            lda #$00
   742 353A 85 42		            sta CRITIC          ; 54 cycles
   743 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;            
   744 				; GET: write buffer to user data            
   745 353C A0 7F		            ldy #$7F
   746 353E			L368E
   747 353E B9 83 35		REAA008     lda BUFFERXX1,Y
   748 3541 91 34		            sta (BFENLO),Y
   749 3543 88			            dey
   750 3544 10 F8		            bpl L368E
   751 3546 30 27		            bmi RDSIOEND
   752 				            
   753 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   754 				; PUT: buffer data to sector
   755 3548			L369B
   756 3548 B9 83 35		REAA007     lda BUFFERXX1,Y   ; 5 cycles                
   757 				;            sta (BUFRLO),Y    ; 6 cycles +              
   758 354B 99 FF FF		PUTADRLP    sta $FFFF,Y
   759 354E 88			            dey               ; 2 cycles +              
   760 354F 10 F7		            bpl L369B         ; 4 cycles + * 128 = 2176 
   761 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   762 				; restore register
   763 3551			            M_cart_pop          ; restore register
Macro: M_CART_POP [Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM]
     1 3551 68			            pla                 
     2 3552 8D A2 D5		            sta TCPBEN          
     3 3555 68			            pla                 
     4 3556 8D A1 D5		            sta TCPBRH          
     5 3559 68			            pla                 
     6 355A 8D A0 D5		            sta TCPBRL          
     7 355D 68			            pla                 
     8 355E 8D A7 D5		            sta TCMOFR          
     9 3561 68			            pla                 
    10 3562 8D A6 D5		            sta TCMOSL          
Source: /Users/holger/Documents/ATARI-XL/Projects/RAMCART/SpartaDOS 3/RAMCART.ASM
   764 3565 A9 E0		            lda #$E0            ; enable interrupts
   765 3567 8D 0E D4		            sta NMIEN
   766 356A 58			            cli
   767 356B A9 00		            lda #$00
   768 356D 85 42		            sta CRITIC          ; 54 cycles
   769 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   770 				; enable interrupts and set rc            
   771 356F A0 01		RDSIOEND    ldy #$01
   772 3571 2C A0 8B		            bit $8BA0           ; $2c, ldy #$8b; bank/sector number error #139 NAK
   773
   774 3574 98			            tya                 ; set RC
   775 3575 60			            rts
   776 				            
   777 				; drive configuration buffer
   778 3576 28 01 12		CONFBUF     .byte $28,$01,$12
   779 3579 00			L36BB       .byte $00
   780 357A 00 00 00		            .byte $00,$00,$00
   781 357D 80			CONFSECSIZ  .byte $80                   ; $80 -> 128Byte, $00 -> 256Byte
   782 357E FF 00 00 00		            .byte $FF,$00,$00,$00
   783
   784 3582 01			DRVNUM      .byte $01
   785 				; $80 for 128Bytes ($100 for 256Bytes)
   786 3583			BUFFERXX1
   787 				;            org $37E6
   788 = 3603			REAEND      = BUFFERXX1 + $80
   789 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   790 				;;; END OF REALLOC BLOCK
   791 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   792
   793
   794 				; $20 Bytes
   795 = 3603			BNKSAVBUF   = REAEND
   796
   797 				; $20 bytes
   798 				;            org $3806
   799 = 3623			BNKSAVBUF2  = BNKSAVBUF + $20
   800
   801 				 
   802 				;           org $3826
   803 3583			            org BNKSAVBUF2 + $20
   804 				; realloc whole addresses
   805 3643-3755> 07 32		REATAB      .word REAA001+1 ;$33CA
   806 3645 11 32		            .word REAA002+1 ;$33D4
   807 3647 18 32		            .word REAA003+1 ;$33DB
   808 3649 F8 33		            .word REAA004+1 ;$3583
   809 364B C6 34		            .word REAA005+1 ;$364E
   810 364D 19 35		            .word REAA006+1 ;$367E
   811 364F 49 35		            .word REAA007+1 ;$369C
   812 3651 3F 35		            .word REAA008+1 ;$368F
   813 3653 11 34		            .word REAA009+1 ;$35A5
   814 3655 18 34		            .word REAA010+1 ;$35AC
   815 3657 32 34		            .word REAA011+1 ;$35C6
   816 3659 46 34		            .word REAA012+1 ;$35D8
   817 365B 4D 34		            .word REAA013+1 ;$35DF
   818 365D 50 34		            .word REAA014+1 ;$35E2
   819 365F 68 34		            .word REAA015+1 ;$35FA
   820 3661 6D 34		            .word REAA016+1 ;$35FF
   821 3663 9A 34		            .word REAA017+1 ;$362C
   822 3665 7E 34		            .word REAA020+1 ;$3610
   823 3667 AD 34		            .word REAA021+1
   824 3669 B0 34		            .word REAA022+1
   825 366B B5 34		            .word REAA023+1
   826 366D B8 34		            .word REAA024+1
   827 366F 00 00		            .word $0000
   828 				 
   829 				; realloc address low byte           
   830 3671 EE 31		            .word REAL001+1 ;$33B1
   831 3673 0A 32		            .word REAL002+1 ;$33CD
   832 3675 E3 33		            .word REAL003+1 ;$356E
   833 3677 00 00		            .word $0000
   834 				; realloc address high byte (address to high byte and value of low byte)
   835 3679 F2 31		            .word REAH001+1  ;$33B5
   836 367B DF			            .byte <JSRDOSINI ;$6A
   837 				                        
   838 367C 14 32		            .word REAH002+1 ;$33D7
   839 367E ED			            .byte <RAMDSIO  ;$78
   840 				            
   841 367F E8 33		            .word REAH003+1  ;$3573
   842 3681 03			            .byte <REAEND    ;$E6
   843 				            
   844
   845 3682 00 00		            .word $0000
   846 				            
   847 3684 A9 00		REASTART    lda #$00
   848 3686 8D 56 37		            sta REALOOPCNT
   849 3689 AE 56 37		REALOOP     ldx REALOOPCNT
   850 368C BD 48 37		            lda REATABADR,X
   851 368F 8D 2E 37		            sta L3910+1
   852 3692 BD 49 37		            lda REATABADR+1,X
   853 3695 8D 2F 37		            sta L3910+2
   854 3698 0D 2E 37		            ora L3910+1
   855 369B D0 01		            bne L3881
   856 369D 60			            rts
   857 				            
   858 369E 38			L3881       sec
   859 369F BD 4C 37		            lda READSTADR,X
   860 36A2 FD 4A 37		            sbc REASRCADR,X
   861 36A5 8D 57 37		            sta READIFLO
   862 36A8 BD 4D 37		            lda READSTADR+1,X
   863 36AB FD 4B 37		            sbc REASRCADR+1,X
   864 36AE 8D 58 37		            sta READIFHI
   865 				            
   866 36B1 20 39 37		L3894       jsr L391C
   867 36B4 F0 13		            beq L38AC
   868 36B6 B1 D7		            lda ($D7),Y
   869 36B8 18			            clc
   870 36B9 6D 57 37		            adc READIFLO
   871 36BC 91 D7		            sta ($D7),Y
   872 36BE C8			            iny
   873 36BF B1 D7		            lda ($D7),Y
   874 36C1 6D 58 37		            adc READIFHI
   875 36C4 91 D7		            sta ($D7),Y
   876 36C6 4C B1 36		            jmp L3894
   877 36C9 20 39 37		L38AC       jsr L391C
   878 36CC F0 0B		            beq L38BC
   879 36CE B1 D7		            lda ($D7),Y
   880 36D0 18			            clc
   881 36D1 6D 57 37		            adc READIFLO
   882 36D4 91 D7		            sta ($D7),Y
   883 36D6 4C C9 36		            jmp L38AC
   884 36D9 20 39 37		L38BC       jsr L391C
   885 36DC F0 11		            beq L38D2
   886 36DE 20 2D 37		            jsr L3910
   887 36E1 18			            clc
   888 36E2 6D 57 37		            adc READIFLO
   889 36E5 B1 D7		            lda ($D7),Y
   890 36E7 6D 58 37		            adc READIFHI
   891 36EA 91 D7		            sta ($D7),Y
   892 36EC 4C D9 36		            jmp L38BC
   893 36EF AE 56 37		L38D2       ldx REALOOPCNT
   894
   895 36F2 BD 4E 37		            lda CPYFROMADR,X
   896 36F5 8D 10 37		            sta L38F2+1
   897 36F8 BD 4F 37		            lda CPYFROMADR+1,X
   898 36FB 8D 11 37		            sta L38F2+2
   899
   900 36FE BD 52 37		            lda CPYTOADR,X
   901 3701 8D 13 37		            sta L38F2+4
   902 3704 BD 53 37		            lda CPYTOADR+1,X
   903 3707 8D 14 37		            sta L38F2+5
   904
   905 370A BC 51 37		            ldy CPYLENGTH+1,X
   906 370D A2 00		            ldx #$00
   907 370F BD FF FF		L38F2       lda $FFFF,X
   908 3712 9D FF FF		            sta $FFFF,X
   909 3715 E8			            inx
   910 3716 D0 F7		            bne L38F2
   911 3718 EE 11 37		            inc L38F2+2
   912 371B EE 14 37		            inc L38F2+5
   913 371E 88			            dey
   914 371F 10 EE		            bpl L38F2
   915 3721 AD 56 37		            lda REALOOPCNT
   916 3724 18			            clc
   917 3725 69 0C		            adc #$0C
   918 3727 8D 56 37		            sta REALOOPCNT
   919 372A 4C 89 36		            jmp REALOOP
   920 				            
   921 372D AD FF FF		L3910       lda $FFFF
   922 3730 EE 2E 37		            inc L3910+1
   923 3733 D0 03		            bne L391B
   924 3735 EE 2F 37		            inc L3910+2
   925 3738 60			L391B       rts
   926
   927 3739 20 2D 37		L391C       jsr L3910
   928 373C 85 D7		            sta $D7
   929 373E 20 2D 37		            jsr L3910
   930 3741 A0 00		            ldy #$00
   931 3743 85 D8		            sta $D8
   932 3745 05 D7		            ora $D7
   933 3747 60			            rts
   934
   935 				; realloc code pointer
   936 3748 43 36		REATABADR   .word REATAB
   937 374A DF 33		REASRCADR   .word REABEGIN
   938 374C FF FF		READSTADR   .word $FFFF
   939 				; copy code pointer
   940 374E DF 33		CPYFROMADR  .word REABEGIN
   941 3750 24 02		CPYLENGTH   .word REAEND-REABEGIN ;$027C
   942 3752 FF FF		CPYTOADR    .word $FFFF
   943 3754 00 00		            .word $0000
   944 				            
   945 				; $01 byte
   946 3756			REALOOPCNT  ;= $392B
   947 = 3757			READIFLO   = REALOOPCNT+1
   948 = 3758			READIFHI   = READIFLO+1
   949
   950
   951 				         
