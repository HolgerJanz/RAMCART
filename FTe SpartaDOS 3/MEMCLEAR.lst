mads 2.0.9
Source: /Users/holgerjanz/Documents/ATARI-XL/Projects/RAMCART/FTe SpartaDOS 3/MEMCLEAR.ASM
     1 				; clears memory from MEMLO to MEMTOP
     2
     3 = 02E5			MEMTOP      = $02E5
     4 = 02E7			MEMLO       = $02E7
     5 = 02FC			CH			= $02FC
     6 				; 
     7 				; CIO
     8 				; 
     9 = E456			CIOV        = $E456
    10 				; CIOCB addresses
    11 = 0340			ICHID		= $0340
    12 = 0341			ICDNO		= $0341
    13 = 0342			ICCOM       = $0342
    14 = 0343			ICSTA		= $0343
    15 = 0344			ICBAL       = $0344
    16 = 0345			ICBAH       = $0345
    17 = 0346			ICPTL		= $0346
    18 = 0347			ICPTH		= $0347
    19 = 0348			ICBLL       = $0348
    20 = 0349			ICBLH       = $0349
    21 = 034A			ICAX1		= $034a
    22 = 034B			ICAX2		= $034b
    23
    24 							org $0480
    25
    26 FFFF> 0480-0576> AD E8 + 			lda MEMLO+1
    27 0483 20 51 05					jsr convh2a
    28 0486 8E C1 04					stx adr_low
    29 0489 8C C2 04					sty adr_low+1
    30 048C AD E7 02					lda MEMLO
    31 048F 20 51 05					jsr convh2a
    32 0492 8E C3 04					stx adr_low+2
    33 0495 8C C4 04					sty adr_low+3
    34
    35 0498 AD E6 02					lda MEMTOP+1
    36 049B 20 51 05					jsr convh2a
    37 049E 8E C7 04					stx adr_high
    38 04A1 8C C8 04					sty adr_high+1
    39 04A4 AD E5 02					lda MEMTOP
    40 04A7 20 51 05					jsr convh2a
    41 04AA 8E C9 04					stx adr_high+2
    42 04AD 8C CA 04					sty adr_high+3
    43
    44 04B0 20 1E 05			        jsr PRINT
    45 04B3 43 6C 65 61 72 20 +     	    .byte 'Clear memory $' 
    46 04C1 78 78 78 78 2D 24	adr_low		.byte 'xxxx-$'
    47 04C7 79 79 79 79 20 3F + adr_high	.byte 'yyyy ? (Y)',$ff
    48
    49 04D2 20 68 05			        jsr getKey
    50 04D5 C9 2B		    	    cmp #$2B
    51 04D7 F0 0D		        	beq clear_start
    52 04D9 20 1E 05			        jsr PRINT
    53 04DC 9B 41 62 6F 72 74 +     	    .byte $9b,'Abort.',$9b,$ff 
    54 04E5 60						rts
    55
    56 04E6			clear_start
    57 04E6 AD E7 02					lda MEMLO
    58 04E9 8D F5 04					sta clear_loop+1
    59 04EC AD E8 02					lda MEMLO+1
    60 04EF 8D F6 04					sta clear_loop+2
    61 							
    62 04F2 A2 00					ldx #$00
    63 04F4 8E FF FF		clear_loop	stx $ffff
    64
    65 04F7 AD F6 04					lda clear_loop+2	; check for MEMTOP
    66 04FA CD E6 02					cmp MEMTOP+1
    67 04FD D0 08					bne clear_inc
    68 04FF AD F5 04					lda clear_loop+1
    69 0502 CD E5 02					cmp MEMTOP
    70 0505 B0 0B		            bcs clear_end
    71 				            
    72 0507 EE F5 04		clear_inc   inc clear_loop+1	; inc address
    73 050A D0 E8		            bne clear_loop
    74 050C EE F6 04					inc clear_loop+2
    75 050F 4C F4 04					jmp clear_loop
    76 							
    77 0512 20 1E 05		clear_end	jsr PRINT
    78 0515 9B 44 6F 6E 65 2E +     	    .byte $9b,'Done.',$9b,$ff 
    79 051D 60						rts
    80
    81 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    82 				;
    83 				; print subroutine            
    84 				;
    85 051E 68			print		pla
    86 051F 8D 2F 05		            sta print_iter+1
    87 0522 68			            pla
    88 0523 8D 30 05		            sta print_iter+2
    89 0526 EE 2F 05		print_loop  inc print_iter+1
    90 0529 D0 03		            bne print_iter
    91 052B EE 30 05		            inc print_iter+2
    92 052E AD FF FF		print_iter  lda $ffff
    93 0531 C9 FF		            cmp #$ff
    94 0533 F0 13		            beq print_end
    95 				            
    96 0535 A2 00		            ldx #$00			; put char
    97 0537 8E 48 03		            stx ICBLL
    98 053A 8E 49 03		            stx ICBLH
    99 053D A0 0B		            ldy #$0B
   100 053F 8C 42 03		            sty ICCOM
   101 0542 20 56 E4		            jsr CIOV
   102 				            
   103 0545 4C 26 05		            jmp print_loop
   104 0548 AD 30 05		print_end   lda print_iter+2
   105 054B 48			            pha
   106 054C AD 2F 05		            lda print_iter+1
   107 054F 48			            pha
   108 0550 60			            rts
   109
   110 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   111 				;
   112 				; convert hex to atascii
   113 				;   hex A -> atascii X,Y            
   114 				;
   115 0551 48			convh2a		pha
   116 0552 4A						lsr
   117 0553 4A						lsr
   118 0554 4A						lsr
   119 0555 4A						lsr
   120 0556 F8						sed		
   121 0557 18						clc
   122 0558 69 90					adc #$90
   123 055A 69 40					adc #$40
   124 055C AA						tax
   125 055D 68						pla
   126 055E 29 0F					and #$0f
   127 0560 18						clc
   128 0561 69 90					adc #$90
   129 0563 69 40					adc #$40
   130 0565 A8						tay
   131 0566 D8						cld			
   132 0567 60						rts
   133
   134 				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   135 				;
   136 				; get key
   137 				;
   138 0568			getKey
   139 0568 A9 FF				lda #$FF		; check for key
   140 056A AA					tax
   141 056B CD FC 02				cmp CH
   142 056E F0 F8				beq getKey
   143 0570 AD FC 02				lda CH
   144 0573 8E FC 02				stx CH
   145 0576 60					rts
   146 							
